

Microchip Technology PIC LITE Macro Assembler V1.10 build 47796 
                                                                                               Fri Sep 21 03:28:58 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 47796
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 47796"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F88
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 46 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    43  0000                     INDF equ 00h ;# 
    44                           # 52 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    45  0001                     TMR0 equ 01h ;# 
    46                           # 58 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    47  0002                     PCL equ 02h ;# 
    48                           # 64 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    49  0003                     STATUS equ 03h ;# 
    50                           # 151 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    51  0004                     FSR equ 04h ;# 
    52                           # 157 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    53  0005                     PORTA equ 05h ;# 
    54                           # 218 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    55  0006                     PORTB equ 06h ;# 
    56                           # 279 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    57  000A                     PCLATH equ 0Ah ;# 
    58                           # 298 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    59  000B                     INTCON equ 0Bh ;# 
    60                           # 375 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    61  000C                     PIR1 equ 0Ch ;# 
    62                           # 430 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    63  000D                     PIR2 equ 0Dh ;# 
    64                           # 463 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    65  000E                     TMR1 equ 0Eh ;# 
    66                           # 469 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    67  000E                     TMR1L equ 0Eh ;# 
    68                           # 475 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    69  000F                     TMR1H equ 0Fh ;# 
    70                           # 481 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    71  0010                     T1CON equ 010h ;# 
    72                           # 552 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    73  0011                     TMR2 equ 011h ;# 
    74                           # 558 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    75  0012                     T2CON equ 012h ;# 
    76                           # 628 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    77  0013                     SSPBUF equ 013h ;# 
    78                           # 634 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    79  0014                     SSPCON equ 014h ;# 
    80                           # 703 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    81  0015                     CCPR1 equ 015h ;# 
    82                           # 709 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    83  0015                     CCPR1L equ 015h ;# 
    84                           # 715 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    85  0016                     CCPR1H equ 016h ;# 
    86                           # 721 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    87  0017                     CCP1CON equ 017h ;# 
    88                           # 778 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    89  0018                     RCSTA equ 018h ;# 
    90                           # 872 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    91  0019                     TXREG equ 019h ;# 
    92                           # 878 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    93  001A                     RCREG equ 01Ah ;# 
    94                           # 884 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    95  001E                     ADRESH equ 01Eh ;# 
    96                           # 890 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    97  001F                     ADCON0 equ 01Fh ;# 
    98                           # 985 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
    99  0081                     OPTION_REG equ 081h ;# 
   100                           # 1054 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   101  0085                     TRISA equ 085h ;# 
   102                           # 1115 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   103  0086                     TRISB equ 086h ;# 
   104                           # 1176 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   105  008C                     PIE1 equ 08Ch ;# 
   106                           # 1231 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   107  008D                     PIE2 equ 08Dh ;# 
   108                           # 1264 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   109  008E                     PCON equ 08Eh ;# 
   110                           # 1297 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   111  008F                     OSCCON equ 08Fh ;# 
   112                           # 1367 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   113  0090                     OSCTUNE equ 090h ;# 
   114                           # 1424 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   115  0092                     PR2 equ 092h ;# 
   116                           # 1430 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   117  0093                     SSPADD equ 093h ;# 
   118                           # 1436 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   119  0094                     SSPSTAT equ 094h ;# 
   120                           # 1604 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   121  0098                     TXSTA equ 098h ;# 
   122                           # 1684 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   123  0099                     SPBRG equ 099h ;# 
   124                           # 1690 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   125  009B                     ANSEL equ 09Bh ;# 
   126                           # 1745 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   127  009C                     CMCON equ 09Ch ;# 
   128                           # 1814 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   129  009D                     CVRCON equ 09Dh ;# 
   130                           # 1878 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   131  009E                     ADRESL equ 09Eh ;# 
   132                           # 1884 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   133  009F                     ADCON1 equ 09Fh ;# 
   134                           # 1931 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   135  0105                     WDTCON equ 0105h ;# 
   136                           # 1988 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   137  010C                     EEDATA equ 010Ch ;# 
   138                           # 1994 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   139  010D                     EEADR equ 010Dh ;# 
   140                           # 2000 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   141  010E                     EEDATH equ 010Eh ;# 
   142                           # 2006 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   143  010F                     EEADRH equ 010Fh ;# 
   144                           # 2012 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   145  018C                     EECON1 equ 018Ch ;# 
   146                           # 2062 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   147  018D                     EECON2 equ 018Dh ;# 
   148                           # 46 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   149  0000                     INDF equ 00h ;# 
   150                           # 52 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   151  0001                     TMR0 equ 01h ;# 
   152                           # 58 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   153  0002                     PCL equ 02h ;# 
   154                           # 64 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   155  0003                     STATUS equ 03h ;# 
   156                           # 151 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   157  0004                     FSR equ 04h ;# 
   158                           # 157 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   159  0005                     PORTA equ 05h ;# 
   160                           # 218 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   161  0006                     PORTB equ 06h ;# 
   162                           # 279 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   163  000A                     PCLATH equ 0Ah ;# 
   164                           # 298 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   165  000B                     INTCON equ 0Bh ;# 
   166                           # 375 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   167  000C                     PIR1 equ 0Ch ;# 
   168                           # 430 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   169  000D                     PIR2 equ 0Dh ;# 
   170                           # 463 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   171  000E                     TMR1 equ 0Eh ;# 
   172                           # 469 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   173  000E                     TMR1L equ 0Eh ;# 
   174                           # 475 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   175  000F                     TMR1H equ 0Fh ;# 
   176                           # 481 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   177  0010                     T1CON equ 010h ;# 
   178                           # 552 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   179  0011                     TMR2 equ 011h ;# 
   180                           # 558 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   181  0012                     T2CON equ 012h ;# 
   182                           # 628 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   183  0013                     SSPBUF equ 013h ;# 
   184                           # 634 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   185  0014                     SSPCON equ 014h ;# 
   186                           # 703 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   187  0015                     CCPR1 equ 015h ;# 
   188                           # 709 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   189  0015                     CCPR1L equ 015h ;# 
   190                           # 715 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   191  0016                     CCPR1H equ 016h ;# 
   192                           # 721 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   193  0017                     CCP1CON equ 017h ;# 
   194                           # 778 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   195  0018                     RCSTA equ 018h ;# 
   196                           # 872 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   197  0019                     TXREG equ 019h ;# 
   198                           # 878 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   199  001A                     RCREG equ 01Ah ;# 
   200                           # 884 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   201  001E                     ADRESH equ 01Eh ;# 
   202                           # 890 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   203  001F                     ADCON0 equ 01Fh ;# 
   204                           # 985 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   205  0081                     OPTION_REG equ 081h ;# 
   206                           # 1054 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   207  0085                     TRISA equ 085h ;# 
   208                           # 1115 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   209  0086                     TRISB equ 086h ;# 
   210                           # 1176 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   211  008C                     PIE1 equ 08Ch ;# 
   212                           # 1231 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   213  008D                     PIE2 equ 08Dh ;# 
   214                           # 1264 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   215  008E                     PCON equ 08Eh ;# 
   216                           # 1297 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   217  008F                     OSCCON equ 08Fh ;# 
   218                           # 1367 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   219  0090                     OSCTUNE equ 090h ;# 
   220                           # 1424 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   221  0092                     PR2 equ 092h ;# 
   222                           # 1430 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   223  0093                     SSPADD equ 093h ;# 
   224                           # 1436 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   225  0094                     SSPSTAT equ 094h ;# 
   226                           # 1604 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   227  0098                     TXSTA equ 098h ;# 
   228                           # 1684 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   229  0099                     SPBRG equ 099h ;# 
   230                           # 1690 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   231  009B                     ANSEL equ 09Bh ;# 
   232                           # 1745 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   233  009C                     CMCON equ 09Ch ;# 
   234                           # 1814 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   235  009D                     CVRCON equ 09Dh ;# 
   236                           # 1878 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   237  009E                     ADRESL equ 09Eh ;# 
   238                           # 1884 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   239  009F                     ADCON1 equ 09Fh ;# 
   240                           # 1931 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   241  0105                     WDTCON equ 0105h ;# 
   242                           # 1988 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   243  010C                     EEDATA equ 010Ch ;# 
   244                           # 1994 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   245  010D                     EEADR equ 010Dh ;# 
   246                           # 2000 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   247  010E                     EEDATH equ 010Eh ;# 
   248                           # 2006 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   249  010F                     EEADRH equ 010Fh ;# 
   250                           # 2012 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   251  018C                     EECON1 equ 018Ch ;# 
   252                           # 2062 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   253  018D                     EECON2 equ 018Dh ;# 
   254                           # 46 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   255  0000                     INDF equ 00h ;# 
   256                           # 52 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   257  0001                     TMR0 equ 01h ;# 
   258                           # 58 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   259  0002                     PCL equ 02h ;# 
   260                           # 64 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   261  0003                     STATUS equ 03h ;# 
   262                           # 151 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   263  0004                     FSR equ 04h ;# 
   264                           # 157 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   265  0005                     PORTA equ 05h ;# 
   266                           # 218 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   267  0006                     PORTB equ 06h ;# 
   268                           # 279 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   269  000A                     PCLATH equ 0Ah ;# 
   270                           # 298 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   271  000B                     INTCON equ 0Bh ;# 
   272                           # 375 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   273  000C                     PIR1 equ 0Ch ;# 
   274                           # 430 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   275  000D                     PIR2 equ 0Dh ;# 
   276                           # 463 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   277  000E                     TMR1 equ 0Eh ;# 
   278                           # 469 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   279  000E                     TMR1L equ 0Eh ;# 
   280                           # 475 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   281  000F                     TMR1H equ 0Fh ;# 
   282                           # 481 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   283  0010                     T1CON equ 010h ;# 
   284                           # 552 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   285  0011                     TMR2 equ 011h ;# 
   286                           # 558 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   287  0012                     T2CON equ 012h ;# 
   288                           # 628 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   289  0013                     SSPBUF equ 013h ;# 
   290                           # 634 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   291  0014                     SSPCON equ 014h ;# 
   292                           # 703 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   293  0015                     CCPR1 equ 015h ;# 
   294                           # 709 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   295  0015                     CCPR1L equ 015h ;# 
   296                           # 715 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   297  0016                     CCPR1H equ 016h ;# 
   298                           # 721 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   299  0017                     CCP1CON equ 017h ;# 
   300                           # 778 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   301  0018                     RCSTA equ 018h ;# 
   302                           # 872 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   303  0019                     TXREG equ 019h ;# 
   304                           # 878 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   305  001A                     RCREG equ 01Ah ;# 
   306                           # 884 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   307  001E                     ADRESH equ 01Eh ;# 
   308                           # 890 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   309  001F                     ADCON0 equ 01Fh ;# 
   310                           # 985 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   311  0081                     OPTION_REG equ 081h ;# 
   312                           # 1054 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   313  0085                     TRISA equ 085h ;# 
   314                           # 1115 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   315  0086                     TRISB equ 086h ;# 
   316                           # 1176 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   317  008C                     PIE1 equ 08Ch ;# 
   318                           # 1231 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   319  008D                     PIE2 equ 08Dh ;# 
   320                           # 1264 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   321  008E                     PCON equ 08Eh ;# 
   322                           # 1297 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   323  008F                     OSCCON equ 08Fh ;# 
   324                           # 1367 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   325  0090                     OSCTUNE equ 090h ;# 
   326                           # 1424 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   327  0092                     PR2 equ 092h ;# 
   328                           # 1430 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   329  0093                     SSPADD equ 093h ;# 
   330                           # 1436 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   331  0094                     SSPSTAT equ 094h ;# 
   332                           # 1604 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   333  0098                     TXSTA equ 098h ;# 
   334                           # 1684 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   335  0099                     SPBRG equ 099h ;# 
   336                           # 1690 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   337  009B                     ANSEL equ 09Bh ;# 
   338                           # 1745 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   339  009C                     CMCON equ 09Ch ;# 
   340                           # 1814 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   341  009D                     CVRCON equ 09Dh ;# 
   342                           # 1878 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   343  009E                     ADRESL equ 09Eh ;# 
   344                           # 1884 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   345  009F                     ADCON1 equ 09Fh ;# 
   346                           # 1931 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   347  0105                     WDTCON equ 0105h ;# 
   348                           # 1988 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   349  010C                     EEDATA equ 010Ch ;# 
   350                           # 1994 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   351  010D                     EEADR equ 010Dh ;# 
   352                           # 2000 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   353  010E                     EEDATH equ 010Eh ;# 
   354                           # 2006 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   355  010F                     EEADRH equ 010Fh ;# 
   356                           # 2012 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   357  018C                     EECON1 equ 018Ch ;# 
   358                           # 2062 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   359  018D                     EECON2 equ 018Dh ;# 
   360                           # 46 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   361  0000                     INDF equ 00h ;# 
   362                           # 52 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   363  0001                     TMR0 equ 01h ;# 
   364                           # 58 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   365  0002                     PCL equ 02h ;# 
   366                           # 64 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   367  0003                     STATUS equ 03h ;# 
   368                           # 151 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   369  0004                     FSR equ 04h ;# 
   370                           # 157 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   371  0005                     PORTA equ 05h ;# 
   372                           # 218 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   373  0006                     PORTB equ 06h ;# 
   374                           # 279 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   375  000A                     PCLATH equ 0Ah ;# 
   376                           # 298 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   377  000B                     INTCON equ 0Bh ;# 
   378                           # 375 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   379  000C                     PIR1 equ 0Ch ;# 
   380                           # 430 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   381  000D                     PIR2 equ 0Dh ;# 
   382                           # 463 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   383  000E                     TMR1 equ 0Eh ;# 
   384                           # 469 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   385  000E                     TMR1L equ 0Eh ;# 
   386                           # 475 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   387  000F                     TMR1H equ 0Fh ;# 
   388                           # 481 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   389  0010                     T1CON equ 010h ;# 
   390                           # 552 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   391  0011                     TMR2 equ 011h ;# 
   392                           # 558 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   393  0012                     T2CON equ 012h ;# 
   394                           # 628 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   395  0013                     SSPBUF equ 013h ;# 
   396                           # 634 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   397  0014                     SSPCON equ 014h ;# 
   398                           # 703 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   399  0015                     CCPR1 equ 015h ;# 
   400                           # 709 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   401  0015                     CCPR1L equ 015h ;# 
   402                           # 715 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   403  0016                     CCPR1H equ 016h ;# 
   404                           # 721 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   405  0017                     CCP1CON equ 017h ;# 
   406                           # 778 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   407  0018                     RCSTA equ 018h ;# 
   408                           # 872 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   409  0019                     TXREG equ 019h ;# 
   410                           # 878 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   411  001A                     RCREG equ 01Ah ;# 
   412                           # 884 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   413  001E                     ADRESH equ 01Eh ;# 
   414                           # 890 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   415  001F                     ADCON0 equ 01Fh ;# 
   416                           # 985 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   417  0081                     OPTION_REG equ 081h ;# 
   418                           # 1054 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   419  0085                     TRISA equ 085h ;# 
   420                           # 1115 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   421  0086                     TRISB equ 086h ;# 
   422                           # 1176 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   423  008C                     PIE1 equ 08Ch ;# 
   424                           # 1231 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   425  008D                     PIE2 equ 08Dh ;# 
   426                           # 1264 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   427  008E                     PCON equ 08Eh ;# 
   428                           # 1297 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   429  008F                     OSCCON equ 08Fh ;# 
   430                           # 1367 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   431  0090                     OSCTUNE equ 090h ;# 
   432                           # 1424 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   433  0092                     PR2 equ 092h ;# 
   434                           # 1430 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   435  0093                     SSPADD equ 093h ;# 
   436                           # 1436 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   437  0094                     SSPSTAT equ 094h ;# 
   438                           # 1604 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   439  0098                     TXSTA equ 098h ;# 
   440                           # 1684 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   441  0099                     SPBRG equ 099h ;# 
   442                           # 1690 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   443  009B                     ANSEL equ 09Bh ;# 
   444                           # 1745 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   445  009C                     CMCON equ 09Ch ;# 
   446                           # 1814 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   447  009D                     CVRCON equ 09Dh ;# 
   448                           # 1878 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   449  009E                     ADRESL equ 09Eh ;# 
   450                           # 1884 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   451  009F                     ADCON1 equ 09Fh ;# 
   452                           # 1931 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   453  0105                     WDTCON equ 0105h ;# 
   454                           # 1988 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   455  010C                     EEDATA equ 010Ch ;# 
   456                           # 1994 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   457  010D                     EEADR equ 010Dh ;# 
   458                           # 2000 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   459  010E                     EEDATH equ 010Eh ;# 
   460                           # 2006 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   461  010F                     EEADRH equ 010Fh ;# 
   462                           # 2012 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   463  018C                     EECON1 equ 018Ch ;# 
   464                           # 2062 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   465  018D                     EECON2 equ 018Dh ;# 
   466                           # 46 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   467  0000                     INDF equ 00h ;# 
   468                           # 52 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   469  0001                     TMR0 equ 01h ;# 
   470                           # 58 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   471  0002                     PCL equ 02h ;# 
   472                           # 64 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   473  0003                     STATUS equ 03h ;# 
   474                           # 151 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   475  0004                     FSR equ 04h ;# 
   476                           # 157 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   477  0005                     PORTA equ 05h ;# 
   478                           # 218 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   479  0006                     PORTB equ 06h ;# 
   480                           # 279 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   481  000A                     PCLATH equ 0Ah ;# 
   482                           # 298 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   483  000B                     INTCON equ 0Bh ;# 
   484                           # 375 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   485  000C                     PIR1 equ 0Ch ;# 
   486                           # 430 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   487  000D                     PIR2 equ 0Dh ;# 
   488                           # 463 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   489  000E                     TMR1 equ 0Eh ;# 
   490                           # 469 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   491  000E                     TMR1L equ 0Eh ;# 
   492                           # 475 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   493  000F                     TMR1H equ 0Fh ;# 
   494                           # 481 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   495  0010                     T1CON equ 010h ;# 
   496                           # 552 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   497  0011                     TMR2 equ 011h ;# 
   498                           # 558 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   499  0012                     T2CON equ 012h ;# 
   500                           # 628 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   501  0013                     SSPBUF equ 013h ;# 
   502                           # 634 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   503  0014                     SSPCON equ 014h ;# 
   504                           # 703 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   505  0015                     CCPR1 equ 015h ;# 
   506                           # 709 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   507  0015                     CCPR1L equ 015h ;# 
   508                           # 715 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   509  0016                     CCPR1H equ 016h ;# 
   510                           # 721 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   511  0017                     CCP1CON equ 017h ;# 
   512                           # 778 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   513  0018                     RCSTA equ 018h ;# 
   514                           # 872 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   515  0019                     TXREG equ 019h ;# 
   516                           # 878 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   517  001A                     RCREG equ 01Ah ;# 
   518                           # 884 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   519  001E                     ADRESH equ 01Eh ;# 
   520                           # 890 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   521  001F                     ADCON0 equ 01Fh ;# 
   522                           # 985 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   523  0081                     OPTION_REG equ 081h ;# 
   524                           # 1054 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   525  0085                     TRISA equ 085h ;# 
   526                           # 1115 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   527  0086                     TRISB equ 086h ;# 
   528                           # 1176 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   529  008C                     PIE1 equ 08Ch ;# 
   530                           # 1231 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   531  008D                     PIE2 equ 08Dh ;# 
   532                           # 1264 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   533  008E                     PCON equ 08Eh ;# 
   534                           # 1297 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   535  008F                     OSCCON equ 08Fh ;# 
   536                           # 1367 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   537  0090                     OSCTUNE equ 090h ;# 
   538                           # 1424 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   539  0092                     PR2 equ 092h ;# 
   540                           # 1430 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   541  0093                     SSPADD equ 093h ;# 
   542                           # 1436 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   543  0094                     SSPSTAT equ 094h ;# 
   544                           # 1604 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   545  0098                     TXSTA equ 098h ;# 
   546                           # 1684 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   547  0099                     SPBRG equ 099h ;# 
   548                           # 1690 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   549  009B                     ANSEL equ 09Bh ;# 
   550                           # 1745 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   551  009C                     CMCON equ 09Ch ;# 
   552                           # 1814 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   553  009D                     CVRCON equ 09Dh ;# 
   554                           # 1878 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   555  009E                     ADRESL equ 09Eh ;# 
   556                           # 1884 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   557  009F                     ADCON1 equ 09Fh ;# 
   558                           # 1931 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   559  0105                     WDTCON equ 0105h ;# 
   560                           # 1988 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   561  010C                     EEDATA equ 010Ch ;# 
   562                           # 1994 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   563  010D                     EEADR equ 010Dh ;# 
   564                           # 2000 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   565  010E                     EEDATH equ 010Eh ;# 
   566                           # 2006 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   567  010F                     EEADRH equ 010Fh ;# 
   568                           # 2012 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   569  018C                     EECON1 equ 018Ch ;# 
   570                           # 2062 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   571  018D                     EECON2 equ 018Dh ;# 
   572                           # 46 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   573  0000                     INDF equ 00h ;# 
   574                           # 52 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   575  0001                     TMR0 equ 01h ;# 
   576                           # 58 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   577  0002                     PCL equ 02h ;# 
   578                           # 64 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   579  0003                     STATUS equ 03h ;# 
   580                           # 151 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   581  0004                     FSR equ 04h ;# 
   582                           # 157 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   583  0005                     PORTA equ 05h ;# 
   584                           # 218 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   585  0006                     PORTB equ 06h ;# 
   586                           # 279 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   587  000A                     PCLATH equ 0Ah ;# 
   588                           # 298 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   589  000B                     INTCON equ 0Bh ;# 
   590                           # 375 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   591  000C                     PIR1 equ 0Ch ;# 
   592                           # 430 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   593  000D                     PIR2 equ 0Dh ;# 
   594                           # 463 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   595  000E                     TMR1 equ 0Eh ;# 
   596                           # 469 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   597  000E                     TMR1L equ 0Eh ;# 
   598                           # 475 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   599  000F                     TMR1H equ 0Fh ;# 
   600                           # 481 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   601  0010                     T1CON equ 010h ;# 
   602                           # 552 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   603  0011                     TMR2 equ 011h ;# 
   604                           # 558 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   605  0012                     T2CON equ 012h ;# 
   606                           # 628 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   607  0013                     SSPBUF equ 013h ;# 
   608                           # 634 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   609  0014                     SSPCON equ 014h ;# 
   610                           # 703 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   611  0015                     CCPR1 equ 015h ;# 
   612                           # 709 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   613  0015                     CCPR1L equ 015h ;# 
   614                           # 715 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   615  0016                     CCPR1H equ 016h ;# 
   616                           # 721 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   617  0017                     CCP1CON equ 017h ;# 
   618                           # 778 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   619  0018                     RCSTA equ 018h ;# 
   620                           # 872 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   621  0019                     TXREG equ 019h ;# 
   622                           # 878 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   623  001A                     RCREG equ 01Ah ;# 
   624                           # 884 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   625  001E                     ADRESH equ 01Eh ;# 
   626                           # 890 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   627  001F                     ADCON0 equ 01Fh ;# 
   628                           # 985 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   629  0081                     OPTION_REG equ 081h ;# 
   630                           # 1054 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   631  0085                     TRISA equ 085h ;# 
   632                           # 1115 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   633  0086                     TRISB equ 086h ;# 
   634                           # 1176 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   635  008C                     PIE1 equ 08Ch ;# 
   636                           # 1231 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   637  008D                     PIE2 equ 08Dh ;# 
   638                           # 1264 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   639  008E                     PCON equ 08Eh ;# 
   640                           # 1297 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   641  008F                     OSCCON equ 08Fh ;# 
   642                           # 1367 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   643  0090                     OSCTUNE equ 090h ;# 
   644                           # 1424 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   645  0092                     PR2 equ 092h ;# 
   646                           # 1430 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   647  0093                     SSPADD equ 093h ;# 
   648                           # 1436 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   649  0094                     SSPSTAT equ 094h ;# 
   650                           # 1604 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   651  0098                     TXSTA equ 098h ;# 
   652                           # 1684 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   653  0099                     SPBRG equ 099h ;# 
   654                           # 1690 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   655  009B                     ANSEL equ 09Bh ;# 
   656                           # 1745 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   657  009C                     CMCON equ 09Ch ;# 
   658                           # 1814 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   659  009D                     CVRCON equ 09Dh ;# 
   660                           # 1878 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   661  009E                     ADRESL equ 09Eh ;# 
   662                           # 1884 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   663  009F                     ADCON1 equ 09Fh ;# 
   664                           # 1931 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   665  0105                     WDTCON equ 0105h ;# 
   666                           # 1988 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   667  010C                     EEDATA equ 010Ch ;# 
   668                           # 1994 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   669  010D                     EEADR equ 010Dh ;# 
   670                           # 2000 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   671  010E                     EEDATH equ 010Eh ;# 
   672                           # 2006 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   673  010F                     EEADRH equ 010Fh ;# 
   674                           # 2012 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   675  018C                     EECON1 equ 018Ch ;# 
   676                           # 2062 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   677  018D                     EECON2 equ 018Dh ;# 
   678                           # 46 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   679  0000                     INDF equ 00h ;# 
   680                           # 52 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   681  0001                     TMR0 equ 01h ;# 
   682                           # 58 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   683  0002                     PCL equ 02h ;# 
   684                           # 64 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   685  0003                     STATUS equ 03h ;# 
   686                           # 151 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   687  0004                     FSR equ 04h ;# 
   688                           # 157 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   689  0005                     PORTA equ 05h ;# 
   690                           # 218 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   691  0006                     PORTB equ 06h ;# 
   692                           # 279 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   693  000A                     PCLATH equ 0Ah ;# 
   694                           # 298 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   695  000B                     INTCON equ 0Bh ;# 
   696                           # 375 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   697  000C                     PIR1 equ 0Ch ;# 
   698                           # 430 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   699  000D                     PIR2 equ 0Dh ;# 
   700                           # 463 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   701  000E                     TMR1 equ 0Eh ;# 
   702                           # 469 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   703  000E                     TMR1L equ 0Eh ;# 
   704                           # 475 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   705  000F                     TMR1H equ 0Fh ;# 
   706                           # 481 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   707  0010                     T1CON equ 010h ;# 
   708                           # 552 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   709  0011                     TMR2 equ 011h ;# 
   710                           # 558 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   711  0012                     T2CON equ 012h ;# 
   712                           # 628 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   713  0013                     SSPBUF equ 013h ;# 
   714                           # 634 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   715  0014                     SSPCON equ 014h ;# 
   716                           # 703 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   717  0015                     CCPR1 equ 015h ;# 
   718                           # 709 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   719  0015                     CCPR1L equ 015h ;# 
   720                           # 715 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   721  0016                     CCPR1H equ 016h ;# 
   722                           # 721 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   723  0017                     CCP1CON equ 017h ;# 
   724                           # 778 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   725  0018                     RCSTA equ 018h ;# 
   726                           # 872 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   727  0019                     TXREG equ 019h ;# 
   728                           # 878 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   729  001A                     RCREG equ 01Ah ;# 
   730                           # 884 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   731  001E                     ADRESH equ 01Eh ;# 
   732                           # 890 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   733  001F                     ADCON0 equ 01Fh ;# 
   734                           # 985 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   735  0081                     OPTION_REG equ 081h ;# 
   736                           # 1054 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   737  0085                     TRISA equ 085h ;# 
   738                           # 1115 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   739  0086                     TRISB equ 086h ;# 
   740                           # 1176 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   741  008C                     PIE1 equ 08Ch ;# 
   742                           # 1231 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   743  008D                     PIE2 equ 08Dh ;# 
   744                           # 1264 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   745  008E                     PCON equ 08Eh ;# 
   746                           # 1297 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   747  008F                     OSCCON equ 08Fh ;# 
   748                           # 1367 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   749  0090                     OSCTUNE equ 090h ;# 
   750                           # 1424 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   751  0092                     PR2 equ 092h ;# 
   752                           # 1430 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   753  0093                     SSPADD equ 093h ;# 
   754                           # 1436 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   755  0094                     SSPSTAT equ 094h ;# 
   756                           # 1604 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   757  0098                     TXSTA equ 098h ;# 
   758                           # 1684 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   759  0099                     SPBRG equ 099h ;# 
   760                           # 1690 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   761  009B                     ANSEL equ 09Bh ;# 
   762                           # 1745 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   763  009C                     CMCON equ 09Ch ;# 
   764                           # 1814 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   765  009D                     CVRCON equ 09Dh ;# 
   766                           # 1878 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   767  009E                     ADRESL equ 09Eh ;# 
   768                           # 1884 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   769  009F                     ADCON1 equ 09Fh ;# 
   770                           # 1931 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   771  0105                     WDTCON equ 0105h ;# 
   772                           # 1988 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   773  010C                     EEDATA equ 010Ch ;# 
   774                           # 1994 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   775  010D                     EEADR equ 010Dh ;# 
   776                           # 2000 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   777  010E                     EEDATH equ 010Eh ;# 
   778                           # 2006 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   779  010F                     EEADRH equ 010Fh ;# 
   780                           # 2012 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   781  018C                     EECON1 equ 018Ch ;# 
   782                           # 2062 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   783  018D                     EECON2 equ 018Dh ;# 
   784                           # 46 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   785  0000                     INDF equ 00h ;# 
   786                           # 52 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   787  0001                     TMR0 equ 01h ;# 
   788                           # 58 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   789  0002                     PCL equ 02h ;# 
   790                           # 64 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   791  0003                     STATUS equ 03h ;# 
   792                           # 151 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   793  0004                     FSR equ 04h ;# 
   794                           # 157 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   795  0005                     PORTA equ 05h ;# 
   796                           # 218 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   797  0006                     PORTB equ 06h ;# 
   798                           # 279 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   799  000A                     PCLATH equ 0Ah ;# 
   800                           # 298 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   801  000B                     INTCON equ 0Bh ;# 
   802                           # 375 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   803  000C                     PIR1 equ 0Ch ;# 
   804                           # 430 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   805  000D                     PIR2 equ 0Dh ;# 
   806                           # 463 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   807  000E                     TMR1 equ 0Eh ;# 
   808                           # 469 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   809  000E                     TMR1L equ 0Eh ;# 
   810                           # 475 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   811  000F                     TMR1H equ 0Fh ;# 
   812                           # 481 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   813  0010                     T1CON equ 010h ;# 
   814                           # 552 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   815  0011                     TMR2 equ 011h ;# 
   816                           # 558 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   817  0012                     T2CON equ 012h ;# 
   818                           # 628 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   819  0013                     SSPBUF equ 013h ;# 
   820                           # 634 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   821  0014                     SSPCON equ 014h ;# 
   822                           # 703 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   823  0015                     CCPR1 equ 015h ;# 
   824                           # 709 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   825  0015                     CCPR1L equ 015h ;# 
   826                           # 715 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   827  0016                     CCPR1H equ 016h ;# 
   828                           # 721 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   829  0017                     CCP1CON equ 017h ;# 
   830                           # 778 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   831  0018                     RCSTA equ 018h ;# 
   832                           # 872 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   833  0019                     TXREG equ 019h ;# 
   834                           # 878 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   835  001A                     RCREG equ 01Ah ;# 
   836                           # 884 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   837  001E                     ADRESH equ 01Eh ;# 
   838                           # 890 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   839  001F                     ADCON0 equ 01Fh ;# 
   840                           # 985 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   841  0081                     OPTION_REG equ 081h ;# 
   842                           # 1054 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   843  0085                     TRISA equ 085h ;# 
   844                           # 1115 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   845  0086                     TRISB equ 086h ;# 
   846                           # 1176 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   847  008C                     PIE1 equ 08Ch ;# 
   848                           # 1231 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   849  008D                     PIE2 equ 08Dh ;# 
   850                           # 1264 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   851  008E                     PCON equ 08Eh ;# 
   852                           # 1297 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   853  008F                     OSCCON equ 08Fh ;# 
   854                           # 1367 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   855  0090                     OSCTUNE equ 090h ;# 
   856                           # 1424 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   857  0092                     PR2 equ 092h ;# 
   858                           # 1430 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   859  0093                     SSPADD equ 093h ;# 
   860                           # 1436 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   861  0094                     SSPSTAT equ 094h ;# 
   862                           # 1604 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   863  0098                     TXSTA equ 098h ;# 
   864                           # 1684 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   865  0099                     SPBRG equ 099h ;# 
   866                           # 1690 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   867  009B                     ANSEL equ 09Bh ;# 
   868                           # 1745 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   869  009C                     CMCON equ 09Ch ;# 
   870                           # 1814 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   871  009D                     CVRCON equ 09Dh ;# 
   872                           # 1878 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   873  009E                     ADRESL equ 09Eh ;# 
   874                           # 1884 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   875  009F                     ADCON1 equ 09Fh ;# 
   876                           # 1931 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   877  0105                     WDTCON equ 0105h ;# 
   878                           # 1988 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   879  010C                     EEDATA equ 010Ch ;# 
   880                           # 1994 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   881  010D                     EEADR equ 010Dh ;# 
   882                           # 2000 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   883  010E                     EEDATH equ 010Eh ;# 
   884                           # 2006 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   885  010F                     EEADRH equ 010Fh ;# 
   886                           # 2012 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   887  018C                     EECON1 equ 018Ch ;# 
   888                           # 2062 "C:\Program Files\Microchip\xc8\v1.10\include\pic16f88.h"
   889  018D                     EECON2 equ 018Dh ;# 
   890                           	FNCALL	_main,_hw_init
   891                           	FNCALL	_main,_int_init
   892                           	FNCALL	_main,_vfd_data_init
   893                           	FNCALL	_main,_vfd_init
   894                           	FNCALL	_main,___awtofl
   895                           	FNCALL	_main,___fladd
   896                           	FNCALL	_main,___fldiv
   897                           	FNCALL	_main,___fltol
   898                           	FNCALL	_main,___flmul
   899                           	FNCALL	_main,___flge
   900                           	FNCALL	_main,_strcpy
   901                           	FNCALL	_main,_DoubletoAscii
   902                           	FNCALL	_main,_strcat
   903                           	FNCALL	_main,_vfd_write
   904                           	FNCALL	_hw_init,_Adc_init
   905                           	FNCALL	_vfd_data_init,_strcpy
   906                           	FNCALL	_vfd_init,_vfd_write
   907                           	FNCALL	_vfd_init,_strcpy
   908                           	FNCALL	_DoubletoAscii,___flge
   909                           	FNCALL	_DoubletoAscii,___flmul
   910                           	FNCALL	_DoubletoAscii,___fladd
   911                           	FNCALL	_DoubletoAscii,___fltol
   912                           	FNCALL	_DoubletoAscii,_Power
   913                           	FNCALL	_DoubletoAscii,___aldiv
   914                           	FNCALL	_DoubletoAscii,___almod
   915                           	FNCALL	_Power,___lmul
   916                           	FNCALL	___fladd,___flpack
   917                           	FNCALL	___fldiv,___flpack
   918                           	FNCALL	___flmul,___flpack
   919                           	FNCALL	___awtofl,___flpack
   920                           	FNROOT	_main
   921                           	FNCALL	intlevel1,_int_ctrl
   922                           	global	intlevel1
   923                           	FNROOT	intlevel1
   924                           	global	_Rly_str
   925                           psect	idataBANK3,class=CODE,space=0,delta=2
   926                           global __pidataBANK3
   927  0A99                     __pidataBANK3:
   928                           	file	"C:\PIC_WorkSpace\AquaTempFan\main.c"
   929                           	line	23
   930                           
   931                           ;initializer for _Rly_str
   932  0A99  3446               	retlw	046h
   933  0A9A  3441               	retlw	041h
   934  0A9B  344E               	retlw	04Eh
   935  0A9C  3420               	retlw	020h
   936  0A9D  3420               	retlw	020h
   937  0A9E  3420               	retlw	020h
   938  0A9F  3420               	retlw	020h
   939  0AA0  3420               	retlw	020h
   940  0AA1  3420               	retlw	020h
   941  0AA2  3420               	retlw	020h
   942  0AA3  3420               	retlw	020h
   943  0AA4  3420               	retlw	020h
   944  0AA5  3420               	retlw	020h
   945  0AA6  3420               	retlw	020h
   946  0AA7  344F               	retlw	04Fh
   947  0AA8  344E               	retlw	04Eh
   948  0AA9  3400               	retlw	0
   949  0AAA  3446               	retlw	046h
   950  0AAB  3441               	retlw	041h
   951  0AAC  344E               	retlw	04Eh
   952  0AAD  3420               	retlw	020h
   953  0AAE  3420               	retlw	020h
   954  0AAF  3420               	retlw	020h
   955  0AB0  3420               	retlw	020h
   956  0AB1  3420               	retlw	020h
   957  0AB2  3420               	retlw	020h
   958  0AB3  3420               	retlw	020h
   959  0AB4  3420               	retlw	020h
   960  0AB5  3420               	retlw	020h
   961  0AB6  3420               	retlw	020h
   962  0AB7  344F               	retlw	04Fh
   963  0AB8  3446               	retlw	046h
   964  0AB9  3446               	retlw	046h
   965  0ABA  3400               	retlw	0
   966                           	global	_ConvertStep
   967                           	global	_Cycle_Unit
   968                           	global	_T05_Counter
   969                           	global	_ADC_DATA_BUF
   970                           	global	_T1_Counter
   971                           	global	_Adc_Buf
   972                           	global	_Temp
   973                           	global	_Adc_Data
   974                           	global	_AdcDataGetFlag
   975                           	global	_Adc_point
   976                           	global	_Downside_Data
   977                           	global	_Upside_Data
   978                           	global	_Adc_data
   979                           	global	_Vfd_Data
   980                           	global	_ADCON0
   981  001F                     _ADCON0	set	0x1F
   982                           	global	_ADRESH
   983  001E                     _ADRESH	set	0x1E
   984                           	global	_PIR1
   985  000C                     _PIR1	set	0xC
   986                           	global	_PORTA
   987  0005                     _PORTA	set	0x5
   988                           	global	_PORTB
   989  0006                     _PORTB	set	0x6
   990                           	global	_TMR0
   991  0001                     _TMR0	set	0x1
   992                           	global	_ADIF
   993  0066                     _ADIF	set	0x66
   994                           	global	_ADON
   995  00F8                     _ADON	set	0xF8
   996                           	global	_GIE
   997  005F                     _GIE	set	0x5F
   998                           	global	_GO_nDONE
   999  00FA                     _GO_nDONE	set	0xFA
  1000                           	global	_INT0IE
  1001  005C                     _INT0IE	set	0x5C
  1002                           	global	_INT0IF
  1003  0059                     _INT0IF	set	0x59
  1004                           	global	_PEIE
  1005  005E                     _PEIE	set	0x5E
  1006                           	global	_RB0
  1007  0030                     _RB0	set	0x30
  1008                           	global	_RB2
  1009  0032                     _RB2	set	0x32
  1010                           	global	_RB3
  1011  0033                     _RB3	set	0x33
  1012                           	global	_RB5
  1013  0035                     _RB5	set	0x35
  1014                           	global	_RBIE
  1015  005B                     _RBIE	set	0x5B
  1016                           	global	_RBIF
  1017  0058                     _RBIF	set	0x58
  1018                           	global	_TMR0IE
  1019  005D                     _TMR0IE	set	0x5D
  1020                           	global	_TMR0IF
  1021  005A                     _TMR0IF	set	0x5A
  1022                           	global	_ADCON1
  1023  009F                     _ADCON1	set	0x9F
  1024                           	global	_ADRESL
  1025  009E                     _ADRESL	set	0x9E
  1026                           	global	_ANSEL
  1027  009B                     _ANSEL	set	0x9B
  1028                           	global	_OSCCON
  1029  008F                     _OSCCON	set	0x8F
  1030                           	global	_TRISA
  1031  0085                     _TRISA	set	0x85
  1032                           	global	_TRISB
  1033  0086                     _TRISB	set	0x86
  1034                           	global	_ADIE
  1035  0466                     _ADIE	set	0x466
  1036                           	global	_CCP1IE
  1037  0462                     _CCP1IE	set	0x462
  1038                           	global	_INTEDG
  1039  040E                     _INTEDG	set	0x40E
  1040                           	global	_PS0
  1041  0408                     _PS0	set	0x408
  1042                           	global	_PS1
  1043  0409                     _PS1	set	0x409
  1044                           	global	_PS2
  1045  040A                     _PS2	set	0x40A
  1046                           	global	_PSA
  1047  040B                     _PSA	set	0x40B
  1048                           	global	_RCIE
  1049  0465                     _RCIE	set	0x465
  1050                           	global	_SSPIE
  1051  0463                     _SSPIE	set	0x463
  1052                           	global	_T0CS
  1053  040D                     _T0CS	set	0x40D
  1054                           	global	_T0SE
  1055  040C                     _T0SE	set	0x40C
  1056                           	global	_TMR1IE
  1057  0460                     _TMR1IE	set	0x460
  1058                           	global	_TMR2IE
  1059  0461                     _TMR2IE	set	0x461
  1060                           	global	_TXIE
  1061  0464                     _TXIE	set	0x464
  1062                           	global	_nRBPU
  1063  040F                     _nRBPU	set	0x40F
  1064                           psect	strings,class=STRING,delta=2
  1065                           global __pstrings
  1066  0800                     __pstrings:
  1067                           ;	global	stringdir,stringtab,__stringbase
  1068  0800                     stringtab:
  1069                           	global    __stringtab
  1070  0800                     __stringtab:
  1071                           ;	String table - string pointers are 1 byte each
  1072  0800  1BFF               	btfsc	(btemp+1),7
  1073  0801  280A               	ljmp	stringcode
  1074  0802  1383               	bcf	status,7
  1075  0803  187F               	btfsc	(btemp+1),0
  1076  0804  1783               	bsf	status,7
  1077  0805  0800               	movf	indf,w
  1078  0806  0A84               	incf fsr
  1079  0807  1903               skipnz
  1080  0808  0AFF               incf btemp+1
  1081  0809  0008               	return
  1082  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
  1083  080A  3008               movlw high(stringdir)
  1084  080B  008A               movwf pclath
  1085  080C  0804               movf fsr,w
  1086  080D  0A84               incf fsr
  1087  080E  0782               	addwf pc
  1088  080F                     __stringbase:
  1089  080F  3400               	retlw	0
  1090                           psect	strings
  1091                           	global    __end_of__stringtab
  1092  0810                     __end_of__stringtab:
  1093                           	global __stringdata
  1094  0810                     __stringdata:
  1095                           	
  1096  0810                     STR_4:	
  1097  0810  3420               	retlw	32	;' '
  1098  0811  3420               	retlw	32	;' '
  1099  0812  3420               	retlw	32	;' '
  1100  0813  344E               	retlw	78	;'N'
  1101  0814  346F               	retlw	111	;'o'
  1102  0815  3477               	retlw	119	;'w'
  1103  0816  3420               	retlw	32	;' '
  1104  0817  344C               	retlw	76	;'L'
  1105  0818  346F               	retlw	111	;'o'
  1106  0819  3461               	retlw	97	;'a'
  1107  081A  3464               	retlw	100	;'d'
  1108  081B  3469               	retlw	105	;'i'
  1109  081C  346E               	retlw	110	;'n'
  1110  081D  3467               	retlw	103	;'g'
  1111  081E  3420               	retlw	32	;' '
  1112  081F  3420               	retlw	32	;' '
  1113  0820  3400               	retlw	0
  1114                           psect	strings
  1115                           	
  1116  0821                     STR_5:	
  1117  0821  3430               	retlw	48	;'0'
  1118  0822  3431               	retlw	49	;'1'
  1119  0823  3432               	retlw	50	;'2'
  1120  0824  3433               	retlw	51	;'3'
  1121  0825  3434               	retlw	52	;'4'
  1122  0826  3435               	retlw	53	;'5'
  1123  0827  3436               	retlw	54	;'6'
  1124  0828  3437               	retlw	55	;'7'
  1125  0829  3438               	retlw	56	;'8'
  1126  082A  3439               	retlw	57	;'9'
  1127  082B  3441               	retlw	65	;'A'
  1128  082C  3442               	retlw	66	;'B'
  1129  082D  3443               	retlw	67	;'C'
  1130  082E  3444               	retlw	68	;'D'
  1131  082F  3445               	retlw	69	;'E'
  1132  0830  3446               	retlw	70	;'F'
  1133  0831  3400               	retlw	0
  1134                           psect	strings
  1135                           	
  1136  0832                     STR_2:	
  1137  0832  3420               	retlw	32	;' '
  1138  0833  3420               	retlw	32	;' '
  1139  0834  3420               	retlw	32	;' '
  1140  0835  3420               	retlw	32	;' '
  1141  0836  3420               	retlw	32	;' '
  1142  0837  3420               	retlw	32	;' '
  1143  0838  3420               	retlw	32	;' '
  1144  0839  3420               	retlw	32	;' '
  1145  083A  3420               	retlw	32	;' '
  1146  083B  3420               	retlw	32	;' '
  1147  083C  3420               	retlw	32	;' '
  1148  083D  3420               	retlw	32	;' '
  1149  083E  3420               	retlw	32	;' '
  1150  083F  3420               	retlw	32	;' '
  1151  0840  3420               	retlw	32	;' '
  1152  0841  3420               	retlw	32	;' '
  1153  0842  3400               	retlw	0
  1154                           psect	strings
  1155                           	
  1156  0843                     STR_1:	
  1157  0843  3454               	retlw	84	;'T'
  1158  0844  3465               	retlw	101	;'e'
  1159  0845  346D               	retlw	109	;'m'
  1160  0846  3470               	retlw	112	;'p'
  1161  0847  3420               	retlw	32	;' '
  1162  0848  3420               	retlw	32	;' '
  1163  0849  3420               	retlw	32	;' '
  1164  084A  3420               	retlw	32	;' '
  1165  084B  3420               	retlw	32	;' '
  1166  084C  3420               	retlw	32	;' '
  1167  084D  3420               	retlw	32	;' '
  1168  084E  3420               	retlw	32	;' '
  1169  084F  3420               	retlw	32	;' '
  1170  0850  3420               	retlw	32	;' '
  1171  0851  3420               	retlw	32	;' '
  1172  0852  3420               	retlw	32	;' '
  1173  0853  3400               	retlw	0
  1174                           psect	strings
  1175  0832                     STR_3	equ	STR_2+0
  1176                           	global __end_of__stringdata
  1177  0854                     __end_of__stringdata:
  1178                           ; #config settings
  1179                           global __CFG_BOREN$OFF
  1180  0000                     __CFG_BOREN$OFF equ 0x0
  1181                           global __CFG_FOSC$INTOSCIO
  1182  0000                     __CFG_FOSC$INTOSCIO equ 0x0
  1183                           global __CFG_MCLRE$OFF
  1184  0000                     __CFG_MCLRE$OFF equ 0x0
  1185                           global __CFG_WDTE$OFF
  1186  0000                     __CFG_WDTE$OFF equ 0x0
  1187                           global __CFG_LVP$OFF
  1188  0000                     __CFG_LVP$OFF equ 0x0
  1189                           global __CFG_PWRTE$ON
  1190  0000                     __CFG_PWRTE$ON equ 0x0
  1191                           global __CFG_IESO$OFF
  1192  0000                     __CFG_IESO$OFF equ 0x0
  1193                           	file	"C:\DOCUME~1\Owner\LOCALS~1\Temp\s49c."
  1194                           	line	#
  1195                           psect cinit,class=CODE,delta=2
  1196                           global start_initialization
  1197  0ABB                     start_initialization:
  1198                           
  1199                           global __initialization
  1200  0ABB                     __initialization:
  1201                           psect	bssCOMMON,class=COMMON,space=1
  1202                           global __pbssCOMMON
  1203  0070                     __pbssCOMMON:
  1204  0070                     _ConvertStep:
  1205  0070                            ds      1
  1206                           
  1207  0071                     _Cycle_Unit:
  1208  0071                            ds      1
  1209                           
  1210  0072                     _T05_Counter:
  1211  0072                            ds      1
  1212                           
  1213  0073                     _ADC_DATA_BUF:
  1214  0073                            ds      2
  1215                           
  1216                           psect	bssBANK0,class=BANK0,space=1
  1217                           global __pbssBANK0
  1218  006A                     __pbssBANK0:
  1219  006A                     _T1_Counter:
  1220  006A                            ds      2
  1221                           
  1222  006C                     _errno:
  1223  006C                            ds      2
  1224                           
  1225                           psect	bssBANK1,class=BANK1,space=1
  1226                           global __pbssBANK1
  1227  00A0                     __pbssBANK1:
  1228  00A0                     _Adc_Buf:
  1229  00A0                            ds      20
  1230                           
  1231  00B4                     _Temp:
  1232  00B4                            ds      4
  1233                           
  1234  00B8                     _Adc_Data:
  1235  00B8                            ds      2
  1236                           
  1237  00BA                     _AdcDataGetFlag:
  1238  00BA                            ds      1
  1239                           
  1240  00BB                     _Adc_point:
  1241  00BB                            ds      1
  1242                           
  1243  00BC                     _Downside_Data:
  1244  00BC                            ds      17
  1245                           
  1246  00CD                     _Upside_Data:
  1247  00CD                            ds      17
  1248                           
  1249  00DE                     _Adc_data:
  1250  00DE                            ds      2
  1251                           
  1252                           psect	bssBANK3,class=BANK3,space=1
  1253                           global __pbssBANK3
  1254  01B2                     __pbssBANK3:
  1255  01B2                     _Vfd_Data:
  1256  01B2                            ds      33
  1257                           
  1258                           psect	dataBANK3,class=BANK3,space=1
  1259                           global __pdataBANK3
  1260  0190                     __pdataBANK3:
  1261                           	file	"C:\PIC_WorkSpace\AquaTempFan\main.c"
  1262  0190                     _Rly_str:
  1263  0190                            ds      34
  1264                           
  1265                           psect clrtext,class=CODE,delta=2
  1266                           global clear_ram
  1267                           ;	Called with FSR containing the base address, and
  1268                           ;	W with the last address+1
  1269  0A65                     clear_ram:
  1270  0A65  0064               	clrwdt			;clear the watchdog before getting into this loop
  1271  0A66                     clrloop:
  1272  0A66  0180               	clrf	indf		;clear RAM location pointed to by FSR
  1273  0A67  0A84               	incf	fsr,f		;increment pointer
  1274  0A68  0604               	xorwf	fsr,w		;XOR with final address
  1275  0A69  1903               	btfsc	status,2	;have we reached the end yet?
  1276  0A6A  3400               	retlw	0		;all done for this memory range, return
  1277  0A6B  0604               	xorwf	fsr,w		;XOR again to restore value
  1278  0A6C  2A66               	goto	clrloop		;do the next byte
  1279                           
  1280                           ; Clear objects allocated to COMMON
  1281                           psect cinit,class=CODE,delta=2,merge=1
  1282  0ABB  01F0               	clrf	((__pbssCOMMON)+0)&07Fh
  1283  0ABC  01F1               	clrf	((__pbssCOMMON)+1)&07Fh
  1284  0ABD  01F2               	clrf	((__pbssCOMMON)+2)&07Fh
  1285  0ABE  01F3               	clrf	((__pbssCOMMON)+3)&07Fh
  1286  0ABF  01F4               	clrf	((__pbssCOMMON)+4)&07Fh
  1287                           ; Clear objects allocated to BANK0
  1288                           psect cinit,class=CODE,delta=2,merge=1
  1289  0AC0  01EA               	clrf	((__pbssBANK0)+0)&07Fh
  1290  0AC1  01EB               	clrf	((__pbssBANK0)+1)&07Fh
  1291  0AC2  01EC               	clrf	((__pbssBANK0)+2)&07Fh
  1292  0AC3  01ED               	clrf	((__pbssBANK0)+3)&07Fh
  1293                           ; Clear objects allocated to BANK1
  1294                           psect cinit,class=CODE,delta=2,merge=1
  1295  0AC4  1383               	bcf	status, 7	;select IRP bank0
  1296  0AC5  30A0               	movlw	low(__pbssBANK1)
  1297  0AC6  0084               	movwf	fsr
  1298  0AC7  30E0               	movlw	low((__pbssBANK1)+040h)
  1299  0AC8  158A  2265  158A   	fcall	clear_ram
  1300                           ; Clear objects allocated to BANK3
  1301                           psect cinit,class=CODE,delta=2,merge=1
  1302  0ACB  1783               	bsf	status, 7	;select IRP bank2
  1303  0ACC  30B2               	movlw	low(__pbssBANK3)
  1304  0ACD  0084               	movwf	fsr
  1305  0ACE  30D3               	movlw	low((__pbssBANK3)+021h)
  1306  0ACF  158A  2265  158A   	fcall	clear_ram
  1307                           global btemp
  1308                           psect inittext,class=CODE,delta=2
  1309                           global init_fetch,btemp
  1310                           ;	Called with low address in FSR and high address in W
  1311  0A6D                     init_fetch:
  1312  0A6D  087E               	movf btemp,w
  1313  0A6E  008A               	movwf pclath
  1314  0A6F  087F               	movf btemp+1,w
  1315  0A70  0082               	movwf pc
  1316                           global init_ram
  1317                           ;Called with:
  1318                           ;	high address of idata address in btemp 
  1319                           ;	low address of idata address in btemp+1 
  1320                           ;	low address of data in FSR
  1321                           ;	high address + 1 of data in btemp-1
  1322  0A71                     init_ram:
  1323  0A71  158A  226D  158A   	fcall init_fetch
  1324  0A74  0080               	movwf indf,f
  1325  0A75  0A84               	incf fsr,f
  1326  0A76  0804               	movf fsr,w
  1327  0A77  067D               	xorwf btemp-1,w
  1328  0A78  1903               	btfsc status,2
  1329  0A79  3400               	retlw 0
  1330  0A7A  0AFF               	incf btemp+1,f
  1331  0A7B  1903               	btfsc status,2
  1332  0A7C  0AFE               	incf btemp,f
  1333  0A7D  2A71               	goto init_ram
  1334                           ; Initialize objects allocated to BANK3
  1335                           psect cinit,class=CODE,delta=2,merge=1
  1336                           global init_ram, __pidataBANK3
  1337  0AD2  30B2               	movlw low(__pdataBANK3+34)
  1338  0AD3  00FD               	movwf btemp-1,f
  1339  0AD4  300A               	movlw high(__pidataBANK3)
  1340  0AD5  00FE               	movwf btemp,f
  1341  0AD6  3099               	movlw low(__pidataBANK3)
  1342  0AD7  00FF               	movwf btemp+1,f
  1343  0AD8  3090               	movlw low(__pdataBANK3)
  1344  0AD9  0084               	movwf fsr,f
  1345  0ADA  158A  2271  158A   	fcall init_ram
  1346                           psect cinit,class=CODE,delta=2,merge=1
  1347                           global end_of_initialization,__end_of__initialization
  1348                           
  1349                           ;End of C runtime variable initialization code
  1350                           
  1351  0ADD                     end_of_initialization:
  1352  0ADD                     __end_of__initialization:clrf status
      + 0ADD  0183               	clrf	3
  1353  0ADE  118A  2813         ljmp _main	;jump to C main() function
  1354                           psect	cstackBANK1,class=BANK1,space=1
  1355                           global __pcstackBANK1
  1356  00E0                     __pcstackBANK1:
  1357                           	global	DoubletoAscii@flg
  1358  00E0                     DoubletoAscii@flg:	; 1 bytes @ 0x0
  1359  00E0                     	ds	1
  1360                           	global	DoubletoAscii@databuf
  1361  00E1                     DoubletoAscii@databuf:	; 1 bytes @ 0x1
  1362  00E1                     	ds	1
  1363                           	global	DoubletoAscii@int_data
  1364  00E2                     DoubletoAscii@int_data:	; 2 bytes @ 0x2
  1365  00E2                     	ds	2
  1366                           	global	DoubletoAscii@dec
  1367  00E4                     DoubletoAscii@dec:	; 1 bytes @ 0x4
  1368  00E4                     	ds	1
  1369                           	global	DoubletoAscii@i
  1370  00E5                     DoubletoAscii@i:	; 1 bytes @ 0x5
  1371  00E5                     	ds	1
  1372                           	global	main@sum
  1373  00E6                     main@sum:	; 4 bytes @ 0x6
  1374  00E6                     	ds	4
  1375                           	global	main@i
  1376  00EA                     main@i:	; 1 bytes @ 0xA
  1377  00EA                     	ds	1
  1378                           psect	cstackCOMMON,class=COMMON,space=1
  1379                           global __pcstackCOMMON
  1380  0075                     __pcstackCOMMON:
  1381  0075                     ?_vfd_data_init:	; 0 bytes @ 0x0
  1382  0075                     ?_vfd_init:	; 0 bytes @ 0x0
  1383  0075                     ?_vfd_write:	; 0 bytes @ 0x0
  1384  0075                     ?_Adc_init:	; 0 bytes @ 0x0
  1385  0075                     ?_hw_init:	; 0 bytes @ 0x0
  1386  0075                     ?_int_init:	; 0 bytes @ 0x0
  1387  0075                     ?_int_ctrl:	; 0 bytes @ 0x0
  1388  0075                     ??_int_ctrl:	; 0 bytes @ 0x0
  1389  0075                     ?_main:	; 0 bytes @ 0x0
  1390  0075                     	ds	5
  1391                           psect	cstackBANK0,class=BANK0,space=1
  1392                           global __pcstackBANK0
  1393  0020                     __pcstackBANK0:
  1394  0020                     ??_vfd_write:	; 0 bytes @ 0x0
  1395  0020                     ??_Adc_init:	; 0 bytes @ 0x0
  1396  0020                     ??_int_init:	; 0 bytes @ 0x0
  1397                           	global	?___flge
  1398  0020                     ?___flge:	; 1 bit 
  1399                           	global	?_strcat
  1400  0020                     ?_strcat:	; 1 bytes @ 0x0
  1401                           	global	?_strcpy
  1402  0020                     ?_strcpy:	; 2 bytes @ 0x0
  1403                           	global	?___flpack
  1404  0020                     ?___flpack:	; 4 bytes @ 0x0
  1405                           	global	?___lmul
  1406  0020                     ?___lmul:	; 4 bytes @ 0x0
  1407                           	global	strcat@from
  1408  0020                     strcat@from:	; 1 bytes @ 0x0
  1409                           	global	strcpy@to
  1410  0020                     strcpy@to:	; 2 bytes @ 0x0
  1411                           	global	___lmul@multiplier
  1412  0020                     ___lmul@multiplier:	; 4 bytes @ 0x0
  1413                           	global	___flge@ff1
  1414  0020                     ___flge@ff1:	; 4 bytes @ 0x0
  1415                           	global	___flpack@arg
  1416  0020                     ___flpack@arg:	; 4 bytes @ 0x0
  1417  0020                     	ds	1
  1418  0021                     ??_strcat:	; 0 bytes @ 0x1
  1419                           	global	Adc_init@i
  1420  0021                     Adc_init@i:	; 1 bytes @ 0x1
  1421  0021                     	ds	1
  1422  0022                     ??_hw_init:	; 0 bytes @ 0x2
  1423                           	global	vfd_write@data
  1424  0022                     vfd_write@data:	; 1 bytes @ 0x2
  1425                           	global	strcat@to
  1426  0022                     strcat@to:	; 1 bytes @ 0x2
  1427                           	global	strcpy@from
  1428  0022                     strcpy@from:	; 2 bytes @ 0x2
  1429  0022                     	ds	1
  1430                           	global	vfd_write@i
  1431  0023                     vfd_write@i:	; 1 bytes @ 0x3
  1432                           	global	strcat@cp
  1433  0023                     strcat@cp:	; 1 bytes @ 0x3
  1434  0023                     	ds	1
  1435  0024                     ??_strcpy:	; 0 bytes @ 0x4
  1436                           	global	vfd_write@txdata
  1437  0024                     vfd_write@txdata:	; 1 bytes @ 0x4
  1438                           	global	___flpack@exp
  1439  0024                     ___flpack@exp:	; 1 bytes @ 0x4
  1440                           	global	___lmul@multiplicand
  1441  0024                     ___lmul@multiplicand:	; 4 bytes @ 0x4
  1442                           	global	___flge@ff2
  1443  0024                     ___flge@ff2:	; 4 bytes @ 0x4
  1444  0024                     	ds	1
  1445                           	global	___flpack@sign
  1446  0025                     ___flpack@sign:	; 1 bytes @ 0x5
  1447  0025                     	ds	1
  1448  0026                     ??___flpack:	; 0 bytes @ 0x6
  1449  0026                     	ds	2
  1450  0028                     ??___lmul:	; 0 bytes @ 0x8
  1451  0028                     ??___flge:	; 0 bytes @ 0x8
  1452  0028                     	ds	1
  1453                           	global	strcpy@cp
  1454  0029                     strcpy@cp:	; 2 bytes @ 0x9
  1455                           	global	___lmul@product
  1456  0029                     ___lmul@product:	; 4 bytes @ 0x9
  1457  0029                     	ds	1
  1458                           	global	?___fldiv
  1459  002A                     ?___fldiv:	; 4 bytes @ 0xA
  1460                           	global	?___awtofl
  1461  002A                     ?___awtofl:	; 4 bytes @ 0xA
  1462                           	global	___awtofl@c
  1463  002A                     ___awtofl@c:	; 2 bytes @ 0xA
  1464                           	global	___fldiv@f2
  1465  002A                     ___fldiv@f2:	; 4 bytes @ 0xA
  1466  002A                     	ds	1
  1467  002B                     ??_vfd_data_init:	; 0 bytes @ 0xB
  1468  002B                     ??_vfd_init:	; 0 bytes @ 0xB
  1469  002B                     	ds	1
  1470                           	global	vfd_init@busy_flag
  1471  002C                     vfd_init@busy_flag:	; 1 bytes @ 0xC
  1472  002C                     	ds	1
  1473                           	global	?_Power
  1474  002D                     ?_Power:	; 4 bytes @ 0xD
  1475                           	global	vfd_init@i
  1476  002D                     vfd_init@i:	; 1 bytes @ 0xD
  1477                           	global	Power@data
  1478  002D                     Power@data:	; 4 bytes @ 0xD
  1479  002D                     	ds	1
  1480  002E                     ??___awtofl:	; 0 bytes @ 0xE
  1481                           	global	___fldiv@f1
  1482  002E                     ___fldiv@f1:	; 4 bytes @ 0xE
  1483  002E                     	ds	2
  1484                           	global	___awtofl@sign
  1485  0030                     ___awtofl@sign:	; 1 bytes @ 0x10
  1486  0030                     	ds	1
  1487                           	global	?___flmul
  1488  0031                     ?___flmul:	; 4 bytes @ 0x11
  1489                           	global	Power@num
  1490  0031                     Power@num:	; 1 bytes @ 0x11
  1491                           	global	___flmul@f1
  1492  0031                     ___flmul@f1:	; 4 bytes @ 0x11
  1493  0031                     	ds	1
  1494  0032                     ??_Power:	; 0 bytes @ 0x12
  1495  0032                     ??___fldiv:	; 0 bytes @ 0x12
  1496  0032                     	ds	1
  1497                           	global	Power@i
  1498  0033                     Power@i:	; 1 bytes @ 0x13
  1499  0033                     	ds	1
  1500                           	global	Power@result
  1501  0034                     Power@result:	; 4 bytes @ 0x14
  1502  0034                     	ds	1
  1503                           	global	___flmul@f2
  1504  0035                     ___flmul@f2:	; 4 bytes @ 0x15
  1505  0035                     	ds	2
  1506                           	global	___fldiv@f3
  1507  0037                     ___fldiv@f3:	; 4 bytes @ 0x17
  1508  0037                     	ds	1
  1509                           	global	?___almod
  1510  0038                     ?___almod:	; 4 bytes @ 0x18
  1511                           	global	?___aldiv
  1512  0038                     ?___aldiv:	; 4 bytes @ 0x18
  1513                           	global	___almod@divisor
  1514  0038                     ___almod@divisor:	; 4 bytes @ 0x18
  1515                           	global	___aldiv@divisor
  1516  0038                     ___aldiv@divisor:	; 4 bytes @ 0x18
  1517  0038                     	ds	1
  1518  0039                     ??___flmul:	; 0 bytes @ 0x19
  1519  0039                     	ds	2
  1520                           	global	___fldiv@cntr
  1521  003B                     ___fldiv@cntr:	; 1 bytes @ 0x1B
  1522  003B                     	ds	1
  1523                           	global	___fldiv@exp
  1524  003C                     ___fldiv@exp:	; 1 bytes @ 0x1C
  1525                           	global	___almod@dividend
  1526  003C                     ___almod@dividend:	; 4 bytes @ 0x1C
  1527                           	global	___aldiv@dividend
  1528  003C                     ___aldiv@dividend:	; 4 bytes @ 0x1C
  1529  003C                     	ds	1
  1530                           	global	___fldiv@sign
  1531  003D                     ___fldiv@sign:	; 1 bytes @ 0x1D
  1532  003D                     	ds	1
  1533                           	global	___flmul@exp
  1534  003E                     ___flmul@exp:	; 1 bytes @ 0x1E
  1535  003E                     	ds	1
  1536                           	global	___flmul@f3_as_product
  1537  003F                     ___flmul@f3_as_product:	; 4 bytes @ 0x1F
  1538  003F                     	ds	1
  1539  0040                     ??___almod:	; 0 bytes @ 0x20
  1540  0040                     ??___aldiv:	; 0 bytes @ 0x20
  1541  0040                     	ds	1
  1542                           	global	___almod@counter
  1543  0041                     ___almod@counter:	; 1 bytes @ 0x21
  1544                           	global	___aldiv@counter
  1545  0041                     ___aldiv@counter:	; 1 bytes @ 0x21
  1546  0041                     	ds	1
  1547                           	global	___almod@sign
  1548  0042                     ___almod@sign:	; 1 bytes @ 0x22
  1549                           	global	___aldiv@sign
  1550  0042                     ___aldiv@sign:	; 1 bytes @ 0x22
  1551  0042                     	ds	1
  1552                           	global	___flmul@cntr
  1553  0043                     ___flmul@cntr:	; 1 bytes @ 0x23
  1554                           	global	___aldiv@quotient
  1555  0043                     ___aldiv@quotient:	; 4 bytes @ 0x23
  1556  0043                     	ds	1
  1557                           	global	___flmul@sign
  1558  0044                     ___flmul@sign:	; 1 bytes @ 0x24
  1559  0044                     	ds	1
  1560                           	global	?___fladd
  1561  0045                     ?___fladd:	; 4 bytes @ 0x25
  1562                           	global	___fladd@f1
  1563  0045                     ___fladd@f1:	; 4 bytes @ 0x25
  1564  0045                     	ds	4
  1565                           	global	___fladd@f2
  1566  0049                     ___fladd@f2:	; 4 bytes @ 0x29
  1567  0049                     	ds	4
  1568  004D                     ??___fladd:	; 0 bytes @ 0x2D
  1569  004D                     	ds	5
  1570                           	global	___fladd@sign
  1571  0052                     ___fladd@sign:	; 1 bytes @ 0x32
  1572  0052                     	ds	1
  1573                           	global	___fladd@exp2
  1574  0053                     ___fladd@exp2:	; 1 bytes @ 0x33
  1575  0053                     	ds	1
  1576                           	global	___fladd@exp1
  1577  0054                     ___fladd@exp1:	; 1 bytes @ 0x34
  1578  0054                     	ds	1
  1579                           	global	?___fltol
  1580  0055                     ?___fltol:	; 4 bytes @ 0x35
  1581                           	global	___fltol@f1
  1582  0055                     ___fltol@f1:	; 4 bytes @ 0x35
  1583  0055                     	ds	4
  1584  0059                     ??___fltol:	; 0 bytes @ 0x39
  1585  0059                     	ds	5
  1586                           	global	___fltol@sign1
  1587  005E                     ___fltol@sign1:	; 1 bytes @ 0x3E
  1588  005E                     	ds	1
  1589                           	global	___fltol@exp1
  1590  005F                     ___fltol@exp1:	; 1 bytes @ 0x3F
  1591  005F                     	ds	1
  1592                           	global	?_DoubletoAscii
  1593  0060                     ?_DoubletoAscii:	; 0 bytes @ 0x40
  1594                           	global	DoubletoAscii@data
  1595  0060                     DoubletoAscii@data:	; 4 bytes @ 0x40
  1596  0060                     	ds	4
  1597                           	global	DoubletoAscii@ascii
  1598  0064                     DoubletoAscii@ascii:	; 1 bytes @ 0x44
  1599  0064                     	ds	1
  1600  0065                     ??_DoubletoAscii:	; 0 bytes @ 0x45
  1601  0065                     	ds	2
  1602  0067                     ??_main:	; 0 bytes @ 0x47
  1603  0067                     	ds	3
  1604                           ;!
  1605                           ;!Data Sizes:
  1606                           ;!    Strings     68
  1607                           ;!    Constant    0
  1608                           ;!    Data        34
  1609                           ;!    BSS         106
  1610                           ;!    Persistent  0
  1611                           ;!    Stack       0
  1612                           ;!
  1613                           ;!Auto Spaces:
  1614                           ;!    Space          Size  Autos    Used
  1615                           ;!    COMMON           14      5      10
  1616                           ;!    BANK0            80     74      78
  1617                           ;!    BANK1            80     11      75
  1618                           ;!    BANK3            96      0      67
  1619                           ;!    BANK2            96      0       0
  1620                           
  1621                           ;!
  1622                           ;!Pointer List with Targets:
  1623                           ;!
  1624                           ;!    ?___flpack	 size(1) Largest target is 2
  1625                           ;!		 -> Adc_data(BANK1[2]), ADC_DATA_BUF(COMMON[2]), 
  1626                           ;!
  1627                           ;!    ?___lmul	unsigned long  size(1) Largest target is 0
  1628                           ;!
  1629                           ;!    ?___almod	long  size(1) Largest target is 2
  1630                           ;!		 -> Adc_data(BANK1[2]), 
  1631                           ;!
  1632                           ;!    ?___aldiv	long  size(1) Largest target is 0
  1633                           ;!
  1634                           ;!    ?_Power	long  size(1) Largest target is 0
  1635                           ;!
  1636                           ;!    ?___fltol	long  size(1) Largest target is 0
  1637                           ;!
  1638                           ;!    ?_strcat	PTR unsigned char  size(1) Largest target is 33
  1639                           ;!		 -> Vfd_Data(BANK3[33]), 
  1640                           ;!
  1641                           ;!    ?_strcpy	PTR unsigned char  size(2) Largest target is 33
  1642                           ;!		 -> Vfd_Data(BANK3[33]), Upside_Data(BANK1[17]), Downside_Data(BANK1[17]), 
  1643                           ;!
  1644                           ;!    ?___flmul	PTR unsigned char  size(1) Largest target is 0
  1645                           ;!
  1646                           ;!    ?___fldiv	PTR unsigned char  size(1) Largest target is 0
  1647                           ;!
  1648                           ;!    ?___fladd	PTR unsigned char  size(1) Largest target is 2
  1649                           ;!		 -> Adc_data(BANK1[2]), 
  1650                           ;!
  1651                           ;!    ?___awtofl	PTR unsigned char  size(1) Largest target is 0
  1652                           ;!
  1653                           ;!    strcpy@from	PTR const unsigned char  size(2) Largest target is 34
  1654                           ;!		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), 
  1655                           ;!		 -> STR_1(CODE[17]), Upside_Data(BANK1[17]), Rly_str(BANK3[34]), 
  1656                           ;!
  1657                           ;!    strcpy@to	PTR unsigned char  size(2) Largest target is 33
  1658                           ;!		 -> Vfd_Data(BANK3[33]), Upside_Data(BANK1[17]), Downside_Data(BANK1[17]), 
  1659                           ;!
  1660                           ;!    strcpy@cp	PTR unsigned char  size(2) Largest target is 33
  1661                           ;!		 -> Vfd_Data(BANK3[33]), Upside_Data(BANK1[17]), Downside_Data(BANK1[17]), 
  1662                           ;!
  1663                           ;!    strcat@from	PTR const unsigned char  size(1) Largest target is 17
  1664                           ;!		 -> Downside_Data(BANK1[17]), 
  1665                           ;!
  1666                           ;!    strcat@to	PTR unsigned char  size(1) Largest target is 33
  1667                           ;!		 -> Vfd_Data(BANK3[33]), 
  1668                           ;!
  1669                           ;!    strcat@cp	PTR unsigned char  size(1) Largest target is 33
  1670                           ;!		 -> Vfd_Data(BANK3[33]), 
  1671                           ;!
  1672                           ;!    DoubletoAscii@ascii	PTR unsigned char  size(1) Largest target is 17
  1673                           ;!		 -> Upside_Data(BANK1[17]), 
  1674                           ;!
  1675                           ;!    sp__strcat	PTR unsigned char  size(1) Largest target is 33
  1676                           ;!		 -> Vfd_Data(BANK3[33]), 
  1677                           ;!
  1678                           ;!    sp__strcpy	PTR unsigned char  size(2) Largest target is 33
  1679                           ;!		 -> Vfd_Data(BANK3[33]), Upside_Data(BANK1[17]), Downside_Data(BANK1[17]), 
  1680                           ;!
  1681                           
  1682                           
  1683                           ;!
  1684                           ;!Critical Paths under _main in COMMON
  1685                           ;!
  1686                           ;!    None.
  1687                           ;!
  1688                           ;!Critical Paths under _int_ctrl in COMMON
  1689                           ;!
  1690                           ;!    None.
  1691                           ;!
  1692                           ;!Critical Paths under _main in BANK0
  1693                           ;!
  1694                           ;!    _main->_DoubletoAscii
  1695                           ;!    _hw_init->_Adc_init
  1696                           ;!    _vfd_data_init->_strcpy
  1697                           ;!    _vfd_init->_strcpy
  1698                           ;!    _DoubletoAscii->___fltol
  1699                           ;!    _Power->___lmul
  1700                           ;!    ___fladd->___flmul
  1701                           ;!    ___fldiv->___flpack
  1702                           ;!    ___flmul->___awtofl
  1703                           ;!    ___fltol->___fladd
  1704                           ;!    ___awtofl->___flpack
  1705                           ;!    ___almod->_Power
  1706                           ;!    ___aldiv->_Power
  1707                           ;!
  1708                           ;!Critical Paths under _int_ctrl in BANK0
  1709                           ;!
  1710                           ;!    None.
  1711                           ;!
  1712                           ;!Critical Paths under _main in BANK1
  1713                           ;!
  1714                           ;!    _main->_DoubletoAscii
  1715                           ;!
  1716                           ;!Critical Paths under _int_ctrl in BANK1
  1717                           ;!
  1718                           ;!    None.
  1719                           ;!
  1720                           ;!Critical Paths under _main in BANK3
  1721                           ;!
  1722                           ;!    None.
  1723                           ;!
  1724                           ;!Critical Paths under _int_ctrl in BANK3
  1725                           ;!
  1726                           ;!    None.
  1727                           ;!
  1728                           ;!Critical Paths under _main in BANK2
  1729                           ;!
  1730                           ;!    None.
  1731                           ;!
  1732                           ;!Critical Paths under _int_ctrl in BANK2
  1733                           ;!
  1734                           ;!    None.
  1735                           
  1736 ;;
  1737 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1738 ;;
  1739                           
  1740                           ;!
  1741                           ;!Call Graph Tables:
  1742                           ;!
  1743                           ;! ---------------------------------------------------------------------------------
  1744                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1745                           ;! ---------------------------------------------------------------------------------
  1746                           ;! (0) _main                                                 8     8      0   10432
  1747                           ;!                                             71 BANK0      3     3      0
  1748                           ;!                                              6 BANK1      5     5      0
  1749                           ;!                            _hw_init
  1750                           ;!                           _int_init
  1751                           ;!                      _vfd_data_init
  1752                           ;!                           _vfd_init
  1753                           ;!                           ___awtofl
  1754                           ;!                            ___fladd
  1755                           ;!                            ___fldiv
  1756                           ;!                            ___fltol
  1757                           ;!                            ___flmul
  1758                           ;!                             ___flge
  1759                           ;!                             _strcpy
  1760                           ;!                      _DoubletoAscii
  1761                           ;!                             _strcat
  1762                           ;!                          _vfd_write
  1763                           ;! ---------------------------------------------------------------------------------
  1764                           ;! (1) _hw_init                                              0     0      0      99
  1765                           ;!                           _Adc_init
  1766                           ;! ---------------------------------------------------------------------------------
  1767                           ;! (2) _Adc_init                                             2     2      0      99
  1768                           ;!                                              0 BANK0      2     2      0
  1769                           ;! ---------------------------------------------------------------------------------
  1770                           ;! (1) _int_init                                             0     0      0       0
  1771                           ;! ---------------------------------------------------------------------------------
  1772                           ;! (1) _vfd_data_init                                        1     1      0     103
  1773                           ;!                             _strcpy
  1774                           ;! ---------------------------------------------------------------------------------
  1775                           ;! (1) _vfd_init                                             3     3      0     514
  1776                           ;!                                             11 BANK0      3     3      0
  1777                           ;!                          _vfd_write
  1778                           ;!                             _strcpy
  1779                           ;! ---------------------------------------------------------------------------------
  1780                           ;! (2) _strcpy                                              11     7      4     103
  1781                           ;!                                              0 BANK0     11     7      4
  1782                           ;! ---------------------------------------------------------------------------------
  1783                           ;! (1) _DoubletoAscii                                       13     8      5    4997
  1784                           ;!                                             64 BANK0      7     2      5
  1785                           ;!                                              0 BANK1      6     6      0
  1786                           ;!                             ___flge
  1787                           ;!                            ___flmul
  1788                           ;!                            ___fladd
  1789                           ;!                            ___fltol
  1790                           ;!                              _Power
  1791                           ;!                            ___aldiv
  1792                           ;!                            ___almod
  1793                           ;! ---------------------------------------------------------------------------------
  1794                           ;! (1) _strcat                                               4     3      1     137
  1795                           ;!                                              0 BANK0      4     3      1
  1796                           ;! ---------------------------------------------------------------------------------
  1797                           ;! (1) _vfd_write                                            5     5      0     167
  1798                           ;!                                              0 BANK0      5     5      0
  1799                           ;! ---------------------------------------------------------------------------------
  1800                           ;! (2) _Power                                               11     6      5     303
  1801                           ;!                                             13 BANK0     11     6      5
  1802                           ;!                             ___lmul
  1803                           ;! ---------------------------------------------------------------------------------
  1804                           ;! (3) ___lmul                                              13     5      8     136
  1805                           ;!                                              0 BANK0     13     5      8
  1806                           ;! ---------------------------------------------------------------------------------
  1807                           ;! (2) ___fladd                                             16     8      8    1537
  1808                           ;!                                             37 BANK0     16     8      8
  1809                           ;!                           ___flpack
  1810                           ;!                           ___awtofl (ARG)
  1811                           ;!                            ___flmul (ARG)
  1812                           ;! ---------------------------------------------------------------------------------
  1813                           ;! (1) ___fldiv                                             20    12      8     729
  1814                           ;!                                             10 BANK0     20    12      8
  1815                           ;!                           ___flpack
  1816                           ;! ---------------------------------------------------------------------------------
  1817                           ;! (2) ___flmul                                             20    12      8     800
  1818                           ;!                                             17 BANK0     20    12      8
  1819                           ;!                           ___flpack
  1820                           ;!                           ___awtofl (ARG)
  1821                           ;! ---------------------------------------------------------------------------------
  1822                           ;! (2) ___fltol                                             11     7      4     337
  1823                           ;!                                             53 BANK0     11     7      4
  1824                           ;!                            ___fldiv (ARG)
  1825                           ;!                            ___fladd (ARG)
  1826                           ;!                            ___flmul (ARG)
  1827                           ;! ---------------------------------------------------------------------------------
  1828                           ;! (1) ___awtofl                                            11     7      4     445
  1829                           ;!                                             10 BANK0      7     3      4
  1830                           ;!                           ___flpack
  1831                           ;! ---------------------------------------------------------------------------------
  1832                           ;! (3) ___flpack                                            10     4      6     312
  1833                           ;!                                              0 BANK0     10     4      6
  1834                           ;! ---------------------------------------------------------------------------------
  1835                           ;! (2) ___flge                                              16     8      8     198
  1836                           ;!                                              0 BANK0     16     8      8
  1837                           ;! ---------------------------------------------------------------------------------
  1838                           ;! (2) ___almod                                             11     3      8     433
  1839                           ;!                                             24 BANK0     11     3      8
  1840                           ;!                              _Power (ARG)
  1841                           ;! ---------------------------------------------------------------------------------
  1842                           ;! (2) ___aldiv                                             15     7      8     445
  1843                           ;!                                             24 BANK0     15     7      8
  1844                           ;!                              _Power (ARG)
  1845                           ;! ---------------------------------------------------------------------------------
  1846                           ;! Estimated maximum stack depth 3
  1847                           ;! ---------------------------------------------------------------------------------
  1848                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1849                           ;! ---------------------------------------------------------------------------------
  1850                           ;! (4) _int_ctrl                                             5     5      0       0
  1851                           ;!                                              0 COMMON     5     5      0
  1852                           ;! ---------------------------------------------------------------------------------
  1853                           ;! Estimated maximum stack depth 4
  1854                           ;! ---------------------------------------------------------------------------------
  1855                           ;!
  1856                           ;! Call Graph Graphs:
  1857                           ;!
  1858                           ;! _main (ROOT)
  1859                           ;!   _hw_init
  1860                           ;!     _Adc_init
  1861                           ;!   _int_init
  1862                           ;!   _vfd_data_init
  1863                           ;!     _strcpy
  1864                           ;!   _vfd_init
  1865                           ;!     _vfd_write
  1866                           ;!     _strcpy
  1867                           ;!   ___awtofl
  1868                           ;!     ___flpack
  1869                           ;!   ___fladd
  1870                           ;!     ___flpack
  1871                           ;!     ___awtofl (ARG)
  1872                           ;!       ___flpack
  1873                           ;!     ___flmul (ARG)
  1874                           ;!       ___flpack
  1875                           ;!       ___awtofl (ARG)
  1876                           ;!         ___flpack
  1877                           ;!   ___fldiv
  1878                           ;!     ___flpack
  1879                           ;!   ___fltol
  1880                           ;!     ___fldiv (ARG)
  1881                           ;!       ___flpack
  1882                           ;!     ___fladd (ARG)
  1883                           ;!       ___flpack
  1884                           ;!       ___awtofl (ARG)
  1885                           ;!         ___flpack
  1886                           ;!       ___flmul (ARG)
  1887                           ;!         ___flpack
  1888                           ;!         ___awtofl (ARG)
  1889                           ;!           ___flpack
  1890                           ;!     ___flmul (ARG)
  1891                           ;!       ___flpack
  1892                           ;!       ___awtofl (ARG)
  1893                           ;!         ___flpack
  1894                           ;!   ___flmul
  1895                           ;!     ___flpack
  1896                           ;!     ___awtofl (ARG)
  1897                           ;!       ___flpack
  1898                           ;!   ___flge
  1899                           ;!   _strcpy
  1900                           ;!   _DoubletoAscii
  1901                           ;!     ___flge
  1902                           ;!     ___flmul
  1903                           ;!       ___flpack
  1904                           ;!       ___awtofl (ARG)
  1905                           ;!         ___flpack
  1906                           ;!     ___fladd
  1907                           ;!       ___flpack
  1908                           ;!       ___awtofl (ARG)
  1909                           ;!         ___flpack
  1910                           ;!       ___flmul (ARG)
  1911                           ;!         ___flpack
  1912                           ;!         ___awtofl (ARG)
  1913                           ;!           ___flpack
  1914                           ;!     ___fltol
  1915                           ;!       ___fldiv (ARG)
  1916                           ;!         ___flpack
  1917                           ;!       ___fladd (ARG)
  1918                           ;!         ___flpack
  1919                           ;!         ___awtofl (ARG)
  1920                           ;!           ___flpack
  1921                           ;!         ___flmul (ARG)
  1922                           ;!           ___flpack
  1923                           ;!           ___awtofl (ARG)
  1924                           ;!             ___flpack
  1925                           ;!       ___flmul (ARG)
  1926                           ;!         ___flpack
  1927                           ;!         ___awtofl (ARG)
  1928                           ;!           ___flpack
  1929                           ;!     _Power
  1930                           ;!       ___lmul
  1931                           ;!     ___aldiv
  1932                           ;!       _Power (ARG)
  1933                           ;!         ___lmul
  1934                           ;!     ___almod
  1935                           ;!       _Power (ARG)
  1936                           ;!         ___lmul
  1937                           ;!   _strcat
  1938                           ;!   _vfd_write
  1939                           ;!
  1940                           ;! _int_ctrl (ROOT)
  1941                           ;!
  1942                           
  1943                           ;! Address spaces:
  1944                           
  1945                           ;!Name               Size   Autos  Total    Cost      Usage
  1946                           ;!BANK3               60      0      43       9       69.8%
  1947                           ;!BITBANK3            60      0       0       8        0.0%
  1948                           ;!SFR3                 0      0       0       4        0.0%
  1949                           ;!BITSFR3              0      0       0       4        0.0%
  1950                           ;!BANK2               60      0       0      11        0.0%
  1951                           ;!BITBANK2            60      0       0      10        0.0%
  1952                           ;!SFR2                 0      0       0       5        0.0%
  1953                           ;!BITSFR2              0      0       0       5        0.0%
  1954                           ;!BANK1               50      B      4B       7       93.8%
  1955                           ;!BITBANK1            50      0       0       6        0.0%
  1956                           ;!SFR1                 0      0       0       2        0.0%
  1957                           ;!BITSFR1              0      0       0       2        0.0%
  1958                           ;!BANK0               50     4A      4E       5       97.5%
  1959                           ;!BITBANK0            50      0       0       4        0.0%
  1960                           ;!SFR0                 0      0       0       1        0.0%
  1961                           ;!BITSFR0              0      0       0       1        0.0%
  1962                           ;!COMMON               E      5       A       1       71.4%
  1963                           ;!BITCOMMON            E      0       0       0        0.0%
  1964                           ;!CODE                 0      0       0       0        0.0%
  1965                           ;!DATA                 0      0      E9      12        0.0%
  1966                           ;!ABS                  0      0      E6       3        0.0%
  1967                           ;!NULL                 0      0       0       0        0.0%
  1968                           ;!STACK                0      0       3       2        0.0%
  1969                           ;!EEDATA             100      0       0       0        0.0%
  1970                           
  1971                           	global	_main
  1972                           
  1973 ;; *************** function _main *****************
  1974 ;; Defined at:
  1975 ;;		line 34 in file "C:\PIC_WorkSpace\AquaTempFan\main.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;  sum             4    6[BANK1 ] PTR unsigned char 
  1980 ;;  i               1   10[BANK1 ] unsigned char 
  1981 ;; Return value:  Size  Location     Type
  1982 ;;		None               void
  1983 ;; Registers used:
  1984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1985 ;; Tracked objects:
  1986 ;;		On entry : 17F/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1990 ;;      Params:         0       0       0       0       0
  1991 ;;      Locals:         0       0       5       0       0
  1992 ;;      Temps:          0       3       0       0       0
  1993 ;;      Totals:         0       3       5       0       0
  1994 ;;Total ram usage:        8 bytes
  1995 ;; Hardware stack levels required when called:    4
  1996 ;; This function calls:
  1997 ;;		_hw_init
  1998 ;;		_int_init
  1999 ;;		_vfd_data_init
  2000 ;;		_vfd_init
  2001 ;;		___awtofl
  2002 ;;		___fladd
  2003 ;;		___fldiv
  2004 ;;		___fltol
  2005 ;;		___flmul
  2006 ;;		___flge
  2007 ;;		_strcpy
  2008 ;;		_DoubletoAscii
  2009 ;;		_strcat
  2010 ;;		_vfd_write
  2011 ;; This function is called by:
  2012 ;;		Startup code after reset
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           psect	maintext,global,class=CODE,delta=2,split=1
  2016                           global __pmaintext
  2017  0013                     __pmaintext:	;psect for function _main
  2018                           psect	maintext
  2019                           	file	"C:\PIC_WorkSpace\AquaTempFan\main.c"
  2020                           	line	34
  2021                           	global	__size_of_main
  2022  0231                     	__size_of_main	equ	__end_of_main-_main
  2023                           	
  2024  0013                     _main:	
  2025                           	opt	stack 4
  2026                           ; Regs used in _main: [allreg]
  2027                           	line	38
  2028                           	
  2029  0013                     l7914:	
  2030                           ;main.c: 35: unsigned char i;
  2031                           ;main.c: 36: double sum;
  2032                           ;main.c: 38: hw_init();
  2033  0013  158A  236B  118A   	fcall	_hw_init
  2034                           	line	39
  2035                           	
  2036  0016                     l7916:	
  2037                           ;main.c: 39: int_init();
  2038  0016  158A  225D  118A   	fcall	_int_init
  2039                           	line	40
  2040                           	
  2041  0019                     l7918:	
  2042                           ;main.c: 40: vfd_data_init();
  2043  0019  158A  227E  118A   	fcall	_vfd_data_init
  2044                           	line	41
  2045                           	
  2046  001C                     l7920:	
  2047                           ;main.c: 41: vfd_init();
  2048  001C  158A  2514  118A   	fcall	_vfd_init
  2049                           	line	43
  2050                           	
  2051  001F                     l7922:	
  2052                           ;main.c: 43: Temp = 0.0;
  2053  001F  3000               	movlw	0x0
  2054  0020  1683               	bsf	status, 5	;RP0=1, select bank1
  2055  0021  1303               	bcf	status, 6	;RP1=0, select bank1
  2056  0022  00B7               	movwf	(_Temp+3)^080h
  2057  0023  3000               	movlw	0x0
  2058  0024  00B6               	movwf	(_Temp+2)^080h
  2059  0025  3000               	movlw	0x0
  2060  0026  00B5               	movwf	(_Temp+1)^080h
  2061  0027  3000               	movlw	0x0
  2062  0028  00B4               	movwf	(_Temp)^080h
  2063                           
  2064                           	line	45
  2065                           	
  2066  0029                     l7924:	
  2067                           ;main.c: 45: GIE = 1;
  2068  0029  178B               	bsf	(95/8),(95)&7	;volatile
  2069  002A  282B               	goto	l7926
  2070                           	line	47
  2071                           ;main.c: 47: while(1){
  2072                           	
  2073  002B                     l2468:	
  2074                           	line	49
  2075                           	
  2076  002B                     l7926:	
  2077                           ;main.c: 49: if(AdcDataGetFlag)
  2078  002B  083A               	movf	(_AdcDataGetFlag)^080h,w	;volatile
  2079  002C  1D03               	skipz
  2080  002D  282F               	goto	u2910
  2081  002E  29C7               	goto	l2469
  2082  002F                     u2910:
  2083                           	line	51
  2084                           	
  2085  002F                     l7928:	
  2086                           ;main.c: 50: {
  2087                           ;main.c: 51: AdcDataGetFlag = 0;
  2088  002F  01BA               	clrf	(_AdcDataGetFlag)^080h	;volatile
  2089                           	line	52
  2090                           	
  2091  0030                     l7930:	
  2092                           ;main.c: 52: Adc_Buf[Adc_point++] = Adc_Data&0x03FF;
  2093  0030  30FF               	movlw	low(03FFh)
  2094  0031  0538               	andwf	(_Adc_Data)^080h,w	;volatile
  2095  0032  1283               	bcf	status, 5	;RP0=0, select bank0
  2096  0033  1303               	bcf	status, 6	;RP1=0, select bank0
  2097  0034  00E7               	movwf	(??_main+0)+0
  2098  0035  3003               	movlw	high(03FFh)
  2099  0036  1683               	bsf	status, 5	;RP0=1, select bank1
  2100  0037  1303               	bcf	status, 6	;RP1=0, select bank1
  2101  0038  0539               	andwf	(_Adc_Data+1)^080h,w	;volatile
  2102  0039  1283               	bcf	status, 5	;RP0=0, select bank0
  2103  003A  1303               	bcf	status, 6	;RP1=0, select bank0
  2104  003B  00E8               	movwf	1+(??_main+0)+0
  2105  003C  1683               	bsf	status, 5	;RP0=1, select bank1
  2106  003D  1303               	bcf	status, 6	;RP1=0, select bank1
  2107  003E  083B               	movf	(_Adc_point)^080h,w
  2108  003F  1283               	bcf	status, 5	;RP0=0, select bank0
  2109  0040  1303               	bcf	status, 6	;RP1=0, select bank0
  2110  0041  00E9               	movwf	(??_main+2)+0
  2111  0042  0769               	addwf	(??_main+2)+0,w
  2112  0043  3EA0               	addlw	_Adc_Buf&0ffh
  2113  0044  0084               	movwf	fsr0
  2114  0045  0867               	movf	0+(??_main+0)+0,w
  2115  0046  1383               	bcf	status, 7	;select IRP bank1
  2116  0047  0080               	movwf	indf
  2117  0048  0A84               	incf	fsr0,f
  2118  0049  0868               	movf	1+(??_main+0)+0,w
  2119  004A  0080               	movwf	indf
  2120                           	
  2121  004B                     l7932:	
  2122  004B  3001               	movlw	(01h)
  2123  004C  00E7               	movwf	(??_main+0)+0
  2124  004D  0867               	movf	(??_main+0)+0,w
  2125  004E  1683               	bsf	status, 5	;RP0=1, select bank1
  2126  004F  1303               	bcf	status, 6	;RP1=0, select bank1
  2127  0050  07BB               	addwf	(_Adc_point)^080h,f
  2128                           	line	53
  2129                           	
  2130  0051                     l7934:	
  2131                           ;main.c: 53: if(Adc_point >= 10) Adc_point = 0;
  2132  0051  300A               	movlw	(0Ah)
  2133  0052  023B               	subwf	(_Adc_point)^080h,w
  2134  0053  1C03               	skipc
  2135  0054  2856               	goto	u2921
  2136  0055  2857               	goto	u2920
  2137  0056                     u2921:
  2138  0056  2859               	goto	l7938
  2139  0057                     u2920:
  2140                           	
  2141  0057                     l7936:	
  2142  0057  01BB               	clrf	(_Adc_point)^080h
  2143  0058  2859               	goto	l7938
  2144                           	
  2145  0059                     l2470:	
  2146                           	line	54
  2147                           	
  2148  0059                     l7938:	
  2149                           ;main.c: 54: sum = 0.0;
  2150  0059  3000               	movlw	0x0
  2151  005A  00E9               	movwf	(main@sum+3)^080h
  2152  005B  3000               	movlw	0x0
  2153  005C  00E8               	movwf	(main@sum+2)^080h
  2154  005D  3000               	movlw	0x0
  2155  005E  00E7               	movwf	(main@sum+1)^080h
  2156  005F  3000               	movlw	0x0
  2157  0060  00E6               	movwf	(main@sum)^080h
  2158                           
  2159                           	line	55
  2160                           	
  2161  0061                     l7940:	
  2162                           ;main.c: 55: for(i = 0; i < 10; i++)sum += (double)Adc_Buf[i];
  2163  0061  01EA               	clrf	(main@i)^080h
  2164  0062  300A               	movlw	(0Ah)
  2165  0063  026A               	subwf	(main@i)^080h,w
  2166  0064  1C03               	skipc
  2167  0065  2867               	goto	u2931
  2168  0066  2868               	goto	u2930
  2169  0067                     u2931:
  2170  0067  286A               	goto	l7944
  2171  0068                     u2930:
  2172  0068  28C6               	goto	l7950
  2173                           	
  2174  0069                     l7942:	
  2175  0069  28C6               	goto	l7950
  2176                           	
  2177  006A                     l2471:	
  2178                           	
  2179  006A                     l7944:	
  2180  006A  086A               	movf	(main@i)^080h,w
  2181  006B  1283               	bcf	status, 5	;RP0=0, select bank0
  2182  006C  1303               	bcf	status, 6	;RP1=0, select bank0
  2183  006D  00E7               	movwf	(??_main+0)+0
  2184  006E  0767               	addwf	(??_main+0)+0,w
  2185  006F  3EA0               	addlw	_Adc_Buf&0ffh
  2186  0070  0084               	movwf	fsr0
  2187  0071  1383               	bcf	status, 7	;select IRP bank1
  2188  0072  0800               	movf	indf,w
  2189  0073  00AA               	movwf	(?___awtofl)
  2190  0074  0A84               	incf	fsr0,f
  2191  0075  0800               	movf	indf,w
  2192  0076  00AB               	movwf	(?___awtofl+1)
  2193  0077  158A  230D  118A   	fcall	___awtofl
  2194  007A  1283               	bcf	status, 5	;RP0=0, select bank0
  2195  007B  1303               	bcf	status, 6	;RP1=0, select bank0
  2196  007C  082D               	movf	(3+(?___awtofl)),w
  2197  007D  00C8               	movwf	(?___fladd+3)
  2198  007E  082C               	movf	(2+(?___awtofl)),w
  2199  007F  00C7               	movwf	(?___fladd+2)
  2200  0080  082B               	movf	(1+(?___awtofl)),w
  2201  0081  00C6               	movwf	(?___fladd+1)
  2202  0082  082A               	movf	(0+(?___awtofl)),w
  2203  0083  00C5               	movwf	(?___fladd)
  2204                           
  2205  0084  1683               	bsf	status, 5	;RP0=1, select bank1
  2206  0085  1303               	bcf	status, 6	;RP1=0, select bank1
  2207  0086  0869               	movf	(main@sum+3)^080h,w
  2208  0087  1283               	bcf	status, 5	;RP0=0, select bank0
  2209  0088  1303               	bcf	status, 6	;RP1=0, select bank0
  2210  0089  00CC               	movwf	3+(?___fladd)+04h
  2211  008A  1683               	bsf	status, 5	;RP0=1, select bank1
  2212  008B  1303               	bcf	status, 6	;RP1=0, select bank1
  2213  008C  0868               	movf	(main@sum+2)^080h,w
  2214  008D  1283               	bcf	status, 5	;RP0=0, select bank0
  2215  008E  1303               	bcf	status, 6	;RP1=0, select bank0
  2216  008F  00CB               	movwf	2+(?___fladd)+04h
  2217  0090  1683               	bsf	status, 5	;RP0=1, select bank1
  2218  0091  1303               	bcf	status, 6	;RP1=0, select bank1
  2219  0092  0867               	movf	(main@sum+1)^080h,w
  2220  0093  1283               	bcf	status, 5	;RP0=0, select bank0
  2221  0094  1303               	bcf	status, 6	;RP1=0, select bank0
  2222  0095  00CA               	movwf	1+(?___fladd)+04h
  2223  0096  1683               	bsf	status, 5	;RP0=1, select bank1
  2224  0097  1303               	bcf	status, 6	;RP1=0, select bank1
  2225  0098  0866               	movf	(main@sum)^080h,w
  2226  0099  1283               	bcf	status, 5	;RP0=0, select bank0
  2227  009A  1303               	bcf	status, 6	;RP1=0, select bank0
  2228  009B  00C9               	movwf	0+(?___fladd)+04h
  2229                           
  2230  009C  118A  2413  118A   	fcall	___fladd
  2231  009F  1283               	bcf	status, 5	;RP0=0, select bank0
  2232  00A0  1303               	bcf	status, 6	;RP1=0, select bank0
  2233  00A1  0848               	movf	(3+(?___fladd)),w
  2234  00A2  1683               	bsf	status, 5	;RP0=1, select bank1
  2235  00A3  1303               	bcf	status, 6	;RP1=0, select bank1
  2236  00A4  00E9               	movwf	(main@sum+3)^080h
  2237  00A5  1283               	bcf	status, 5	;RP0=0, select bank0
  2238  00A6  1303               	bcf	status, 6	;RP1=0, select bank0
  2239  00A7  0847               	movf	(2+(?___fladd)),w
  2240  00A8  1683               	bsf	status, 5	;RP0=1, select bank1
  2241  00A9  1303               	bcf	status, 6	;RP1=0, select bank1
  2242  00AA  00E8               	movwf	(main@sum+2)^080h
  2243  00AB  1283               	bcf	status, 5	;RP0=0, select bank0
  2244  00AC  1303               	bcf	status, 6	;RP1=0, select bank0
  2245  00AD  0846               	movf	(1+(?___fladd)),w
  2246  00AE  1683               	bsf	status, 5	;RP0=1, select bank1
  2247  00AF  1303               	bcf	status, 6	;RP1=0, select bank1
  2248  00B0  00E7               	movwf	(main@sum+1)^080h
  2249  00B1  1283               	bcf	status, 5	;RP0=0, select bank0
  2250  00B2  1303               	bcf	status, 6	;RP1=0, select bank0
  2251  00B3  0845               	movf	(0+(?___fladd)),w
  2252  00B4  1683               	bsf	status, 5	;RP0=1, select bank1
  2253  00B5  1303               	bcf	status, 6	;RP1=0, select bank1
  2254  00B6  00E6               	movwf	(main@sum)^080h
  2255                           
  2256                           	
  2257  00B7                     l7946:	
  2258  00B7  3001               	movlw	(01h)
  2259  00B8  1283               	bcf	status, 5	;RP0=0, select bank0
  2260  00B9  1303               	bcf	status, 6	;RP1=0, select bank0
  2261  00BA  00E7               	movwf	(??_main+0)+0
  2262  00BB  0867               	movf	(??_main+0)+0,w
  2263  00BC  1683               	bsf	status, 5	;RP0=1, select bank1
  2264  00BD  1303               	bcf	status, 6	;RP1=0, select bank1
  2265  00BE  07EA               	addwf	(main@i)^080h,f
  2266                           	
  2267  00BF                     l7948:	
  2268  00BF  300A               	movlw	(0Ah)
  2269  00C0  026A               	subwf	(main@i)^080h,w
  2270  00C1  1C03               	skipc
  2271  00C2  28C4               	goto	u2941
  2272  00C3  28C5               	goto	u2940
  2273  00C4                     u2941:
  2274  00C4  286A               	goto	l7944
  2275  00C5                     u2940:
  2276  00C5  28C6               	goto	l7950
  2277                           	
  2278  00C6                     l2472:	
  2279                           	line	56
  2280                           	
  2281  00C6                     l7950:	
  2282                           ;main.c: 56: Adc_data = (int)(sum / 10.0);
  2283  00C6  0869               	movf	(main@sum+3)^080h,w
  2284  00C7  1283               	bcf	status, 5	;RP0=0, select bank0
  2285  00C8  1303               	bcf	status, 6	;RP1=0, select bank0
  2286  00C9  00B1               	movwf	3+(?___fldiv)+04h
  2287  00CA  1683               	bsf	status, 5	;RP0=1, select bank1
  2288  00CB  1303               	bcf	status, 6	;RP1=0, select bank1
  2289  00CC  0868               	movf	(main@sum+2)^080h,w
  2290  00CD  1283               	bcf	status, 5	;RP0=0, select bank0
  2291  00CE  1303               	bcf	status, 6	;RP1=0, select bank0
  2292  00CF  00B0               	movwf	2+(?___fldiv)+04h
  2293  00D0  1683               	bsf	status, 5	;RP0=1, select bank1
  2294  00D1  1303               	bcf	status, 6	;RP1=0, select bank1
  2295  00D2  0867               	movf	(main@sum+1)^080h,w
  2296  00D3  1283               	bcf	status, 5	;RP0=0, select bank0
  2297  00D4  1303               	bcf	status, 6	;RP1=0, select bank0
  2298  00D5  00AF               	movwf	1+(?___fldiv)+04h
  2299  00D6  1683               	bsf	status, 5	;RP0=1, select bank1
  2300  00D7  1303               	bcf	status, 6	;RP1=0, select bank1
  2301  00D8  0866               	movf	(main@sum)^080h,w
  2302  00D9  1283               	bcf	status, 5	;RP0=0, select bank0
  2303  00DA  1303               	bcf	status, 6	;RP1=0, select bank0
  2304  00DB  00AE               	movwf	0+(?___fldiv)+04h
  2305                           
  2306  00DC  3041               	movlw	0x41
  2307  00DD  00AD               	movwf	(?___fldiv+3)
  2308  00DE  3020               	movlw	0x20
  2309  00DF  00AC               	movwf	(?___fldiv+2)
  2310  00E0  3000               	movlw	0x0
  2311  00E1  00AB               	movwf	(?___fldiv+1)
  2312  00E2  3000               	movlw	0x0
  2313  00E3  00AA               	movwf	(?___fldiv)
  2314                           
  2315  00E4  118A  2696  118A   	fcall	___fldiv
  2316  00E7  1283               	bcf	status, 5	;RP0=0, select bank0
  2317  00E8  1303               	bcf	status, 6	;RP1=0, select bank0
  2318  00E9  082D               	movf	(3+(?___fldiv)),w
  2319  00EA  00D8               	movwf	(?___fltol+3)
  2320  00EB  082C               	movf	(2+(?___fldiv)),w
  2321  00EC  00D7               	movwf	(?___fltol+2)
  2322  00ED  082B               	movf	(1+(?___fldiv)),w
  2323  00EE  00D6               	movwf	(?___fltol+1)
  2324  00EF  082A               	movf	(0+(?___fldiv)),w
  2325  00F0  00D5               	movwf	(?___fltol)
  2326                           
  2327  00F1  158A  26BC  118A   	fcall	___fltol
  2328  00F4  1283               	bcf	status, 5	;RP0=0, select bank0
  2329  00F5  1303               	bcf	status, 6	;RP1=0, select bank0
  2330  00F6  0856               	movf	1+(((0+(?___fltol)))),w
  2331  00F7  1683               	bsf	status, 5	;RP0=1, select bank1
  2332  00F8  1303               	bcf	status, 6	;RP1=0, select bank1
  2333  00F9  01DF               	clrf	(_Adc_data+1)^080h	;volatile
  2334  00FA  07DF               	addwf	(_Adc_data+1)^080h	;volatile
  2335  00FB  1283               	bcf	status, 5	;RP0=0, select bank0
  2336  00FC  1303               	bcf	status, 6	;RP1=0, select bank0
  2337  00FD  0855               	movf	0+(((0+(?___fltol)))),w
  2338  00FE  1683               	bsf	status, 5	;RP0=1, select bank1
  2339  00FF  1303               	bcf	status, 6	;RP1=0, select bank1
  2340  0100  01DE               	clrf	(_Adc_data)^080h	;volatile
  2341  0101  07DE               	addwf	(_Adc_data)^080h	;volatile
  2342                           
  2343                           	line	60
  2344                           ;main.c: 60: Temp = 0.04861878*((double)(Adc_data-45))+1.5;
  2345  0102  303F               	movlw	0x3f
  2346  0103  1283               	bcf	status, 5	;RP0=0, select bank0
  2347  0104  1303               	bcf	status, 6	;RP1=0, select bank0
  2348  0105  00C8               	movwf	(?___fladd+3)
  2349  0106  30C0               	movlw	0xc0
  2350  0107  00C7               	movwf	(?___fladd+2)
  2351  0108  3000               	movlw	0x0
  2352  0109  00C6               	movwf	(?___fladd+1)
  2353  010A  3000               	movlw	0x0
  2354  010B  00C5               	movwf	(?___fladd)
  2355                           
  2356  010C  303D               	movlw	0x3d
  2357  010D  00B4               	movwf	(?___flmul+3)
  2358  010E  3047               	movlw	0x47
  2359  010F  00B3               	movwf	(?___flmul+2)
  2360  0110  3024               	movlw	0x24
  2361  0111  00B2               	movwf	(?___flmul+1)
  2362  0112  307C               	movlw	0x7c
  2363  0113  00B1               	movwf	(?___flmul)
  2364                           
  2365  0114  1683               	bsf	status, 5	;RP0=1, select bank1
  2366  0115  1303               	bcf	status, 6	;RP1=0, select bank1
  2367  0116  085E               	movf	(_Adc_data)^080h,w	;volatile
  2368  0117  3ED3               	addlw	low(-45)
  2369  0118  1283               	bcf	status, 5	;RP0=0, select bank0
  2370  0119  1303               	bcf	status, 6	;RP1=0, select bank0
  2371  011A  00AA               	movwf	(?___awtofl)
  2372  011B  1683               	bsf	status, 5	;RP0=1, select bank1
  2373  011C  1303               	bcf	status, 6	;RP1=0, select bank1
  2374  011D  085F               	movf	(_Adc_data+1)^080h,w	;volatile
  2375  011E  1803               	skipnc
  2376  011F  3E01               	addlw	1
  2377  0120  3EFF               	addlw	high(-45)
  2378  0121  1283               	bcf	status, 5	;RP0=0, select bank0
  2379  0122  1303               	bcf	status, 6	;RP1=0, select bank0
  2380  0123  00AB               	movwf	1+(?___awtofl)
  2381  0124  158A  230D  118A   	fcall	___awtofl
  2382  0127  1283               	bcf	status, 5	;RP0=0, select bank0
  2383  0128  1303               	bcf	status, 6	;RP1=0, select bank0
  2384  0129  082D               	movf	(3+(?___awtofl)),w
  2385  012A  00B8               	movwf	3+(?___flmul)+04h
  2386  012B  082C               	movf	(2+(?___awtofl)),w
  2387  012C  00B7               	movwf	2+(?___flmul)+04h
  2388  012D  082B               	movf	(1+(?___awtofl)),w
  2389  012E  00B6               	movwf	1+(?___flmul)+04h
  2390  012F  082A               	movf	(0+(?___awtofl)),w
  2391  0130  00B5               	movwf	0+(?___flmul)+04h
  2392                           
  2393  0131  118A  2582  118A   	fcall	___flmul
  2394  0134  1283               	bcf	status, 5	;RP0=0, select bank0
  2395  0135  1303               	bcf	status, 6	;RP1=0, select bank0
  2396  0136  0834               	movf	(3+(?___flmul)),w
  2397  0137  00CC               	movwf	3+(?___fladd)+04h
  2398  0138  0833               	movf	(2+(?___flmul)),w
  2399  0139  00CB               	movwf	2+(?___fladd)+04h
  2400  013A  0832               	movf	(1+(?___flmul)),w
  2401  013B  00CA               	movwf	1+(?___fladd)+04h
  2402  013C  0831               	movf	(0+(?___flmul)),w
  2403  013D  00C9               	movwf	0+(?___fladd)+04h
  2404                           
  2405  013E  118A  2413  118A   	fcall	___fladd
  2406  0141  1283               	bcf	status, 5	;RP0=0, select bank0
  2407  0142  1303               	bcf	status, 6	;RP1=0, select bank0
  2408  0143  0848               	movf	(3+(?___fladd)),w
  2409  0144  1683               	bsf	status, 5	;RP0=1, select bank1
  2410  0145  1303               	bcf	status, 6	;RP1=0, select bank1
  2411  0146  00B7               	movwf	(_Temp+3)^080h
  2412  0147  1283               	bcf	status, 5	;RP0=0, select bank0
  2413  0148  1303               	bcf	status, 6	;RP1=0, select bank0
  2414  0149  0847               	movf	(2+(?___fladd)),w
  2415  014A  1683               	bsf	status, 5	;RP0=1, select bank1
  2416  014B  1303               	bcf	status, 6	;RP1=0, select bank1
  2417  014C  00B6               	movwf	(_Temp+2)^080h
  2418  014D  1283               	bcf	status, 5	;RP0=0, select bank0
  2419  014E  1303               	bcf	status, 6	;RP1=0, select bank0
  2420  014F  0846               	movf	(1+(?___fladd)),w
  2421  0150  1683               	bsf	status, 5	;RP0=1, select bank1
  2422  0151  1303               	bcf	status, 6	;RP1=0, select bank1
  2423  0152  00B5               	movwf	(_Temp+1)^080h
  2424  0153  1283               	bcf	status, 5	;RP0=0, select bank0
  2425  0154  1303               	bcf	status, 6	;RP1=0, select bank0
  2426  0155  0845               	movf	(0+(?___fladd)),w
  2427  0156  1683               	bsf	status, 5	;RP0=1, select bank1
  2428  0157  1303               	bcf	status, 6	;RP1=0, select bank1
  2429  0158  00B4               	movwf	(_Temp)^080h
  2430                           
  2431                           	line	64
  2432                           ;main.c: 64: if(Temp > 28.0)
  2433  0159  3041               	movlw	0x41
  2434  015A  1283               	bcf	status, 5	;RP0=0, select bank0
  2435  015B  1303               	bcf	status, 6	;RP1=0, select bank0
  2436  015C  00A3               	movwf	(?___flge+3)
  2437  015D  30E0               	movlw	0xe0
  2438  015E  00A2               	movwf	(?___flge+2)
  2439  015F  3000               	movlw	0x0
  2440  0160  00A1               	movwf	(?___flge+1)
  2441  0161  3000               	movlw	0x0
  2442  0162  00A0               	movwf	(?___flge)
  2443                           
  2444  0163  1683               	bsf	status, 5	;RP0=1, select bank1
  2445  0164  1303               	bcf	status, 6	;RP1=0, select bank1
  2446  0165  0837               	movf	(_Temp+3)^080h,w
  2447  0166  1283               	bcf	status, 5	;RP0=0, select bank0
  2448  0167  1303               	bcf	status, 6	;RP1=0, select bank0
  2449  0168  00A7               	movwf	3+(?___flge)+04h
  2450  0169  1683               	bsf	status, 5	;RP0=1, select bank1
  2451  016A  1303               	bcf	status, 6	;RP1=0, select bank1
  2452  016B  0836               	movf	(_Temp+2)^080h,w
  2453  016C  1283               	bcf	status, 5	;RP0=0, select bank0
  2454  016D  1303               	bcf	status, 6	;RP1=0, select bank0
  2455  016E  00A6               	movwf	2+(?___flge)+04h
  2456  016F  1683               	bsf	status, 5	;RP0=1, select bank1
  2457  0170  1303               	bcf	status, 6	;RP1=0, select bank1
  2458  0171  0835               	movf	(_Temp+1)^080h,w
  2459  0172  1283               	bcf	status, 5	;RP0=0, select bank0
  2460  0173  1303               	bcf	status, 6	;RP1=0, select bank0
  2461  0174  00A5               	movwf	1+(?___flge)+04h
  2462  0175  1683               	bsf	status, 5	;RP0=1, select bank1
  2463  0176  1303               	bcf	status, 6	;RP1=0, select bank1
  2464  0177  0834               	movf	(_Temp)^080h,w
  2465  0178  1283               	bcf	status, 5	;RP0=0, select bank0
  2466  0179  1303               	bcf	status, 6	;RP1=0, select bank0
  2467  017A  00A4               	movwf	0+(?___flge)+04h
  2468                           
  2469  017B  118A  2776  118A   	fcall	___flge
  2470  017E  1803               	btfsc	status,0
  2471  017F  2981               	goto	u2951
  2472  0180  2982               	goto	u2950
  2473  0181                     u2951:
  2474  0181  2991               	goto	l7956
  2475  0182                     u2950:
  2476                           	line	66
  2477                           	
  2478  0182                     l7952:	
  2479                           ;main.c: 65: {
  2480                           ;main.c: 66: RB0 = 1;
  2481  0182  1283               	bcf	status, 5	;RP0=0, select bank0
  2482  0183  1303               	bcf	status, 6	;RP1=0, select bank0
  2483  0184  1406               	bsf	(48/8),(48)&7	;volatile
  2484                           	line	67
  2485                           	
  2486  0185                     l7954:	
  2487                           ;main.c: 67: strcpy(Downside_Data, Rly_str[0]);
  2488  0185  30BC               	movlw	(_Downside_Data&0ffh)
  2489  0186  00A0               	movwf	(?_strcpy)
  2490  0187  3000               	movlw	(0x1/2)
  2491  0188  00A1               	movwf	(?_strcpy+1)
  2492  0189  3090               	movlw	(_Rly_str&0ffh)
  2493  018A  00A2               	movwf	(0+?_strcpy+02h)
  2494  018B  3001               	movlw	(0x3/2)
  2495  018C  00A3               	movwf	(1+?_strcpy+02h)
  2496  018D  158A  233B  118A   	fcall	_strcpy
  2497  0190  2991               	goto	l7956
  2498                           	line	68
  2499                           	
  2500  0191                     l2473:	
  2501                           	line	69
  2502                           	
  2503  0191                     l7956:	
  2504                           ;main.c: 68: }
  2505                           ;main.c: 69: if(Temp < 26.0)
  2506  0191  1683               	bsf	status, 5	;RP0=1, select bank1
  2507  0192  1303               	bcf	status, 6	;RP1=0, select bank1
  2508  0193  0837               	movf	(_Temp+3)^080h,w
  2509  0194  1283               	bcf	status, 5	;RP0=0, select bank0
  2510  0195  1303               	bcf	status, 6	;RP1=0, select bank0
  2511  0196  00A3               	movwf	(?___flge+3)
  2512  0197  1683               	bsf	status, 5	;RP0=1, select bank1
  2513  0198  1303               	bcf	status, 6	;RP1=0, select bank1
  2514  0199  0836               	movf	(_Temp+2)^080h,w
  2515  019A  1283               	bcf	status, 5	;RP0=0, select bank0
  2516  019B  1303               	bcf	status, 6	;RP1=0, select bank0
  2517  019C  00A2               	movwf	(?___flge+2)
  2518  019D  1683               	bsf	status, 5	;RP0=1, select bank1
  2519  019E  1303               	bcf	status, 6	;RP1=0, select bank1
  2520  019F  0835               	movf	(_Temp+1)^080h,w
  2521  01A0  1283               	bcf	status, 5	;RP0=0, select bank0
  2522  01A1  1303               	bcf	status, 6	;RP1=0, select bank0
  2523  01A2  00A1               	movwf	(?___flge+1)
  2524  01A3  1683               	bsf	status, 5	;RP0=1, select bank1
  2525  01A4  1303               	bcf	status, 6	;RP1=0, select bank1
  2526  01A5  0834               	movf	(_Temp)^080h,w
  2527  01A6  1283               	bcf	status, 5	;RP0=0, select bank0
  2528  01A7  1303               	bcf	status, 6	;RP1=0, select bank0
  2529  01A8  00A0               	movwf	(?___flge)
  2530                           
  2531  01A9  3041               	movlw	0x41
  2532  01AA  00A7               	movwf	3+(?___flge)+04h
  2533  01AB  30D0               	movlw	0xd0
  2534  01AC  00A6               	movwf	2+(?___flge)+04h
  2535  01AD  3000               	movlw	0x0
  2536  01AE  00A5               	movwf	1+(?___flge)+04h
  2537  01AF  3000               	movlw	0x0
  2538  01B0  00A4               	movwf	0+(?___flge)+04h
  2539                           
  2540  01B1  118A  2776  118A   	fcall	___flge
  2541  01B4  1803               	btfsc	status,0
  2542  01B5  29B7               	goto	u2961
  2543  01B6  29B8               	goto	u2960
  2544  01B7                     u2961:
  2545  01B7  29C7               	goto	l2469
  2546  01B8                     u2960:
  2547                           	line	71
  2548                           	
  2549  01B8                     l7958:	
  2550                           ;main.c: 70: {
  2551                           ;main.c: 71: RB0 = 0;
  2552  01B8  1283               	bcf	status, 5	;RP0=0, select bank0
  2553  01B9  1303               	bcf	status, 6	;RP1=0, select bank0
  2554  01BA  1006               	bcf	(48/8),(48)&7	;volatile
  2555                           	line	72
  2556                           	
  2557  01BB                     l7960:	
  2558                           ;main.c: 72: strcpy(Downside_Data, Rly_str[1]);
  2559  01BB  30BC               	movlw	(_Downside_Data&0ffh)
  2560  01BC  00A0               	movwf	(?_strcpy)
  2561  01BD  3000               	movlw	(0x1/2)
  2562  01BE  00A1               	movwf	(?_strcpy+1)
  2563  01BF  30A1               	movlw	(_Rly_str+011h&0ffh)
  2564  01C0  00A2               	movwf	(0+?_strcpy+02h)
  2565  01C1  3001               	movlw	(0x2/2)
  2566  01C2  00A3               	movwf	(1+?_strcpy+02h)
  2567  01C3  158A  233B  118A   	fcall	_strcpy
  2568  01C6  29C7               	goto	l2469
  2569                           	line	73
  2570                           	
  2571  01C7                     l2474:	
  2572                           	line	74
  2573                           	
  2574  01C7                     l2469:	
  2575                           	line	79
  2576                           ;main.c: 73: }
  2577                           ;main.c: 74: }
  2578                           ;main.c: 78: {
  2579                           ;main.c: 79: strcpy(Upside_Data, "Temp            ");
  2580  01C7  30CD               	movlw	(_Upside_Data&0ffh)
  2581  01C8  1283               	bcf	status, 5	;RP0=0, select bank0
  2582  01C9  1303               	bcf	status, 6	;RP1=0, select bank0
  2583  01CA  00A0               	movwf	(?_strcpy)
  2584  01CB  3000               	movlw	(0x1/2)
  2585  01CC  00A1               	movwf	(?_strcpy+1)
  2586  01CD  3034               	movlw	low((STR_1-__stringbase))
  2587  01CE  00A2               	movwf	(0+?_strcpy+02h)
  2588  01CF  3080               	movlw	80h
  2589  01D0  00A3               	movwf	(1+?_strcpy+02h)
  2590  01D1  158A  233B  118A   	fcall	_strcpy
  2591                           	line	80
  2592                           	
  2593  01D4                     l7962:	
  2594                           ;main.c: 80: DoubletoAscii(Temp, Upside_Data);
  2595  01D4  1683               	bsf	status, 5	;RP0=1, select bank1
  2596  01D5  1303               	bcf	status, 6	;RP1=0, select bank1
  2597  01D6  0837               	movf	(_Temp+3)^080h,w
  2598  01D7  1283               	bcf	status, 5	;RP0=0, select bank0
  2599  01D8  1303               	bcf	status, 6	;RP1=0, select bank0
  2600  01D9  00E3               	movwf	(?_DoubletoAscii+3)
  2601  01DA  1683               	bsf	status, 5	;RP0=1, select bank1
  2602  01DB  1303               	bcf	status, 6	;RP1=0, select bank1
  2603  01DC  0836               	movf	(_Temp+2)^080h,w
  2604  01DD  1283               	bcf	status, 5	;RP0=0, select bank0
  2605  01DE  1303               	bcf	status, 6	;RP1=0, select bank0
  2606  01DF  00E2               	movwf	(?_DoubletoAscii+2)
  2607  01E0  1683               	bsf	status, 5	;RP0=1, select bank1
  2608  01E1  1303               	bcf	status, 6	;RP1=0, select bank1
  2609  01E2  0835               	movf	(_Temp+1)^080h,w
  2610  01E3  1283               	bcf	status, 5	;RP0=0, select bank0
  2611  01E4  1303               	bcf	status, 6	;RP1=0, select bank0
  2612  01E5  00E1               	movwf	(?_DoubletoAscii+1)
  2613  01E6  1683               	bsf	status, 5	;RP0=1, select bank1
  2614  01E7  1303               	bcf	status, 6	;RP1=0, select bank1
  2615  01E8  0834               	movf	(_Temp)^080h,w
  2616  01E9  1283               	bcf	status, 5	;RP0=0, select bank0
  2617  01EA  1303               	bcf	status, 6	;RP1=0, select bank0
  2618  01EB  00E0               	movwf	(?_DoubletoAscii)
  2619                           
  2620  01EC  30CD               	movlw	(_Upside_Data)&0ffh
  2621  01ED  00E7               	movwf	(??_main+0)+0
  2622  01EE  0867               	movf	(??_main+0)+0,w
  2623  01EF  00E4               	movwf	(0+?_DoubletoAscii+04h)
  2624  01F0  118A  2244  118A   	fcall	_DoubletoAscii
  2625                           	line	81
  2626                           	
  2627  01F3                     l7964:	
  2628                           ;main.c: 81: Upside_Data[14] = 0xDF;
  2629  01F3  30DF               	movlw	(0DFh)
  2630  01F4  1283               	bcf	status, 5	;RP0=0, select bank0
  2631  01F5  1303               	bcf	status, 6	;RP1=0, select bank0
  2632  01F6  00E7               	movwf	(??_main+0)+0
  2633  01F7  0867               	movf	(??_main+0)+0,w
  2634  01F8  1683               	bsf	status, 5	;RP0=1, select bank1
  2635  01F9  1303               	bcf	status, 6	;RP1=0, select bank1
  2636  01FA  00DB               	movwf	0+(_Upside_Data)^080h+0Eh
  2637                           	line	82
  2638                           	
  2639  01FB                     l7966:	
  2640                           ;main.c: 82: Upside_Data[15] = 'C';
  2641  01FB  3043               	movlw	(043h)
  2642  01FC  1283               	bcf	status, 5	;RP0=0, select bank0
  2643  01FD  1303               	bcf	status, 6	;RP1=0, select bank0
  2644  01FE  00E7               	movwf	(??_main+0)+0
  2645  01FF  0867               	movf	(??_main+0)+0,w
  2646  0200  1683               	bsf	status, 5	;RP0=1, select bank1
  2647  0201  1303               	bcf	status, 6	;RP1=0, select bank1
  2648  0202  00DC               	movwf	0+(_Upside_Data)^080h+0Fh
  2649                           	line	84
  2650                           	
  2651  0203                     l7968:	
  2652                           ;main.c: 83: }
  2653                           ;main.c: 84: strcpy(Vfd_Data, Upside_Data);
  2654  0203  30B2               	movlw	(_Vfd_Data&0ffh)
  2655  0204  1283               	bcf	status, 5	;RP0=0, select bank0
  2656  0205  1303               	bcf	status, 6	;RP1=0, select bank0
  2657  0206  00A0               	movwf	(?_strcpy)
  2658  0207  3001               	movlw	(0x3/2)
  2659  0208  00A1               	movwf	(?_strcpy+1)
  2660  0209  30CD               	movlw	(_Upside_Data&0ffh)
  2661  020A  00A2               	movwf	(0+?_strcpy+02h)
  2662  020B  3000               	movlw	(0x1/2)
  2663  020C  00A3               	movwf	(1+?_strcpy+02h)
  2664  020D  158A  233B  118A   	fcall	_strcpy
  2665                           	line	85
  2666                           	
  2667  0210                     l7970:	
  2668                           ;main.c: 85: strcat(Vfd_Data, Downside_Data);
  2669  0210  30BC               	movlw	(_Downside_Data)&0ffh
  2670  0211  1283               	bcf	status, 5	;RP0=0, select bank0
  2671  0212  1303               	bcf	status, 6	;RP1=0, select bank0
  2672  0213  00E7               	movwf	(??_main+0)+0
  2673  0214  0867               	movf	(??_main+0)+0,w
  2674  0215  00A0               	movwf	(?_strcat)
  2675  0216  30B2               	movlw	(_Vfd_Data)&0ffh
  2676  0217  158A  22E0  118A   	fcall	_strcat
  2677                           	line	87
  2678                           	
  2679  021A                     l7972:	
  2680                           ;main.c: 87: vfd_write(0x0B);
  2681  021A  300B               	movlw	(0Bh)
  2682  021B  158A  239C  118A   	fcall	_vfd_write
  2683                           	line	88
  2684                           	
  2685  021E                     l7974:	
  2686                           ;main.c: 88: for(i = 0; i < 32; i++) vfd_write(Vfd_Data[i]);
  2687  021E  1683               	bsf	status, 5	;RP0=1, select bank1
  2688  021F  1303               	bcf	status, 6	;RP1=0, select bank1
  2689  0220  01EA               	clrf	(main@i)^080h
  2690                           	
  2691  0221                     l7976:	
  2692  0221  3020               	movlw	(020h)
  2693  0222  026A               	subwf	(main@i)^080h,w
  2694  0223  1C03               	skipc
  2695  0224  2A26               	goto	u2971
  2696  0225  2A27               	goto	u2970
  2697  0226                     u2971:
  2698  0226  2A29               	goto	l7980
  2699  0227                     u2970:
  2700  0227  282B               	goto	l7926
  2701                           	
  2702  0228                     l7978:	
  2703  0228  282B               	goto	l7926
  2704                           	
  2705  0229                     l2475:	
  2706                           	
  2707  0229                     l7980:	
  2708  0229  086A               	movf	(main@i)^080h,w
  2709  022A  3EB2               	addlw	_Vfd_Data&0ffh
  2710  022B  0084               	movwf	fsr0
  2711  022C  1783               	bsf	status, 7	;select IRP bank3
  2712  022D  0800               	movf	indf,w
  2713  022E  158A  239C  118A   	fcall	_vfd_write
  2714                           	
  2715  0231                     l7982:	
  2716  0231  3001               	movlw	(01h)
  2717  0232  1283               	bcf	status, 5	;RP0=0, select bank0
  2718  0233  1303               	bcf	status, 6	;RP1=0, select bank0
  2719  0234  00E7               	movwf	(??_main+0)+0
  2720  0235  0867               	movf	(??_main+0)+0,w
  2721  0236  1683               	bsf	status, 5	;RP0=1, select bank1
  2722  0237  1303               	bcf	status, 6	;RP1=0, select bank1
  2723  0238  07EA               	addwf	(main@i)^080h,f
  2724                           	
  2725  0239                     l7984:	
  2726  0239  3020               	movlw	(020h)
  2727  023A  026A               	subwf	(main@i)^080h,w
  2728  023B  1C03               	skipc
  2729  023C  2A3E               	goto	u2981
  2730  023D  2A3F               	goto	u2980
  2731  023E                     u2981:
  2732  023E  2A29               	goto	l7980
  2733  023F                     u2980:
  2734  023F  282B               	goto	l7926
  2735                           	
  2736  0240                     l2476:	
  2737  0240  282B               	goto	l7926
  2738                           	line	89
  2739                           	
  2740  0241                     l2477:	
  2741                           	line	47
  2742  0241  282B               	goto	l7926
  2743                           	
  2744  0242                     l2478:	
  2745                           	line	91
  2746                           	
  2747  0242                     l2479:	
  2748                           	global	start
  2749  0242  118A  2811         	ljmp	start
  2750                           	opt stack 0
  2751                           GLOBAL	__end_of_main
  2752  0244                     	__end_of_main:
  2753                           	signat	_main,88
  2754                           	global	_hw_init
  2755                           
  2756 ;; *************** function _hw_init *****************
  2757 ;; Defined at:
  2758 ;;		line 9 in file "C:\PIC_WorkSpace\AquaTempFan\hw_init.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;		None
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;		None
  2763 ;; Return value:  Size  Location     Type
  2764 ;;		None               void
  2765 ;; Registers used:
  2766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2772 ;;      Params:         0       0       0       0       0
  2773 ;;      Locals:         0       0       0       0       0
  2774 ;;      Temps:          0       0       0       0       0
  2775 ;;      Totals:         0       0       0       0       0
  2776 ;;Total ram usage:        0 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; Hardware stack levels required when called:    2
  2779 ;; This function calls:
  2780 ;;		_Adc_init
  2781 ;; This function is called by:
  2782 ;;		_main
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           psect	text737,local,class=CODE,delta=2,merge=1
  2786                           global __ptext737
  2787  0B6B                     __ptext737:	;psect for function _hw_init
  2788                           psect	text737
  2789                           	file	"C:\PIC_WorkSpace\AquaTempFan\hw_init.c"
  2790                           	line	9
  2791                           	global	__size_of_hw_init
  2792  0031                     	__size_of_hw_init	equ	__end_of_hw_init-_hw_init
  2793                           	
  2794  0B6B                     _hw_init:	
  2795                           	opt	stack 5
  2796                           ; Regs used in _hw_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2797                           	line	11
  2798                           	
  2799  0B6B                     l7848:	
  2800                           ;hw_init.c: 11: OSCCON = 0x60;
  2801  0B6B  3060               	movlw	(060h)
  2802  0B6C  1683               	bsf	status, 5	;RP0=1, select bank1
  2803  0B6D  1303               	bcf	status, 6	;RP1=0, select bank1
  2804  0B6E  008F               	movwf	(143)^080h	;volatile
  2805                           	line	15
  2806                           	
  2807  0B6F                     l7850:	
  2808                           ;hw_init.c: 15: nRBPU = 1;
  2809  0B6F  1781               	bsf	(1039/8)^080h,(1039)&7	;volatile
  2810                           	line	16
  2811                           	
  2812  0B70                     l7852:	
  2813                           ;hw_init.c: 16: INTEDG = 0;
  2814  0B70  1301               	bcf	(1038/8)^080h,(1038)&7	;volatile
  2815                           	line	17
  2816                           	
  2817  0B71                     l7854:	
  2818                           ;hw_init.c: 17: T0CS = 0;
  2819  0B71  1281               	bcf	(1037/8)^080h,(1037)&7	;volatile
  2820                           	line	18
  2821                           	
  2822  0B72                     l7856:	
  2823                           ;hw_init.c: 18: T0SE = 0;
  2824  0B72  1201               	bcf	(1036/8)^080h,(1036)&7	;volatile
  2825                           	line	19
  2826                           	
  2827  0B73                     l7858:	
  2828                           ;hw_init.c: 19: PSA = 0;
  2829  0B73  1181               	bcf	(1035/8)^080h,(1035)&7	;volatile
  2830                           	line	20
  2831                           	
  2832  0B74                     l7860:	
  2833                           ;hw_init.c: 20: PS2 = 0;
  2834  0B74  1101               	bcf	(1034/8)^080h,(1034)&7	;volatile
  2835                           	line	21
  2836                           	
  2837  0B75                     l7862:	
  2838                           ;hw_init.c: 21: PS1 = 1;
  2839  0B75  1481               	bsf	(1033/8)^080h,(1033)&7	;volatile
  2840                           	line	22
  2841                           	
  2842  0B76                     l7864:	
  2843                           ;hw_init.c: 22: PS0 = 0;
  2844  0B76  1001               	bcf	(1032/8)^080h,(1032)&7	;volatile
  2845                           	line	26
  2846                           	
  2847  0B77                     l7866:	
  2848                           ;hw_init.c: 26: GIE = 0;
  2849  0B77  138B               	bcf	(95/8),(95)&7	;volatile
  2850                           	line	27
  2851                           	
  2852  0B78                     l7868:	
  2853                           ;hw_init.c: 27: PEIE = 1;
  2854  0B78  170B               	bsf	(94/8),(94)&7	;volatile
  2855                           	line	28
  2856                           	
  2857  0B79                     l7870:	
  2858                           ;hw_init.c: 28: TMR0IE = 1;
  2859  0B79  168B               	bsf	(93/8),(93)&7	;volatile
  2860                           	line	29
  2861                           	
  2862  0B7A                     l7872:	
  2863                           ;hw_init.c: 29: INT0IE = 0;
  2864  0B7A  120B               	bcf	(92/8),(92)&7	;volatile
  2865                           	line	30
  2866                           	
  2867  0B7B                     l7874:	
  2868                           ;hw_init.c: 30: RBIE = 0;
  2869  0B7B  118B               	bcf	(91/8),(91)&7	;volatile
  2870                           	line	31
  2871                           	
  2872  0B7C                     l7876:	
  2873                           ;hw_init.c: 31: TMR0IF = 0;
  2874  0B7C  110B               	bcf	(90/8),(90)&7	;volatile
  2875                           	line	32
  2876                           	
  2877  0B7D                     l7878:	
  2878                           ;hw_init.c: 32: INT0IF = 0;
  2879  0B7D  108B               	bcf	(89/8),(89)&7	;volatile
  2880                           	line	33
  2881                           	
  2882  0B7E                     l7880:	
  2883                           ;hw_init.c: 33: RBIF = 0;
  2884  0B7E  100B               	bcf	(88/8),(88)&7	;volatile
  2885                           	line	36
  2886                           	
  2887  0B7F                     l7882:	
  2888                           ;hw_init.c: 36: ADIE = 1;
  2889  0B7F  170C               	bsf	(1126/8)^080h,(1126)&7	;volatile
  2890                           	line	37
  2891                           	
  2892  0B80                     l7884:	
  2893                           ;hw_init.c: 37: RCIE = 0;
  2894  0B80  128C               	bcf	(1125/8)^080h,(1125)&7	;volatile
  2895                           	line	38
  2896                           	
  2897  0B81                     l7886:	
  2898                           ;hw_init.c: 38: TXIE = 0;
  2899  0B81  120C               	bcf	(1124/8)^080h,(1124)&7	;volatile
  2900                           	line	39
  2901                           	
  2902  0B82                     l7888:	
  2903                           ;hw_init.c: 39: SSPIE = 0;
  2904  0B82  118C               	bcf	(1123/8)^080h,(1123)&7	;volatile
  2905                           	line	40
  2906                           	
  2907  0B83                     l7890:	
  2908                           ;hw_init.c: 40: CCP1IE = 0;
  2909  0B83  110C               	bcf	(1122/8)^080h,(1122)&7	;volatile
  2910                           	line	41
  2911                           	
  2912  0B84                     l7892:	
  2913                           ;hw_init.c: 41: TMR2IE = 0;
  2914  0B84  108C               	bcf	(1121/8)^080h,(1121)&7	;volatile
  2915                           	line	42
  2916                           	
  2917  0B85                     l7894:	
  2918                           ;hw_init.c: 42: TMR1IE = 0;
  2919  0B85  100C               	bcf	(1120/8)^080h,(1120)&7	;volatile
  2920                           	line	45
  2921                           	
  2922  0B86                     l7896:	
  2923                           ;hw_init.c: 45: PIR1 = 0x00;
  2924  0B86  1283               	bcf	status, 5	;RP0=0, select bank0
  2925  0B87  1303               	bcf	status, 6	;RP1=0, select bank0
  2926  0B88  018C               	clrf	(12)	;volatile
  2927                           	line	95
  2928                           	
  2929  0B89                     l7898:	
  2930                           ;hw_init.c: 95: TRISA = 0x01;
  2931  0B89  3001               	movlw	(01h)
  2932  0B8A  1683               	bsf	status, 5	;RP0=1, select bank1
  2933  0B8B  1303               	bcf	status, 6	;RP1=0, select bank1
  2934  0B8C  0085               	movwf	(133)^080h	;volatile
  2935                           	line	96
  2936                           ;hw_init.c: 96: PORTA = 0x00;
  2937  0B8D  1283               	bcf	status, 5	;RP0=0, select bank0
  2938  0B8E  1303               	bcf	status, 6	;RP1=0, select bank0
  2939  0B8F  0185               	clrf	(5)	;volatile
  2940                           	line	99
  2941                           	
  2942  0B90                     l7900:	
  2943                           ;hw_init.c: 99: TRISB = 0x08;
  2944  0B90  3008               	movlw	(08h)
  2945  0B91  1683               	bsf	status, 5	;RP0=1, select bank1
  2946  0B92  1303               	bcf	status, 6	;RP1=0, select bank1
  2947  0B93  0086               	movwf	(134)^080h	;volatile
  2948                           	line	100
  2949                           	
  2950  0B94                     l7902:	
  2951                           ;hw_init.c: 100: PORTB = 0x00;
  2952  0B94  1283               	bcf	status, 5	;RP0=0, select bank0
  2953  0B95  1303               	bcf	status, 6	;RP1=0, select bank0
  2954  0B96  0186               	clrf	(6)	;volatile
  2955                           	line	127
  2956                           	
  2957  0B97                     l7904:	
  2958                           ;hw_init.c: 127: TMR0 = 0;
  2959  0B97  0181               	clrf	(1)	;volatile
  2960                           	line	130
  2961                           	
  2962  0B98                     l7906:	
  2963                           ;hw_init.c: 130: Adc_init();
  2964  0B98  158A  23D0  158A   	fcall	_Adc_init
  2965                           	line	132
  2966                           	
  2967  0B9B                     l1210:	
  2968  0B9B  0008               	return
  2969                           	opt stack 0
  2970                           GLOBAL	__end_of_hw_init
  2971  0B9C                     	__end_of_hw_init:
  2972                           	signat	_hw_init,88
  2973                           	global	_Adc_init
  2974                           
  2975 ;; *************** function _Adc_init *****************
  2976 ;; Defined at:
  2977 ;;		line 23 in file "C:\PIC_WorkSpace\AquaTempFan\ADC_CTRL.C"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;		None
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;  i               1    1[BANK0 ] unsigned char 
  2982 ;; Return value:  Size  Location     Type
  2983 ;;		None               void
  2984 ;; Registers used:
  2985 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2991 ;;      Params:         0       0       0       0       0
  2992 ;;      Locals:         0       1       0       0       0
  2993 ;;      Temps:          0       1       0       0       0
  2994 ;;      Totals:         0       2       0       0       0
  2995 ;;Total ram usage:        2 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; Hardware stack levels required when called:    1
  2998 ;; This function calls:
  2999 ;;		Nothing
  3000 ;; This function is called by:
  3001 ;;		_hw_init
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           psect	text738,local,class=CODE,delta=2,merge=1
  3005                           global __ptext738
  3006  0BD0                     __ptext738:	;psect for function _Adc_init
  3007                           psect	text738
  3008                           	file	"C:\PIC_WorkSpace\AquaTempFan\ADC_CTRL.C"
  3009                           	line	23
  3010                           	global	__size_of_Adc_init
  3011  003C                     	__size_of_Adc_init	equ	__end_of_Adc_init-_Adc_init
  3012                           	
  3013  0BD0                     _Adc_init:	
  3014                           	opt	stack 5
  3015                           ; Regs used in _Adc_init: [wreg-fsr0h+status,2+status,0]
  3016                           	line	26
  3017                           	
  3018  0BD0                     l7824:	
  3019                           ;ADC_CTRL.C: 24: unsigned char i;
  3020                           ;ADC_CTRL.C: 26: ANSEL = 0x01;
  3021  0BD0  3001               	movlw	(01h)
  3022  0BD1  1683               	bsf	status, 5	;RP0=1, select bank1
  3023  0BD2  1303               	bcf	status, 6	;RP1=0, select bank1
  3024  0BD3  009B               	movwf	(155)^080h	;volatile
  3025                           	line	27
  3026                           ;ADC_CTRL.C: 27: ADCON1 = 0xC0;
  3027  0BD4  30C0               	movlw	(0C0h)
  3028  0BD5  009F               	movwf	(159)^080h	;volatile
  3029                           	line	28
  3030                           ;ADC_CTRL.C: 28: ADCON0 = 0x80;
  3031  0BD6  3080               	movlw	(080h)
  3032  0BD7  1283               	bcf	status, 5	;RP0=0, select bank0
  3033  0BD8  1303               	bcf	status, 6	;RP1=0, select bank0
  3034  0BD9  009F               	movwf	(31)	;volatile
  3035                           	line	29
  3036                           	
  3037  0BDA                     l7826:	
  3038                           ;ADC_CTRL.C: 29: ADON = 1;
  3039  0BDA  141F               	bsf	(248/8),(248)&7	;volatile
  3040                           	line	31
  3041                           	
  3042  0BDB                     l7828:	
  3043                           ;ADC_CTRL.C: 31: ADC_DATA_BUF.WORD = 0;
  3044  0BDB  01F3               	clrf	(_ADC_DATA_BUF)	;volatile
  3045  0BDC  01F4               	clrf	(_ADC_DATA_BUF+1)	;volatile
  3046                           	line	32
  3047                           	
  3048  0BDD                     l7830:	
  3049                           ;ADC_CTRL.C: 32: Adc_Data = 0;
  3050  0BDD  1683               	bsf	status, 5	;RP0=1, select bank1
  3051  0BDE  1303               	bcf	status, 6	;RP1=0, select bank1
  3052  0BDF  01B8               	clrf	(_Adc_Data)^080h	;volatile
  3053  0BE0  01B9               	clrf	(_Adc_Data+1)^080h	;volatile
  3054                           	line	33
  3055                           	
  3056  0BE1                     l7832:	
  3057                           ;ADC_CTRL.C: 33: AdcDataGetFlag = 0;
  3058  0BE1  01BA               	clrf	(_AdcDataGetFlag)^080h	;volatile
  3059                           	line	34
  3060                           	
  3061  0BE2                     l7834:	
  3062                           ;ADC_CTRL.C: 34: Adc_data = 0;
  3063  0BE2  01DE               	clrf	(_Adc_data)^080h	;volatile
  3064  0BE3  01DF               	clrf	(_Adc_data+1)^080h	;volatile
  3065                           	line	35
  3066                           	
  3067  0BE4                     l7836:	
  3068                           ;ADC_CTRL.C: 35: for(i = 0; i < 10; i++) Adc_Buf[i] = 0;
  3069  0BE4  1283               	bcf	status, 5	;RP0=0, select bank0
  3070  0BE5  1303               	bcf	status, 6	;RP1=0, select bank0
  3071  0BE6  01A1               	clrf	(Adc_init@i)
  3072                           	
  3073  0BE7                     l7838:	
  3074  0BE7  300A               	movlw	(0Ah)
  3075  0BE8  0221               	subwf	(Adc_init@i),w
  3076  0BE9  1C03               	skipc
  3077  0BEA  2BEC               	goto	u2891
  3078  0BEB  2BED               	goto	u2890
  3079  0BEC                     u2891:
  3080  0BEC  2BEF               	goto	l7842
  3081  0BED                     u2890:
  3082  0BED  2C04               	goto	l604
  3083                           	
  3084  0BEE                     l7840:	
  3085  0BEE  2C04               	goto	l604
  3086                           	
  3087  0BEF                     l603:	
  3088                           	
  3089  0BEF                     l7842:	
  3090  0BEF  0821               	movf	(Adc_init@i),w
  3091  0BF0  00A0               	movwf	(??_Adc_init+0)+0
  3092  0BF1  0720               	addwf	(??_Adc_init+0)+0,w
  3093  0BF2  3EA0               	addlw	_Adc_Buf&0ffh
  3094  0BF3  0084               	movwf	fsr0
  3095  0BF4  3000               	movlw	low(0)
  3096  0BF5  1383               	bcf	status, 7	;select IRP bank1
  3097  0BF6  0080               	movwf	indf
  3098  0BF7  0A84               	incf	fsr0,f
  3099  0BF8  3000               	movlw	high(0)
  3100  0BF9  0080               	movwf	indf
  3101                           	
  3102  0BFA                     l7844:	
  3103  0BFA  3001               	movlw	(01h)
  3104  0BFB  00A0               	movwf	(??_Adc_init+0)+0
  3105  0BFC  0820               	movf	(??_Adc_init+0)+0,w
  3106  0BFD  07A1               	addwf	(Adc_init@i),f
  3107                           	
  3108  0BFE                     l7846:	
  3109  0BFE  300A               	movlw	(0Ah)
  3110  0BFF  0221               	subwf	(Adc_init@i),w
  3111  0C00  1C03               	skipc
  3112  0C01  2C03               	goto	u2901
  3113  0C02  2C04               	goto	u2900
  3114  0C03                     u2901:
  3115  0C03  2BEF               	goto	l7842
  3116  0C04                     u2900:
  3117                           	
  3118  0C04                     l604:	
  3119                           	line	36
  3120                           ;ADC_CTRL.C: 36: Adc_point = 0;
  3121  0C04  1683               	bsf	status, 5	;RP0=1, select bank1
  3122  0C05  1303               	bcf	status, 6	;RP1=0, select bank1
  3123  0C06  01BB               	clrf	(_Adc_point)^080h
  3124                           	line	38
  3125                           ;ADC_CTRL.C: 38: ConvertStep = 0;
  3126  0C07  01F0               	clrf	(_ConvertStep)	;volatile
  3127                           	line	39
  3128                           ;ADC_CTRL.C: 39: GO_nDONE = 0;
  3129  0C08  1283               	bcf	status, 5	;RP0=0, select bank0
  3130  0C09  1303               	bcf	status, 6	;RP1=0, select bank0
  3131  0C0A  111F               	bcf	(250/8),(250)&7	;volatile
  3132                           	line	40
  3133                           	
  3134  0C0B                     l605:	
  3135  0C0B  0008               	return
  3136                           	opt stack 0
  3137                           GLOBAL	__end_of_Adc_init
  3138  0C0C                     	__end_of_Adc_init:
  3139                           	signat	_Adc_init,88
  3140                           	global	_int_init
  3141                           
  3142 ;; *************** function _int_init *****************
  3143 ;; Defined at:
  3144 ;;		line 18 in file "C:\PIC_WorkSpace\AquaTempFan\interrupt_ctrl.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;		None
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;		None
  3149 ;; Return value:  Size  Location     Type
  3150 ;;		None               void
  3151 ;; Registers used:
  3152 ;;		status,2
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3158 ;;      Params:         0       0       0       0       0
  3159 ;;      Locals:         0       0       0       0       0
  3160 ;;      Temps:          0       0       0       0       0
  3161 ;;      Totals:         0       0       0       0       0
  3162 ;;Total ram usage:        0 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; Hardware stack levels required when called:    1
  3165 ;; This function calls:
  3166 ;;		Nothing
  3167 ;; This function is called by:
  3168 ;;		_main
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           psect	text739,local,class=CODE,delta=2,merge=1
  3172                           global __ptext739
  3173  0A5D                     __ptext739:	;psect for function _int_init
  3174                           psect	text739
  3175                           	file	"C:\PIC_WorkSpace\AquaTempFan\interrupt_ctrl.c"
  3176                           	line	18
  3177                           	global	__size_of_int_init
  3178  0008                     	__size_of_int_init	equ	__end_of_int_init-_int_init
  3179                           	
  3180  0A5D                     _int_init:	
  3181                           	opt	stack 6
  3182                           ; Regs used in _int_init: [status,2]
  3183                           	line	19
  3184                           	
  3185  0A5D                     l7908:	
  3186                           ;interrupt_ctrl.c: 19: TMR0 = 0;
  3187  0A5D  1283               	bcf	status, 5	;RP0=0, select bank0
  3188  0A5E  1303               	bcf	status, 6	;RP1=0, select bank0
  3189  0A5F  0181               	clrf	(1)	;volatile
  3190                           	line	21
  3191                           	
  3192  0A60                     l7910:	
  3193                           ;interrupt_ctrl.c: 21: T05_Counter = 0;
  3194  0A60  01F2               	clrf	(_T05_Counter)	;volatile
  3195                           	line	22
  3196                           ;interrupt_ctrl.c: 22: T1_Counter = 0;
  3197  0A61  01EA               	clrf	(_T1_Counter)	;volatile
  3198  0A62  01EB               	clrf	(_T1_Counter+1)	;volatile
  3199                           	line	23
  3200                           	
  3201  0A63                     l7912:	
  3202                           ;interrupt_ctrl.c: 23: Cycle_Unit.Byte = 0x00;
  3203  0A63  01F1               	clrf	(_Cycle_Unit)	;volatile
  3204                           	line	24
  3205                           	
  3206  0A64                     l1819:	
  3207  0A64  0008               	return
  3208                           	opt stack 0
  3209                           GLOBAL	__end_of_int_init
  3210  0A65                     	__end_of_int_init:
  3211                           	signat	_int_init,88
  3212                           	global	_vfd_data_init
  3213                           
  3214 ;; *************** function _vfd_data_init *****************
  3215 ;; Defined at:
  3216 ;;		line 13 in file "C:\PIC_WorkSpace\AquaTempFan\vfd_data.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;		None
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  i               1    0        unsigned char 
  3221 ;; Return value:  Size  Location     Type
  3222 ;;		None               void
  3223 ;; Registers used:
  3224 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3230 ;;      Params:         0       0       0       0       0
  3231 ;;      Locals:         0       0       0       0       0
  3232 ;;      Temps:          0       0       0       0       0
  3233 ;;      Totals:         0       0       0       0       0
  3234 ;;Total ram usage:        0 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:    3
  3237 ;; This function calls:
  3238 ;;		_strcpy
  3239 ;; This function is called by:
  3240 ;;		_main
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           psect	text740,local,class=CODE,delta=2,merge=1
  3244                           global __ptext740
  3245  0A7E                     __ptext740:	;psect for function _vfd_data_init
  3246                           psect	text740
  3247                           	file	"C:\PIC_WorkSpace\AquaTempFan\vfd_data.c"
  3248                           	line	13
  3249                           	global	__size_of_vfd_data_init
  3250  001B                     	__size_of_vfd_data_init	equ	__end_of_vfd_data_init-_vfd_data_init
  3251                           	
  3252  0A7E                     _vfd_data_init:	
  3253                           	opt	stack 4
  3254                           ; Regs used in _vfd_data_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3255                           	line	15
  3256                           	
  3257  0A7E                     l7986:	
  3258                           ;vfd_data.c: 14: unsigned char i;
  3259                           ;vfd_data.c: 15: strcpy(Upside_Data, "   Now Loading  ");
  3260  0A7E  30CD               	movlw	(_Upside_Data&0ffh)
  3261  0A7F  1283               	bcf	status, 5	;RP0=0, select bank0
  3262  0A80  1303               	bcf	status, 6	;RP1=0, select bank0
  3263  0A81  00A0               	movwf	(?_strcpy)
  3264  0A82  3000               	movlw	(0x1/2)
  3265  0A83  00A1               	movwf	(?_strcpy+1)
  3266  0A84  3001               	movlw	low((STR_4-__stringbase))
  3267  0A85  00A2               	movwf	(0+?_strcpy+02h)
  3268  0A86  3080               	movlw	80h
  3269  0A87  00A3               	movwf	(1+?_strcpy+02h)
  3270  0A88  158A  233B  158A   	fcall	_strcpy
  3271                           	line	16
  3272                           ;vfd_data.c: 16: strcpy(Downside_Data, "0123456789ABCDEF");
  3273  0A8B  30BC               	movlw	(_Downside_Data&0ffh)
  3274  0A8C  1283               	bcf	status, 5	;RP0=0, select bank0
  3275  0A8D  1303               	bcf	status, 6	;RP1=0, select bank0
  3276  0A8E  00A0               	movwf	(?_strcpy)
  3277  0A8F  3000               	movlw	(0x1/2)
  3278  0A90  00A1               	movwf	(?_strcpy+1)
  3279  0A91  3012               	movlw	low((STR_5-__stringbase))
  3280  0A92  00A2               	movwf	(0+?_strcpy+02h)
  3281  0A93  3080               	movlw	80h
  3282  0A94  00A3               	movwf	(1+?_strcpy+02h)
  3283  0A95  158A  233B  158A   	fcall	_strcpy
  3284                           	line	17
  3285                           	
  3286  0A98                     l3750:	
  3287  0A98  0008               	return
  3288                           	opt stack 0
  3289                           GLOBAL	__end_of_vfd_data_init
  3290  0A99                     	__end_of_vfd_data_init:
  3291                           	signat	_vfd_data_init,88
  3292                           	global	_vfd_init
  3293                           
  3294 ;; *************** function _vfd_init *****************
  3295 ;; Defined at:
  3296 ;;		line 25 in file "C:\PIC_WorkSpace\AquaTempFan\vfd_ctrl.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;		None
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;  i               1   13[BANK0 ] unsigned char 
  3301 ;;  busy_flag       1   12[BANK0 ] unsigned char 
  3302 ;; Return value:  Size  Location     Type
  3303 ;;		None               void
  3304 ;; Registers used:
  3305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3311 ;;      Params:         0       0       0       0       0
  3312 ;;      Locals:         0       2       0       0       0
  3313 ;;      Temps:          0       1       0       0       0
  3314 ;;      Totals:         0       3       0       0       0
  3315 ;;Total ram usage:        3 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:    3
  3318 ;; This function calls:
  3319 ;;		_vfd_write
  3320 ;;		_strcpy
  3321 ;; This function is called by:
  3322 ;;		_main
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           psect	text741,local,class=CODE,delta=2,merge=1
  3326                           global __ptext741
  3327  0D14                     __ptext741:	;psect for function _vfd_init
  3328                           psect	text741
  3329                           	file	"C:\PIC_WorkSpace\AquaTempFan\vfd_ctrl.c"
  3330                           	line	25
  3331                           	global	__size_of_vfd_init
  3332  0089                     	__size_of_vfd_init	equ	__end_of_vfd_init-_vfd_init
  3333                           	
  3334  0D14                     _vfd_init:	
  3335                           	opt	stack 4
  3336                           ; Regs used in _vfd_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3337                           	line	28
  3338                           	
  3339  0D14                     l7988:	
  3340                           ;vfd_ctrl.c: 26: unsigned char i, busy_flag;
  3341                           ;vfd_ctrl.c: 28: busy_flag = 0;
  3342  0D14  1283               	bcf	status, 5	;RP0=0, select bank0
  3343  0D15  1303               	bcf	status, 6	;RP1=0, select bank0
  3344  0D16  01AC               	clrf	(vfd_init@busy_flag)
  3345                           	line	29
  3346                           ;vfd_ctrl.c: 29: while(RB3);
  3347  0D17  2D18               	goto	l3098
  3348                           	
  3349  0D18                     l3099:	
  3350                           	
  3351  0D18                     l3098:	
  3352  0D18  1986               	btfsc	(51/8),(51)&7	;volatile
  3353  0D19  2D1B               	goto	u2991
  3354  0D1A  2D1C               	goto	u2990
  3355  0D1B                     u2991:
  3356  0D1B  2D18               	goto	l3098
  3357  0D1C                     u2990:
  3358  0D1C  2D59               	goto	l8006
  3359                           	
  3360  0D1D                     l3100:	
  3361                           	line	30
  3362                           ;vfd_ctrl.c: 30: while(busy_flag == 0){
  3363  0D1D  2D59               	goto	l8006
  3364                           	
  3365  0D1E                     l3102:	
  3366                           	line	31
  3367                           ;vfd_ctrl.c: 31: RB2 = 1;
  3368  0D1E  1506               	bsf	(50/8),(50)&7	;volatile
  3369                           	line	32
  3370                           ;vfd_ctrl.c: 32: RB5 = 1;
  3371  0D1F  1686               	bsf	(53/8),(53)&7	;volatile
  3372                           	line	33
  3373                           ;vfd_ctrl.c: 33: for(i = 0; i < 100; i++)if(RB3 == 1) busy_flag = 1;
  3374  0D20  01AD               	clrf	(vfd_init@i)
  3375                           	
  3376  0D21                     l7990:	
  3377  0D21  3064               	movlw	(064h)
  3378  0D22  022D               	subwf	(vfd_init@i),w
  3379  0D23  1C03               	skipc
  3380  0D24  2D26               	goto	u3001
  3381  0D25  2D27               	goto	u3000
  3382  0D26                     u3001:
  3383  0D26  2D29               	goto	l3103
  3384  0D27                     u3000:
  3385  0D27  2D3B               	goto	l3104
  3386                           	
  3387  0D28                     l7992:	
  3388  0D28  2D3B               	goto	l3104
  3389                           	
  3390  0D29                     l3103:	
  3391  0D29  1D86               	btfss	(51/8),(51)&7	;volatile
  3392  0D2A  2D2C               	goto	u3011
  3393  0D2B  2D2D               	goto	u3010
  3394  0D2C                     u3011:
  3395  0D2C  2D31               	goto	l7996
  3396  0D2D                     u3010:
  3397                           	
  3398  0D2D                     l7994:	
  3399  0D2D  01AC               	clrf	(vfd_init@busy_flag)
  3400  0D2E  1403               	bsf	status,0
  3401  0D2F  0DAC               	rlf	(vfd_init@busy_flag),f
  3402  0D30  2D31               	goto	l7996
  3403                           	
  3404  0D31                     l3105:	
  3405                           	
  3406  0D31                     l7996:	
  3407  0D31  3001               	movlw	(01h)
  3408  0D32  00AB               	movwf	(??_vfd_init+0)+0
  3409  0D33  082B               	movf	(??_vfd_init+0)+0,w
  3410  0D34  07AD               	addwf	(vfd_init@i),f
  3411  0D35  3064               	movlw	(064h)
  3412  0D36  022D               	subwf	(vfd_init@i),w
  3413  0D37  1C03               	skipc
  3414  0D38  2D3A               	goto	u3021
  3415  0D39  2D3B               	goto	u3020
  3416  0D3A                     u3021:
  3417  0D3A  2D29               	goto	l3103
  3418  0D3B                     u3020:
  3419                           	
  3420  0D3B                     l3104:	
  3421                           	line	34
  3422                           ;vfd_ctrl.c: 34: RB5 = 0;
  3423  0D3B  1286               	bcf	(53/8),(53)&7	;volatile
  3424                           	line	35
  3425                           ;vfd_ctrl.c: 35: for(i = 0; i < 100; i++)if(RB3 == 1) busy_flag = 1;
  3426  0D3C  01AD               	clrf	(vfd_init@i)
  3427                           	
  3428  0D3D                     l7998:	
  3429  0D3D  3064               	movlw	(064h)
  3430  0D3E  022D               	subwf	(vfd_init@i),w
  3431  0D3F  1C03               	skipc
  3432  0D40  2D42               	goto	u3031
  3433  0D41  2D43               	goto	u3030
  3434  0D42                     u3031:
  3435  0D42  2D45               	goto	l3106
  3436  0D43                     u3030:
  3437  0D43  2D59               	goto	l8006
  3438                           	
  3439  0D44                     l8000:	
  3440  0D44  2D59               	goto	l8006
  3441                           	
  3442  0D45                     l3106:	
  3443  0D45  1D86               	btfss	(51/8),(51)&7	;volatile
  3444  0D46  2D48               	goto	u3041
  3445  0D47  2D49               	goto	u3040
  3446  0D48                     u3041:
  3447  0D48  2D4D               	goto	l8004
  3448  0D49                     u3040:
  3449                           	
  3450  0D49                     l8002:	
  3451  0D49  01AC               	clrf	(vfd_init@busy_flag)
  3452  0D4A  1403               	bsf	status,0
  3453  0D4B  0DAC               	rlf	(vfd_init@busy_flag),f
  3454  0D4C  2D4D               	goto	l8004
  3455                           	
  3456  0D4D                     l3108:	
  3457                           	
  3458  0D4D                     l8004:	
  3459  0D4D  3001               	movlw	(01h)
  3460  0D4E  00AB               	movwf	(??_vfd_init+0)+0
  3461  0D4F  082B               	movf	(??_vfd_init+0)+0,w
  3462  0D50  07AD               	addwf	(vfd_init@i),f
  3463  0D51  3064               	movlw	(064h)
  3464  0D52  022D               	subwf	(vfd_init@i),w
  3465  0D53  1C03               	skipc
  3466  0D54  2D56               	goto	u3051
  3467  0D55  2D57               	goto	u3050
  3468  0D56                     u3051:
  3469  0D56  2D45               	goto	l3106
  3470  0D57                     u3050:
  3471  0D57  2D59               	goto	l8006
  3472                           	
  3473  0D58                     l3107:	
  3474  0D58  2D59               	goto	l8006
  3475                           	line	36
  3476                           	
  3477  0D59                     l3101:	
  3478                           	line	30
  3479                           	
  3480  0D59                     l8006:	
  3481  0D59  082C               	movf	(vfd_init@busy_flag),w
  3482  0D5A  1D03               	skipz
  3483  0D5B  2D5D               	goto	u3060
  3484  0D5C  2D1E               	goto	l3102
  3485  0D5D                     u3060:
  3486                           	
  3487  0D5D                     l3109:	
  3488                           	line	37
  3489                           ;vfd_ctrl.c: 36: }
  3490                           ;vfd_ctrl.c: 37: RB2 = 0;
  3491  0D5D  1106               	bcf	(50/8),(50)&7	;volatile
  3492                           	line	38
  3493                           	
  3494  0D5E                     l8008:	
  3495                           ;vfd_ctrl.c: 38: vfd_write(0x20);
  3496  0D5E  3020               	movlw	(020h)
  3497  0D5F  158A  239C  158A   	fcall	_vfd_write
  3498                           	line	39
  3499                           	
  3500  0D62                     l8010:	
  3501                           ;vfd_ctrl.c: 39: for(i = 0; i < 32; i++) vfd_write(0x20);
  3502  0D62  1283               	bcf	status, 5	;RP0=0, select bank0
  3503  0D63  1303               	bcf	status, 6	;RP1=0, select bank0
  3504  0D64  01AD               	clrf	(vfd_init@i)
  3505                           	
  3506  0D65                     l8012:	
  3507  0D65  3020               	movlw	(020h)
  3508  0D66  022D               	subwf	(vfd_init@i),w
  3509  0D67  1C03               	skipc
  3510  0D68  2D6A               	goto	u3071
  3511  0D69  2D6B               	goto	u3070
  3512  0D6A                     u3071:
  3513  0D6A  2D6D               	goto	l8016
  3514  0D6B                     u3070:
  3515  0D6B  2D7E               	goto	l8022
  3516                           	
  3517  0D6C                     l8014:	
  3518  0D6C  2D7E               	goto	l8022
  3519                           	
  3520  0D6D                     l3110:	
  3521                           	
  3522  0D6D                     l8016:	
  3523  0D6D  3020               	movlw	(020h)
  3524  0D6E  158A  239C  158A   	fcall	_vfd_write
  3525                           	
  3526  0D71                     l8018:	
  3527  0D71  3001               	movlw	(01h)
  3528  0D72  1283               	bcf	status, 5	;RP0=0, select bank0
  3529  0D73  1303               	bcf	status, 6	;RP1=0, select bank0
  3530  0D74  00AB               	movwf	(??_vfd_init+0)+0
  3531  0D75  082B               	movf	(??_vfd_init+0)+0,w
  3532  0D76  07AD               	addwf	(vfd_init@i),f
  3533                           	
  3534  0D77                     l8020:	
  3535  0D77  3020               	movlw	(020h)
  3536  0D78  022D               	subwf	(vfd_init@i),w
  3537  0D79  1C03               	skipc
  3538  0D7A  2D7C               	goto	u3081
  3539  0D7B  2D7D               	goto	u3080
  3540  0D7C                     u3081:
  3541  0D7C  2D6D               	goto	l8016
  3542  0D7D                     u3080:
  3543  0D7D  2D7E               	goto	l8022
  3544                           	
  3545  0D7E                     l3111:	
  3546                           	line	40
  3547                           	
  3548  0D7E                     l8022:	
  3549                           ;vfd_ctrl.c: 40: vfd_write(0x0B);
  3550  0D7E  300B               	movlw	(0Bh)
  3551  0D7F  158A  239C  158A   	fcall	_vfd_write
  3552                           	line	42
  3553                           	
  3554  0D82                     l8024:	
  3555                           ;vfd_ctrl.c: 42: strcpy(Upside_Data, "                ");
  3556  0D82  30CD               	movlw	(_Upside_Data&0ffh)
  3557  0D83  1283               	bcf	status, 5	;RP0=0, select bank0
  3558  0D84  1303               	bcf	status, 6	;RP1=0, select bank0
  3559  0D85  00A0               	movwf	(?_strcpy)
  3560  0D86  3000               	movlw	(0x1/2)
  3561  0D87  00A1               	movwf	(?_strcpy+1)
  3562  0D88  3023               	movlw	low((STR_2-__stringbase))
  3563  0D89  00A2               	movwf	(0+?_strcpy+02h)
  3564  0D8A  3080               	movlw	80h
  3565  0D8B  00A3               	movwf	(1+?_strcpy+02h)
  3566  0D8C  158A  233B  158A   	fcall	_strcpy
  3567                           	line	43
  3568                           	
  3569  0D8F                     l8026:	
  3570                           ;vfd_ctrl.c: 43: strcpy(Downside_Data, "                ");
  3571  0D8F  30BC               	movlw	(_Downside_Data&0ffh)
  3572  0D90  1283               	bcf	status, 5	;RP0=0, select bank0
  3573  0D91  1303               	bcf	status, 6	;RP1=0, select bank0
  3574  0D92  00A0               	movwf	(?_strcpy)
  3575  0D93  3000               	movlw	(0x1/2)
  3576  0D94  00A1               	movwf	(?_strcpy+1)
  3577  0D95  3023               	movlw	low((STR_3-__stringbase))
  3578  0D96  00A2               	movwf	(0+?_strcpy+02h)
  3579  0D97  3080               	movlw	80h
  3580  0D98  00A3               	movwf	(1+?_strcpy+02h)
  3581  0D99  158A  233B  158A   	fcall	_strcpy
  3582                           	line	44
  3583                           	
  3584  0D9C                     l3112:	
  3585  0D9C  0008               	return
  3586                           	opt stack 0
  3587                           GLOBAL	__end_of_vfd_init
  3588  0D9D                     	__end_of_vfd_init:
  3589                           	signat	_vfd_init,88
  3590                           	global	_strcpy
  3591                           
  3592 ;; *************** function _strcpy *****************
  3593 ;; Defined at:
  3594 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v1.10\sources\strcpy.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  to              2    0[BANK0 ] PTR unsigned char 
  3597 ;;		 -> Vfd_Data(33), Upside_Data(17), Downside_Data(17), 
  3598 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  3599 ;;		 -> STR_5(17), STR_4(17), STR_3(17), STR_2(17), 
  3600 ;;		 -> STR_1(17), Upside_Data(17), Rly_str(34), 
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;  cp              2    9[BANK0 ] PTR unsigned char 
  3603 ;;		 -> Vfd_Data(33), Upside_Data(17), Downside_Data(17), 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  2    wreg      PTR unsigned char 
  3606 ;; Registers used:
  3607 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3613 ;;      Params:         0       4       0       0       0
  3614 ;;      Locals:         0       2       0       0       0
  3615 ;;      Temps:          0       5       0       0       0
  3616 ;;      Totals:         0      11       0       0       0
  3617 ;;Total ram usage:       11 bytes
  3618 ;; Hardware stack levels used:    2
  3619 ;; Hardware stack levels required when called:    1
  3620 ;; This function calls:
  3621 ;;		Nothing
  3622 ;; This function is called by:
  3623 ;;		_main
  3624 ;;		_vfd_init
  3625 ;;		_vfd_data_init
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           psect	text742,local,class=CODE,delta=2,merge=1
  3629                           global __ptext742
  3630  0B3B                     __ptext742:	;psect for function _strcpy
  3631                           psect	text742
  3632                           	file	"C:\Program Files\Microchip\xc8\v1.10\sources\strcpy.c"
  3633                           	line	10
  3634                           	global	__size_of_strcpy
  3635  0030                     	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  3636                           	
  3637  0B3B                     _strcpy:	
  3638                           	opt	stack 5
  3639                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3640                           	line	18
  3641                           	
  3642  0B3B                     l8028:	
  3643  0B3B  1283               	bcf	status, 5	;RP0=0, select bank0
  3644  0B3C  1303               	bcf	status, 6	;RP1=0, select bank0
  3645  0B3D  0821               	movf	(strcpy@to+1),w
  3646  0B3E  01AA               	clrf	(strcpy@cp+1)
  3647  0B3F  07AA               	addwf	(strcpy@cp+1)
  3648  0B40  0820               	movf	(strcpy@to),w
  3649  0B41  01A9               	clrf	(strcpy@cp)
  3650  0B42  07A9               	addwf	(strcpy@cp)
  3651                           
  3652                           	line	19
  3653  0B43  2B45               	goto	l8030
  3654                           	
  3655  0B44                     l5603:	
  3656                           	line	20
  3657  0B44  2B45               	goto	l8030
  3658                           	
  3659  0B45                     l5602:	
  3660                           	line	19
  3661                           	
  3662  0B45                     l8030:	
  3663  0B45  0823               	movf	(strcpy@from+1),w
  3664  0B46  00A5               	movwf	(??_strcpy+0)+0+1
  3665  0B47  0822               	movf	(strcpy@from),w
  3666  0B48  00A4               	movwf	(??_strcpy+0)+0
  3667  0B49  3001               	movlw	(01h)
  3668  0B4A  07A2               	addwf	(strcpy@from),f
  3669  0B4B  1803               	skipnc
  3670  0B4C  0AA3               	incf	(strcpy@from+1),f
  3671  0B4D  0825               	movf	1+(??_strcpy+0)+0,w
  3672  0B4E  00FF               	movwf	btemp+1
  3673  0B4F  0824               	movf	0+(??_strcpy+0)+0,w
  3674  0B50  0084               	movwf	fsr0
  3675  0B51  158A  2000  158A   	fcall	stringtab
  3676  0B54  00A6               	movwf	(??_strcpy+2)+0
  3677  0B55  082A               	movf	(strcpy@cp+1),w
  3678  0B56  00A8               	movwf	(??_strcpy+3)+0+1
  3679  0B57  0829               	movf	(strcpy@cp),w
  3680  0B58  00A7               	movwf	(??_strcpy+3)+0
  3681  0B59  3001               	movlw	(01h)
  3682  0B5A  07A9               	addwf	(strcpy@cp),f
  3683  0B5B  1803               	skipnc
  3684  0B5C  0AAA               	incf	(strcpy@cp+1),f
  3685  0B5D  0827               	movf	0+(??_strcpy+3)+0,w
  3686  0B5E  0084               	movwf	fsr0
  3687  0B5F  1783               	bsf	status,7
  3688  0B60  1C28               	btfss	1+(??_strcpy+3)+0,0
  3689  0B61  1383               	bcf	status,7
  3690  0B62  0826               	movf	(??_strcpy+2)+0,w
  3691  0B63  0080               	movwf	indf
  3692  0B64  0880               	movf	(indf),f
  3693  0B65  1D03               	skipz
  3694  0B66  2B68               	goto	u3091
  3695  0B67  2B69               	goto	u3090
  3696  0B68                     u3091:
  3697  0B68  2B45               	goto	l8030
  3698  0B69                     u3090:
  3699  0B69  2B6A               	goto	l5605
  3700                           	
  3701  0B6A                     l5604:	
  3702                           	line	22
  3703                           ;	Return value of _strcpy is never used
  3704                           	
  3705  0B6A                     l5605:	
  3706  0B6A  0008               	return
  3707                           	opt stack 0
  3708                           GLOBAL	__end_of_strcpy
  3709  0B6B                     	__end_of_strcpy:
  3710                           	signat	_strcpy,8313
  3711                           	global	_DoubletoAscii
  3712                           
  3713 ;; *************** function _DoubletoAscii *****************
  3714 ;; Defined at:
  3715 ;;		line 117 in file "C:\PIC_WorkSpace\AquaTempFan\vfd_ctrl.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;  data            4   64[BANK0 ] PTR unsigned char 
  3718 ;;  ascii           1   68[BANK0 ] PTR unsigned char 
  3719 ;;		 -> Upside_Data(17), 
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;  int_data        2    2[BANK1 ] int 
  3722 ;;  i               1    5[BANK1 ] unsigned char 
  3723 ;;  dec             1    4[BANK1 ] unsigned char 
  3724 ;;  databuf         1    1[BANK1 ] unsigned char 
  3725 ;;  flg             1    0[BANK1 ] unsigned char 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;		None               void
  3728 ;; Registers used:
  3729 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3735 ;;      Params:         0       5       0       0       0
  3736 ;;      Locals:         0       0       6       0       0
  3737 ;;      Temps:          0       2       0       0       0
  3738 ;;      Totals:         0       7       6       0       0
  3739 ;;Total ram usage:       13 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    3
  3742 ;; This function calls:
  3743 ;;		___flge
  3744 ;;		___flmul
  3745 ;;		___fladd
  3746 ;;		___fltol
  3747 ;;		_Power
  3748 ;;		___aldiv
  3749 ;;		___almod
  3750 ;; This function is called by:
  3751 ;;		_main
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           psect	text743,local,class=CODE,delta=2,merge=1
  3755                           global __ptext743
  3756  0244                     __ptext743:	;psect for function _DoubletoAscii
  3757                           psect	text743
  3758                           	file	"C:\PIC_WorkSpace\AquaTempFan\vfd_ctrl.c"
  3759                           	line	117
  3760                           	global	__size_of_DoubletoAscii
  3761  01CF                     	__size_of_DoubletoAscii	equ	__end_of_DoubletoAscii-_DoubletoAscii
  3762                           	
  3763  0244                     _DoubletoAscii:	
  3764                           	opt	stack 4
  3765                           ; Regs used in _DoubletoAscii: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3766                           	line	121
  3767                           	
  3768  0244                     l8032:	
  3769                           ;vfd_ctrl.c: 118: unsigned char i, dec, flg, databuf;
  3770                           ;vfd_ctrl.c: 119: int int_data;
  3771                           ;vfd_ctrl.c: 121: for(i = 0; i < 8; i++);
  3772  0244  1683               	bsf	status, 5	;RP0=1, select bank1
  3773  0245  1303               	bcf	status, 6	;RP1=0, select bank1
  3774  0246  01E5               	clrf	(DoubletoAscii@i)^080h
  3775                           	
  3776  0247                     l8034:	
  3777  0247  3008               	movlw	(08h)
  3778  0248  0265               	subwf	(DoubletoAscii@i)^080h,w
  3779  0249  1C03               	skipc
  3780  024A  2A4C               	goto	u3101
  3781  024B  2A4D               	goto	u3100
  3782  024C                     u3101:
  3783  024C  2A4F               	goto	l8038
  3784  024D                     u3100:
  3785  024D  2A5E               	goto	l8042
  3786                           	
  3787  024E                     l8036:	
  3788  024E  2A5E               	goto	l8042
  3789                           	
  3790  024F                     l3138:	
  3791                           	
  3792  024F                     l8038:	
  3793  024F  3001               	movlw	(01h)
  3794  0250  1283               	bcf	status, 5	;RP0=0, select bank0
  3795  0251  1303               	bcf	status, 6	;RP1=0, select bank0
  3796  0252  00E5               	movwf	(??_DoubletoAscii+0)+0
  3797  0253  0865               	movf	(??_DoubletoAscii+0)+0,w
  3798  0254  1683               	bsf	status, 5	;RP0=1, select bank1
  3799  0255  1303               	bcf	status, 6	;RP1=0, select bank1
  3800  0256  07E5               	addwf	(DoubletoAscii@i)^080h,f
  3801                           	
  3802  0257                     l8040:	
  3803  0257  3008               	movlw	(08h)
  3804  0258  0265               	subwf	(DoubletoAscii@i)^080h,w
  3805  0259  1C03               	skipc
  3806  025A  2A5C               	goto	u3111
  3807  025B  2A5D               	goto	u3110
  3808  025C                     u3111:
  3809  025C  2A4F               	goto	l8038
  3810  025D                     u3110:
  3811  025D  2A5E               	goto	l8042
  3812                           	
  3813  025E                     l3139:	
  3814                           	line	122
  3815                           	
  3816  025E                     l8042:	
  3817                           ;vfd_ctrl.c: 122: if(data < 0)
  3818  025E  1283               	bcf	status, 5	;RP0=0, select bank0
  3819  025F  1303               	bcf	status, 6	;RP1=0, select bank0
  3820  0260  0863               	movf	(DoubletoAscii@data+3),w
  3821  0261  00A3               	movwf	(?___flge+3)
  3822  0262  0862               	movf	(DoubletoAscii@data+2),w
  3823  0263  00A2               	movwf	(?___flge+2)
  3824  0264  0861               	movf	(DoubletoAscii@data+1),w
  3825  0265  00A1               	movwf	(?___flge+1)
  3826  0266  0860               	movf	(DoubletoAscii@data),w
  3827  0267  00A0               	movwf	(?___flge)
  3828                           
  3829  0268  3000               	movlw	0x0
  3830  0269  00A7               	movwf	3+(?___flge)+04h
  3831  026A  3000               	movlw	0x0
  3832  026B  00A6               	movwf	2+(?___flge)+04h
  3833  026C  3000               	movlw	0x0
  3834  026D  00A5               	movwf	1+(?___flge)+04h
  3835  026E  3000               	movlw	0x0
  3836  026F  00A4               	movwf	0+(?___flge)+04h
  3837                           
  3838  0270  118A  2776  118A   	fcall	___flge
  3839  0273  1803               	btfsc	status,0
  3840  0274  2A76               	goto	u3121
  3841  0275  2A77               	goto	u3120
  3842  0276                     u3121:
  3843  0276  2AAD               	goto	l8050
  3844  0277                     u3120:
  3845                           	line	124
  3846                           	
  3847  0277                     l8044:	
  3848                           ;vfd_ctrl.c: 123: {
  3849                           ;vfd_ctrl.c: 124: ascii[i++] = '-';
  3850  0277  302D               	movlw	(02Dh)
  3851  0278  1283               	bcf	status, 5	;RP0=0, select bank0
  3852  0279  1303               	bcf	status, 6	;RP1=0, select bank0
  3853  027A  00E5               	movwf	(??_DoubletoAscii+0)+0
  3854  027B  1683               	bsf	status, 5	;RP0=1, select bank1
  3855  027C  1303               	bcf	status, 6	;RP1=0, select bank1
  3856  027D  0865               	movf	(DoubletoAscii@i)^080h,w
  3857  027E  1283               	bcf	status, 5	;RP0=0, select bank0
  3858  027F  1303               	bcf	status, 6	;RP1=0, select bank0
  3859  0280  0764               	addwf	(DoubletoAscii@ascii),w
  3860  0281  00E6               	movwf	(??_DoubletoAscii+1)+0
  3861  0282  0866               	movf	0+(??_DoubletoAscii+1)+0,w
  3862  0283  0084               	movwf	fsr0
  3863  0284  0865               	movf	(??_DoubletoAscii+0)+0,w
  3864  0285  1383               	bcf	status, 7	;select IRP bank0
  3865  0286  0080               	movwf	indf
  3866                           	
  3867  0287                     l8046:	
  3868  0287  3001               	movlw	(01h)
  3869  0288  00E5               	movwf	(??_DoubletoAscii+0)+0
  3870  0289  0865               	movf	(??_DoubletoAscii+0)+0,w
  3871  028A  1683               	bsf	status, 5	;RP0=1, select bank1
  3872  028B  1303               	bcf	status, 6	;RP1=0, select bank1
  3873  028C  07E5               	addwf	(DoubletoAscii@i)^080h,f
  3874                           	line	125
  3875                           	
  3876  028D                     l8048:	
  3877                           ;vfd_ctrl.c: 125: data *= -1;
  3878  028D  30BF               	movlw	0xbf
  3879  028E  1283               	bcf	status, 5	;RP0=0, select bank0
  3880  028F  1303               	bcf	status, 6	;RP1=0, select bank0
  3881  0290  00B4               	movwf	(?___flmul+3)
  3882  0291  3080               	movlw	0x80
  3883  0292  00B3               	movwf	(?___flmul+2)
  3884  0293  3000               	movlw	0x0
  3885  0294  00B2               	movwf	(?___flmul+1)
  3886  0295  3000               	movlw	0x0
  3887  0296  00B1               	movwf	(?___flmul)
  3888                           
  3889  0297  0863               	movf	(DoubletoAscii@data+3),w
  3890  0298  00B8               	movwf	3+(?___flmul)+04h
  3891  0299  0862               	movf	(DoubletoAscii@data+2),w
  3892  029A  00B7               	movwf	2+(?___flmul)+04h
  3893  029B  0861               	movf	(DoubletoAscii@data+1),w
  3894  029C  00B6               	movwf	1+(?___flmul)+04h
  3895  029D  0860               	movf	(DoubletoAscii@data),w
  3896  029E  00B5               	movwf	0+(?___flmul)+04h
  3897                           
  3898  029F  118A  2582  118A   	fcall	___flmul
  3899  02A2  1283               	bcf	status, 5	;RP0=0, select bank0
  3900  02A3  1303               	bcf	status, 6	;RP1=0, select bank0
  3901  02A4  0834               	movf	(3+(?___flmul)),w
  3902  02A5  00E3               	movwf	(DoubletoAscii@data+3)
  3903  02A6  0833               	movf	(2+(?___flmul)),w
  3904  02A7  00E2               	movwf	(DoubletoAscii@data+2)
  3905  02A8  0832               	movf	(1+(?___flmul)),w
  3906  02A9  00E1               	movwf	(DoubletoAscii@data+1)
  3907  02AA  0831               	movf	(0+(?___flmul)),w
  3908  02AB  00E0               	movwf	(DoubletoAscii@data)
  3909                           
  3910  02AC  2AAD               	goto	l8050
  3911                           	line	126
  3912                           	
  3913  02AD                     l3140:	
  3914                           	line	128
  3915                           	
  3916  02AD                     l8050:	
  3917                           ;vfd_ctrl.c: 126: }
  3918                           ;vfd_ctrl.c: 128: int_data = (int)(data * 100.0 + 0.5);
  3919  02AD  1283               	bcf	status, 5	;RP0=0, select bank0
  3920  02AE  1303               	bcf	status, 6	;RP1=0, select bank0
  3921  02AF  0863               	movf	(DoubletoAscii@data+3),w
  3922  02B0  00B8               	movwf	3+(?___flmul)+04h
  3923  02B1  0862               	movf	(DoubletoAscii@data+2),w
  3924  02B2  00B7               	movwf	2+(?___flmul)+04h
  3925  02B3  0861               	movf	(DoubletoAscii@data+1),w
  3926  02B4  00B6               	movwf	1+(?___flmul)+04h
  3927  02B5  0860               	movf	(DoubletoAscii@data),w
  3928  02B6  00B5               	movwf	0+(?___flmul)+04h
  3929                           
  3930  02B7  3042               	movlw	0x42
  3931  02B8  00B4               	movwf	(?___flmul+3)
  3932  02B9  30C8               	movlw	0xc8
  3933  02BA  00B3               	movwf	(?___flmul+2)
  3934  02BB  3000               	movlw	0x0
  3935  02BC  00B2               	movwf	(?___flmul+1)
  3936  02BD  3000               	movlw	0x0
  3937  02BE  00B1               	movwf	(?___flmul)
  3938                           
  3939  02BF  118A  2582  118A   	fcall	___flmul
  3940  02C2  1283               	bcf	status, 5	;RP0=0, select bank0
  3941  02C3  1303               	bcf	status, 6	;RP1=0, select bank0
  3942  02C4  0834               	movf	(3+(?___flmul)),w
  3943  02C5  00CC               	movwf	3+(?___fladd)+04h
  3944  02C6  0833               	movf	(2+(?___flmul)),w
  3945  02C7  00CB               	movwf	2+(?___fladd)+04h
  3946  02C8  0832               	movf	(1+(?___flmul)),w
  3947  02C9  00CA               	movwf	1+(?___fladd)+04h
  3948  02CA  0831               	movf	(0+(?___flmul)),w
  3949  02CB  00C9               	movwf	0+(?___fladd)+04h
  3950                           
  3951  02CC  303F               	movlw	0x3f
  3952  02CD  00C8               	movwf	(?___fladd+3)
  3953  02CE  3000               	movlw	0x0
  3954  02CF  00C7               	movwf	(?___fladd+2)
  3955  02D0  3000               	movlw	0x0
  3956  02D1  00C6               	movwf	(?___fladd+1)
  3957  02D2  3000               	movlw	0x0
  3958  02D3  00C5               	movwf	(?___fladd)
  3959                           
  3960  02D4  118A  2413  118A   	fcall	___fladd
  3961  02D7  1283               	bcf	status, 5	;RP0=0, select bank0
  3962  02D8  1303               	bcf	status, 6	;RP1=0, select bank0
  3963  02D9  0848               	movf	(3+(?___fladd)),w
  3964  02DA  00D8               	movwf	(?___fltol+3)
  3965  02DB  0847               	movf	(2+(?___fladd)),w
  3966  02DC  00D7               	movwf	(?___fltol+2)
  3967  02DD  0846               	movf	(1+(?___fladd)),w
  3968  02DE  00D6               	movwf	(?___fltol+1)
  3969  02DF  0845               	movf	(0+(?___fladd)),w
  3970  02E0  00D5               	movwf	(?___fltol)
  3971                           
  3972  02E1  158A  26BC  118A   	fcall	___fltol
  3973  02E4  1283               	bcf	status, 5	;RP0=0, select bank0
  3974  02E5  1303               	bcf	status, 6	;RP1=0, select bank0
  3975  02E6  0856               	movf	1+(((0+(?___fltol)))),w
  3976  02E7  1683               	bsf	status, 5	;RP0=1, select bank1
  3977  02E8  1303               	bcf	status, 6	;RP1=0, select bank1
  3978  02E9  01E3               	clrf	(DoubletoAscii@int_data+1)^080h
  3979  02EA  07E3               	addwf	(DoubletoAscii@int_data+1)^080h
  3980  02EB  1283               	bcf	status, 5	;RP0=0, select bank0
  3981  02EC  1303               	bcf	status, 6	;RP1=0, select bank0
  3982  02ED  0855               	movf	0+(((0+(?___fltol)))),w
  3983  02EE  1683               	bsf	status, 5	;RP0=1, select bank1
  3984  02EF  1303               	bcf	status, 6	;RP1=0, select bank1
  3985  02F0  01E2               	clrf	(DoubletoAscii@int_data)^080h
  3986  02F1  07E2               	addwf	(DoubletoAscii@int_data)^080h
  3987                           
  3988                           	line	129
  3989                           	
  3990  02F2                     l8052:	
  3991                           ;vfd_ctrl.c: 129: dec = 4;
  3992  02F2  3004               	movlw	(04h)
  3993  02F3  1283               	bcf	status, 5	;RP0=0, select bank0
  3994  02F4  1303               	bcf	status, 6	;RP1=0, select bank0
  3995  02F5  00E5               	movwf	(??_DoubletoAscii+0)+0
  3996  02F6  0865               	movf	(??_DoubletoAscii+0)+0,w
  3997  02F7  1683               	bsf	status, 5	;RP0=1, select bank1
  3998  02F8  1303               	bcf	status, 6	;RP1=0, select bank1
  3999  02F9  00E4               	movwf	(DoubletoAscii@dec)^080h
  4000                           	line	130
  4001                           	
  4002  02FA                     l8054:	
  4003                           ;vfd_ctrl.c: 130: flg = 0;
  4004  02FA  01E0               	clrf	(DoubletoAscii@flg)^080h
  4005                           	line	131
  4006                           ;vfd_ctrl.c: 131: while(i < 14)
  4007  02FB  2C0B               	goto	l3141
  4008                           	
  4009  02FC                     l3142:	
  4010                           	line	133
  4011                           	
  4012  02FC                     l8056:	
  4013                           ;vfd_ctrl.c: 132: {
  4014                           ;vfd_ctrl.c: 133: databuf = (unsigned char)(int_data / Power(10, dec));
  4015  02FC  0864               	movf	(DoubletoAscii@dec)^080h,w
  4016  02FD  1283               	bcf	status, 5	;RP0=0, select bank0
  4017  02FE  1303               	bcf	status, 6	;RP1=0, select bank0
  4018  02FF  00E5               	movwf	(??_DoubletoAscii+0)+0
  4019  0300  0865               	movf	(??_DoubletoAscii+0)+0,w
  4020  0301  00B1               	movwf	0+(?_Power)+04h
  4021  0302  3000               	movlw	0
  4022  0303  00B0               	movwf	(?_Power+3)
  4023  0304  3000               	movlw	0
  4024  0305  00AF               	movwf	(?_Power+2)
  4025  0306  3000               	movlw	0
  4026  0307  00AE               	movwf	(?_Power+1)
  4027  0308  300A               	movlw	0Ah
  4028  0309  00AD               	movwf	(?_Power)
  4029                           
  4030  030A  158A  240C  118A   	fcall	_Power
  4031  030D  1283               	bcf	status, 5	;RP0=0, select bank0
  4032  030E  1303               	bcf	status, 6	;RP1=0, select bank0
  4033  030F  0830               	movf	(3+(?_Power)),w
  4034  0310  00BB               	movwf	(?___aldiv+3)
  4035  0311  082F               	movf	(2+(?_Power)),w
  4036  0312  00BA               	movwf	(?___aldiv+2)
  4037  0313  082E               	movf	(1+(?_Power)),w
  4038  0314  00B9               	movwf	(?___aldiv+1)
  4039  0315  082D               	movf	(0+(?_Power)),w
  4040  0316  00B8               	movwf	(?___aldiv)
  4041                           
  4042  0317  1683               	bsf	status, 5	;RP0=1, select bank1
  4043  0318  1303               	bcf	status, 6	;RP1=0, select bank1
  4044  0319  0862               	movf	(DoubletoAscii@int_data)^080h,w
  4045  031A  1283               	bcf	status, 5	;RP0=0, select bank0
  4046  031B  1303               	bcf	status, 6	;RP1=0, select bank0
  4047  031C  00BC               	movwf	0+(?___aldiv)+04h
  4048  031D  1683               	bsf	status, 5	;RP0=1, select bank1
  4049  031E  1303               	bcf	status, 6	;RP1=0, select bank1
  4050  031F  0863               	movf	(DoubletoAscii@int_data+1)^080h,w
  4051  0320  1283               	bcf	status, 5	;RP0=0, select bank0
  4052  0321  1303               	bcf	status, 6	;RP1=0, select bank0
  4053  0322  00BD               	movwf	1+(?___aldiv)+04h
  4054  0323  3000               	movlw	0
  4055  0324  1BBD               	btfsc	1+(?___aldiv)+04h,7
  4056  0325  30FF               	movlw	255
  4057  0326  00BE               	movwf	2+(?___aldiv)+04h
  4058  0327  00BF               	movwf	3+(?___aldiv)+04h
  4059  0328  158A  2758  118A   	fcall	___aldiv
  4060  032B  1283               	bcf	status, 5	;RP0=0, select bank0
  4061  032C  1303               	bcf	status, 6	;RP1=0, select bank0
  4062  032D  0838               	movf	0+(((0+(?___aldiv)))),w
  4063  032E  00E6               	movwf	(??_DoubletoAscii+1)+0
  4064  032F  0866               	movf	(??_DoubletoAscii+1)+0,w
  4065  0330  1683               	bsf	status, 5	;RP0=1, select bank1
  4066  0331  1303               	bcf	status, 6	;RP1=0, select bank1
  4067  0332  00E1               	movwf	(DoubletoAscii@databuf)^080h
  4068                           	line	134
  4069                           ;vfd_ctrl.c: 134: int_data %= Power(10, dec);
  4070  0333  0864               	movf	(DoubletoAscii@dec)^080h,w
  4071  0334  1283               	bcf	status, 5	;RP0=0, select bank0
  4072  0335  1303               	bcf	status, 6	;RP1=0, select bank0
  4073  0336  00E5               	movwf	(??_DoubletoAscii+0)+0
  4074  0337  0865               	movf	(??_DoubletoAscii+0)+0,w
  4075  0338  00B1               	movwf	0+(?_Power)+04h
  4076  0339  3000               	movlw	0
  4077  033A  00B0               	movwf	(?_Power+3)
  4078  033B  3000               	movlw	0
  4079  033C  00AF               	movwf	(?_Power+2)
  4080  033D  3000               	movlw	0
  4081  033E  00AE               	movwf	(?_Power+1)
  4082  033F  300A               	movlw	0Ah
  4083  0340  00AD               	movwf	(?_Power)
  4084                           
  4085  0341  158A  240C  118A   	fcall	_Power
  4086  0344  1283               	bcf	status, 5	;RP0=0, select bank0
  4087  0345  1303               	bcf	status, 6	;RP1=0, select bank0
  4088  0346  0830               	movf	(3+(?_Power)),w
  4089  0347  00BB               	movwf	(?___almod+3)
  4090  0348  082F               	movf	(2+(?_Power)),w
  4091  0349  00BA               	movwf	(?___almod+2)
  4092  034A  082E               	movf	(1+(?_Power)),w
  4093  034B  00B9               	movwf	(?___almod+1)
  4094  034C  082D               	movf	(0+(?_Power)),w
  4095  034D  00B8               	movwf	(?___almod)
  4096                           
  4097  034E  1683               	bsf	status, 5	;RP0=1, select bank1
  4098  034F  1303               	bcf	status, 6	;RP1=0, select bank1
  4099  0350  0862               	movf	(DoubletoAscii@int_data)^080h,w
  4100  0351  1283               	bcf	status, 5	;RP0=0, select bank0
  4101  0352  1303               	bcf	status, 6	;RP1=0, select bank0
  4102  0353  00BC               	movwf	0+(?___almod)+04h
  4103  0354  1683               	bsf	status, 5	;RP0=1, select bank1
  4104  0355  1303               	bcf	status, 6	;RP1=0, select bank1
  4105  0356  0863               	movf	(DoubletoAscii@int_data+1)^080h,w
  4106  0357  1283               	bcf	status, 5	;RP0=0, select bank0
  4107  0358  1303               	bcf	status, 6	;RP1=0, select bank0
  4108  0359  00BD               	movwf	1+(?___almod)+04h
  4109  035A  3000               	movlw	0
  4110  035B  1BBD               	btfsc	1+(?___almod)+04h,7
  4111  035C  30FF               	movlw	255
  4112  035D  00BE               	movwf	2+(?___almod)+04h
  4113  035E  00BF               	movwf	3+(?___almod)+04h
  4114  035F  158A  262A  118A   	fcall	___almod
  4115  0362  1283               	bcf	status, 5	;RP0=0, select bank0
  4116  0363  1303               	bcf	status, 6	;RP1=0, select bank0
  4117  0364  0839               	movf	1+(((0+(?___almod)))),w
  4118  0365  1683               	bsf	status, 5	;RP0=1, select bank1
  4119  0366  1303               	bcf	status, 6	;RP1=0, select bank1
  4120  0367  01E3               	clrf	(DoubletoAscii@int_data+1)^080h
  4121  0368  07E3               	addwf	(DoubletoAscii@int_data+1)^080h
  4122  0369  1283               	bcf	status, 5	;RP0=0, select bank0
  4123  036A  1303               	bcf	status, 6	;RP1=0, select bank0
  4124  036B  0838               	movf	0+(((0+(?___almod)))),w
  4125  036C  1683               	bsf	status, 5	;RP0=1, select bank1
  4126  036D  1303               	bcf	status, 6	;RP1=0, select bank1
  4127  036E  01E2               	clrf	(DoubletoAscii@int_data)^080h
  4128  036F  07E2               	addwf	(DoubletoAscii@int_data)^080h
  4129                           
  4130                           	line	135
  4131                           	
  4132  0370                     l8058:	
  4133                           ;vfd_ctrl.c: 135: if(i == 11) ascii[i++] = '.';
  4134  0370  0865               	movf	(DoubletoAscii@i)^080h,w
  4135  0371  3A0B               	xorlw	0Bh
  4136  0372  1D03               	skipz
  4137  0373  2B75               	goto	u3131
  4138  0374  2B76               	goto	u3130
  4139  0375                     u3131:
  4140  0375  2B8D               	goto	l8064
  4141  0376                     u3130:
  4142                           	
  4143  0376                     l8060:	
  4144  0376  302E               	movlw	(02Eh)
  4145  0377  1283               	bcf	status, 5	;RP0=0, select bank0
  4146  0378  1303               	bcf	status, 6	;RP1=0, select bank0
  4147  0379  00E5               	movwf	(??_DoubletoAscii+0)+0
  4148  037A  1683               	bsf	status, 5	;RP0=1, select bank1
  4149  037B  1303               	bcf	status, 6	;RP1=0, select bank1
  4150  037C  0865               	movf	(DoubletoAscii@i)^080h,w
  4151  037D  1283               	bcf	status, 5	;RP0=0, select bank0
  4152  037E  1303               	bcf	status, 6	;RP1=0, select bank0
  4153  037F  0764               	addwf	(DoubletoAscii@ascii),w
  4154  0380  00E6               	movwf	(??_DoubletoAscii+1)+0
  4155  0381  0866               	movf	0+(??_DoubletoAscii+1)+0,w
  4156  0382  0084               	movwf	fsr0
  4157  0383  0865               	movf	(??_DoubletoAscii+0)+0,w
  4158  0384  1383               	bcf	status, 7	;select IRP bank0
  4159  0385  0080               	movwf	indf
  4160                           	
  4161  0386                     l8062:	
  4162  0386  3001               	movlw	(01h)
  4163  0387  00E5               	movwf	(??_DoubletoAscii+0)+0
  4164  0388  0865               	movf	(??_DoubletoAscii+0)+0,w
  4165  0389  1683               	bsf	status, 5	;RP0=1, select bank1
  4166  038A  1303               	bcf	status, 6	;RP1=0, select bank1
  4167  038B  07E5               	addwf	(DoubletoAscii@i)^080h,f
  4168  038C  2B8D               	goto	l8064
  4169                           	
  4170  038D                     l3143:	
  4171                           	line	136
  4172                           	
  4173  038D                     l8064:	
  4174                           ;vfd_ctrl.c: 136: if(databuf != 0)
  4175  038D  0861               	movf	(DoubletoAscii@databuf)^080h,w
  4176  038E  1D03               	skipz
  4177  038F  2B91               	goto	u3140
  4178  0390  2BA8               	goto	l8070
  4179  0391                     u3140:
  4180                           	line	138
  4181                           	
  4182  0391                     l8066:	
  4183                           ;vfd_ctrl.c: 137: {
  4184                           ;vfd_ctrl.c: 138: ascii[i] = 0x30 + databuf;
  4185  0391  0861               	movf	(DoubletoAscii@databuf)^080h,w
  4186  0392  3E30               	addlw	030h
  4187  0393  1283               	bcf	status, 5	;RP0=0, select bank0
  4188  0394  1303               	bcf	status, 6	;RP1=0, select bank0
  4189  0395  00E5               	movwf	(??_DoubletoAscii+0)+0
  4190  0396  1683               	bsf	status, 5	;RP0=1, select bank1
  4191  0397  1303               	bcf	status, 6	;RP1=0, select bank1
  4192  0398  0865               	movf	(DoubletoAscii@i)^080h,w
  4193  0399  1283               	bcf	status, 5	;RP0=0, select bank0
  4194  039A  1303               	bcf	status, 6	;RP1=0, select bank0
  4195  039B  0764               	addwf	(DoubletoAscii@ascii),w
  4196  039C  00E6               	movwf	(??_DoubletoAscii+1)+0
  4197  039D  0866               	movf	0+(??_DoubletoAscii+1)+0,w
  4198  039E  0084               	movwf	fsr0
  4199  039F  0865               	movf	(??_DoubletoAscii+0)+0,w
  4200  03A0  1383               	bcf	status, 7	;select IRP bank0
  4201  03A1  0080               	movwf	indf
  4202                           	line	139
  4203                           	
  4204  03A2                     l8068:	
  4205                           ;vfd_ctrl.c: 139: flg = 1;
  4206  03A2  1683               	bsf	status, 5	;RP0=1, select bank1
  4207  03A3  1303               	bcf	status, 6	;RP1=0, select bank1
  4208  03A4  01E0               	clrf	(DoubletoAscii@flg)^080h
  4209  03A5  1403               	bsf	status,0
  4210  03A6  0DE0               	rlf	(DoubletoAscii@flg)^080h,f
  4211                           	line	140
  4212                           ;vfd_ctrl.c: 140: } else {
  4213  03A7  2C02               	goto	l8086
  4214                           	
  4215  03A8                     l3144:	
  4216                           	line	141
  4217                           	
  4218  03A8                     l8070:	
  4219                           ;vfd_ctrl.c: 141: if(flg) ascii[i] = '0';
  4220  03A8  0860               	movf	(DoubletoAscii@flg)^080h,w
  4221  03A9  1D03               	skipz
  4222  03AA  2BAC               	goto	u3150
  4223  03AB  2BBD               	goto	l8074
  4224  03AC                     u3150:
  4225                           	
  4226  03AC                     l8072:	
  4227  03AC  3030               	movlw	(030h)
  4228  03AD  1283               	bcf	status, 5	;RP0=0, select bank0
  4229  03AE  1303               	bcf	status, 6	;RP1=0, select bank0
  4230  03AF  00E5               	movwf	(??_DoubletoAscii+0)+0
  4231  03B0  1683               	bsf	status, 5	;RP0=1, select bank1
  4232  03B1  1303               	bcf	status, 6	;RP1=0, select bank1
  4233  03B2  0865               	movf	(DoubletoAscii@i)^080h,w
  4234  03B3  1283               	bcf	status, 5	;RP0=0, select bank0
  4235  03B4  1303               	bcf	status, 6	;RP1=0, select bank0
  4236  03B5  0764               	addwf	(DoubletoAscii@ascii),w
  4237  03B6  00E6               	movwf	(??_DoubletoAscii+1)+0
  4238  03B7  0866               	movf	0+(??_DoubletoAscii+1)+0,w
  4239  03B8  0084               	movwf	fsr0
  4240  03B9  0865               	movf	(??_DoubletoAscii+0)+0,w
  4241  03BA  1383               	bcf	status, 7	;select IRP bank0
  4242  03BB  0080               	movwf	indf
  4243  03BC  2C02               	goto	l8086
  4244                           	line	142
  4245                           	
  4246  03BD                     l3146:	
  4247                           	line	144
  4248                           	
  4249  03BD                     l8074:	
  4250                           ;vfd_ctrl.c: 142: else
  4251                           ;vfd_ctrl.c: 143: {
  4252                           ;vfd_ctrl.c: 144: if(i != 10) ascii[i] = ' ';
  4253  03BD  1683               	bsf	status, 5	;RP0=1, select bank1
  4254  03BE  1303               	bcf	status, 6	;RP1=0, select bank1
  4255  03BF  0865               	movf	(DoubletoAscii@i)^080h,w
  4256  03C0  3A0A               	xorlw	0Ah
  4257  03C1  1903               	skipnz
  4258  03C2  2BC4               	goto	u3161
  4259  03C3  2BC5               	goto	u3160
  4260  03C4                     u3161:
  4261  03C4  2BD6               	goto	l8078
  4262  03C5                     u3160:
  4263                           	
  4264  03C5                     l8076:	
  4265  03C5  3020               	movlw	(020h)
  4266  03C6  1283               	bcf	status, 5	;RP0=0, select bank0
  4267  03C7  1303               	bcf	status, 6	;RP1=0, select bank0
  4268  03C8  00E5               	movwf	(??_DoubletoAscii+0)+0
  4269  03C9  1683               	bsf	status, 5	;RP0=1, select bank1
  4270  03CA  1303               	bcf	status, 6	;RP1=0, select bank1
  4271  03CB  0865               	movf	(DoubletoAscii@i)^080h,w
  4272  03CC  1283               	bcf	status, 5	;RP0=0, select bank0
  4273  03CD  1303               	bcf	status, 6	;RP1=0, select bank0
  4274  03CE  0764               	addwf	(DoubletoAscii@ascii),w
  4275  03CF  00E6               	movwf	(??_DoubletoAscii+1)+0
  4276  03D0  0866               	movf	0+(??_DoubletoAscii+1)+0,w
  4277  03D1  0084               	movwf	fsr0
  4278  03D2  0865               	movf	(??_DoubletoAscii+0)+0,w
  4279  03D3  1383               	bcf	status, 7	;select IRP bank0
  4280  03D4  0080               	movwf	indf
  4281  03D5  2C02               	goto	l8086
  4282                           	line	145
  4283                           	
  4284  03D6                     l3148:	
  4285                           	line	147
  4286                           	
  4287  03D6                     l8078:	
  4288                           ;vfd_ctrl.c: 145: else
  4289                           ;vfd_ctrl.c: 146: {
  4290                           ;vfd_ctrl.c: 147: ascii[i++] = '0';
  4291  03D6  3030               	movlw	(030h)
  4292  03D7  1283               	bcf	status, 5	;RP0=0, select bank0
  4293  03D8  00E5               	movwf	(??_DoubletoAscii+0)+0
  4294  03D9  1683               	bsf	status, 5	;RP0=1, select bank1
  4295  03DA  1303               	bcf	status, 6	;RP1=0, select bank1
  4296  03DB  0865               	movf	(DoubletoAscii@i)^080h,w
  4297  03DC  1283               	bcf	status, 5	;RP0=0, select bank0
  4298  03DD  1303               	bcf	status, 6	;RP1=0, select bank0
  4299  03DE  0764               	addwf	(DoubletoAscii@ascii),w
  4300  03DF  00E6               	movwf	(??_DoubletoAscii+1)+0
  4301  03E0  0866               	movf	0+(??_DoubletoAscii+1)+0,w
  4302  03E1  0084               	movwf	fsr0
  4303  03E2  0865               	movf	(??_DoubletoAscii+0)+0,w
  4304  03E3  1383               	bcf	status, 7	;select IRP bank0
  4305  03E4  0080               	movwf	indf
  4306                           	
  4307  03E5                     l8080:	
  4308  03E5  3001               	movlw	(01h)
  4309  03E6  00E5               	movwf	(??_DoubletoAscii+0)+0
  4310  03E7  0865               	movf	(??_DoubletoAscii+0)+0,w
  4311  03E8  1683               	bsf	status, 5	;RP0=1, select bank1
  4312  03E9  1303               	bcf	status, 6	;RP1=0, select bank1
  4313  03EA  07E5               	addwf	(DoubletoAscii@i)^080h,f
  4314                           	line	148
  4315                           	
  4316  03EB                     l8082:	
  4317                           ;vfd_ctrl.c: 148: ascii[i] = '.';
  4318  03EB  302E               	movlw	(02Eh)
  4319  03EC  1283               	bcf	status, 5	;RP0=0, select bank0
  4320  03ED  1303               	bcf	status, 6	;RP1=0, select bank0
  4321  03EE  00E5               	movwf	(??_DoubletoAscii+0)+0
  4322  03EF  1683               	bsf	status, 5	;RP0=1, select bank1
  4323  03F0  1303               	bcf	status, 6	;RP1=0, select bank1
  4324  03F1  0865               	movf	(DoubletoAscii@i)^080h,w
  4325  03F2  1283               	bcf	status, 5	;RP0=0, select bank0
  4326  03F3  1303               	bcf	status, 6	;RP1=0, select bank0
  4327  03F4  0764               	addwf	(DoubletoAscii@ascii),w
  4328  03F5  00E6               	movwf	(??_DoubletoAscii+1)+0
  4329  03F6  0866               	movf	0+(??_DoubletoAscii+1)+0,w
  4330  03F7  0084               	movwf	fsr0
  4331  03F8  0865               	movf	(??_DoubletoAscii+0)+0,w
  4332  03F9  0080               	movwf	indf
  4333                           	line	149
  4334                           	
  4335  03FA                     l8084:	
  4336                           ;vfd_ctrl.c: 149: flg = 1;
  4337  03FA  1683               	bsf	status, 5	;RP0=1, select bank1
  4338  03FB  1303               	bcf	status, 6	;RP1=0, select bank1
  4339  03FC  01E0               	clrf	(DoubletoAscii@flg)^080h
  4340  03FD  1403               	bsf	status,0
  4341  03FE  0DE0               	rlf	(DoubletoAscii@flg)^080h,f
  4342  03FF  2C02               	goto	l8086
  4343                           	line	150
  4344                           	
  4345  0400                     l3149:	
  4346  0400  2C02               	goto	l8086
  4347                           	line	151
  4348                           	
  4349  0401                     l3147:	
  4350  0401  2C02               	goto	l8086
  4351                           	line	152
  4352                           	
  4353  0402                     l3145:	
  4354                           	line	153
  4355                           	
  4356  0402                     l8086:	
  4357                           ;vfd_ctrl.c: 150: }
  4358                           ;vfd_ctrl.c: 151: }
  4359                           ;vfd_ctrl.c: 152: }
  4360                           ;vfd_ctrl.c: 153: i++;
  4361  0402  3001               	movlw	(01h)
  4362  0403  1283               	bcf	status, 5	;RP0=0, select bank0
  4363  0404  00E5               	movwf	(??_DoubletoAscii+0)+0
  4364  0405  0865               	movf	(??_DoubletoAscii+0)+0,w
  4365  0406  1683               	bsf	status, 5	;RP0=1, select bank1
  4366  0407  1303               	bcf	status, 6	;RP1=0, select bank1
  4367  0408  07E5               	addwf	(DoubletoAscii@i)^080h,f
  4368                           	line	154
  4369                           	
  4370  0409                     l8088:	
  4371                           ;vfd_ctrl.c: 154: dec--;
  4372  0409  3001               	movlw	low(01h)
  4373  040A  02E4               	subwf	(DoubletoAscii@dec)^080h,f
  4374                           	line	155
  4375                           	
  4376  040B                     l3141:	
  4377                           	line	131
  4378  040B  300E               	movlw	(0Eh)
  4379  040C  0265               	subwf	(DoubletoAscii@i)^080h,w
  4380  040D  1C03               	skipc
  4381  040E  2C10               	goto	u3171
  4382  040F  2C11               	goto	u3170
  4383  0410                     u3171:
  4384  0410  2AFC               	goto	l8056
  4385  0411                     u3170:
  4386  0411  2C12               	goto	l3151
  4387                           	
  4388  0412                     l3150:	
  4389                           	line	156
  4390                           	
  4391  0412                     l3151:	
  4392  0412  0008               	return
  4393                           	opt stack 0
  4394                           GLOBAL	__end_of_DoubletoAscii
  4395  0413                     	__end_of_DoubletoAscii:
  4396                           	signat	_DoubletoAscii,8312
  4397                           	global	_strcat
  4398                           
  4399 ;; *************** function _strcat *****************
  4400 ;; Defined at:
  4401 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v1.10\sources\strcat.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;  to              1    wreg     PTR unsigned char 
  4404 ;;		 -> Vfd_Data(33), 
  4405 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  4406 ;;		 -> Downside_Data(17), 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  to              1    2[BANK0 ] PTR unsigned char 
  4409 ;;		 -> Vfd_Data(33), 
  4410 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  4411 ;;		 -> Vfd_Data(33), 
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  1    wreg      PTR unsigned char 
  4414 ;; Registers used:
  4415 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4421 ;;      Params:         0       1       0       0       0
  4422 ;;      Locals:         0       2       0       0       0
  4423 ;;      Temps:          0       1       0       0       0
  4424 ;;      Totals:         0       4       0       0       0
  4425 ;;Total ram usage:        4 bytes
  4426 ;; Hardware stack levels used:    1
  4427 ;; Hardware stack levels required when called:    1
  4428 ;; This function calls:
  4429 ;;		Nothing
  4430 ;; This function is called by:
  4431 ;;		_main
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           psect	text744,local,class=CODE,delta=2,merge=1
  4435                           global __ptext744
  4436  0AE0                     __ptext744:	;psect for function _strcat
  4437                           psect	text744
  4438                           	file	"C:\Program Files\Microchip\xc8\v1.10\sources\strcat.c"
  4439                           	line	10
  4440                           	global	__size_of_strcat
  4441  002D                     	__size_of_strcat	equ	__end_of_strcat-_strcat
  4442                           	
  4443  0AE0                     _strcat:	
  4444                           	opt	stack 6
  4445                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  4446                           ;strcat@to stored from wreg
  4447                           	line	18
  4448  0AE0  1283               	bcf	status, 5	;RP0=0, select bank0
  4449  0AE1  1303               	bcf	status, 6	;RP1=0, select bank0
  4450  0AE2  00A2               	movwf	(strcat@to)
  4451                           	
  4452  0AE3                     l8090:	
  4453  0AE3  0822               	movf	(strcat@to),w
  4454  0AE4  00A1               	movwf	(??_strcat+0)+0
  4455  0AE5  0821               	movf	(??_strcat+0)+0,w
  4456  0AE6  00A3               	movwf	(strcat@cp)
  4457                           	line	19
  4458  0AE7  2AED               	goto	l8094
  4459                           	
  4460  0AE8                     l5594:	
  4461                           	line	20
  4462                           	
  4463  0AE8                     l8092:	
  4464  0AE8  3001               	movlw	(01h)
  4465  0AE9  00A1               	movwf	(??_strcat+0)+0
  4466  0AEA  0821               	movf	(??_strcat+0)+0,w
  4467  0AEB  07A3               	addwf	(strcat@cp),f
  4468  0AEC  2AED               	goto	l8094
  4469                           	
  4470  0AED                     l5593:	
  4471                           	line	19
  4472                           	
  4473  0AED                     l8094:	
  4474  0AED  0823               	movf	(strcat@cp),w
  4475  0AEE  0084               	movwf	fsr0
  4476  0AEF  1783               	bsf	status, 7	;select IRP bank2
  4477  0AF0  0880               	movf	indf,f
  4478  0AF1  1D03               	skipz
  4479  0AF2  2AF4               	goto	u3181
  4480  0AF3  2AF5               	goto	u3180
  4481  0AF4                     u3181:
  4482  0AF4  2AE8               	goto	l8092
  4483  0AF5                     u3180:
  4484  0AF5  2AF8               	goto	l8096
  4485                           	
  4486  0AF6                     l5595:	
  4487                           	line	21
  4488  0AF6  2AF8               	goto	l8096
  4489                           	
  4490  0AF7                     l5597:	
  4491                           	line	22
  4492  0AF7  2AF8               	goto	l8096
  4493                           	
  4494  0AF8                     l5596:	
  4495                           	line	21
  4496                           	
  4497  0AF8                     l8096:	
  4498  0AF8  0820               	movf	(strcat@from),w
  4499  0AF9  0084               	movwf	fsr0
  4500  0AFA  3001               	movlw	01h
  4501  0AFB  07A0               	addwf	(strcat@from),f
  4502  0AFC  1383               	bcf	status, 7	;select IRP bank0
  4503  0AFD  0800               	movf	indf,w
  4504  0AFE  00A1               	movwf	(??_strcat+0)+0
  4505  0AFF  0823               	movf	(strcat@cp),w
  4506  0B00  0084               	movwf	fsr0
  4507  0B01  3001               	movlw	01h
  4508  0B02  07A3               	addwf	(strcat@cp),f
  4509  0B03  0821               	movf	(??_strcat+0)+0,w
  4510  0B04  1783               	bsf	status, 7	;select IRP bank2
  4511  0B05  0080               	movwf	indf
  4512  0B06  0880               	movf	(indf),f
  4513  0B07  1D03               	skipz
  4514  0B08  2B0A               	goto	u3191
  4515  0B09  2B0B               	goto	u3190
  4516  0B0A                     u3191:
  4517  0B0A  2AF8               	goto	l8096
  4518  0B0B                     u3190:
  4519  0B0B  2B0C               	goto	l5599
  4520                           	
  4521  0B0C                     l5598:	
  4522                           	line	24
  4523                           ;	Return value of _strcat is never used
  4524                           	
  4525  0B0C                     l5599:	
  4526  0B0C  0008               	return
  4527                           	opt stack 0
  4528                           GLOBAL	__end_of_strcat
  4529  0B0D                     	__end_of_strcat:
  4530                           	signat	_strcat,8313
  4531                           	global	_vfd_write
  4532                           
  4533 ;; *************** function _vfd_write *****************
  4534 ;; Defined at:
  4535 ;;		line 67 in file "C:\PIC_WorkSpace\AquaTempFan\vfd_ctrl.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;  data            1    wreg     unsigned char 
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;  data            1    2[BANK0 ] unsigned char 
  4540 ;;  txdata          1    4[BANK0 ] unsigned char 
  4541 ;;  i               1    3[BANK0 ] unsigned char 
  4542 ;; Return value:  Size  Location     Type
  4543 ;;		None               void
  4544 ;; Registers used:
  4545 ;;		wreg, status,2, status,0
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4551 ;;      Params:         0       0       0       0       0
  4552 ;;      Locals:         0       3       0       0       0
  4553 ;;      Temps:          0       2       0       0       0
  4554 ;;      Totals:         0       5       0       0       0
  4555 ;;Total ram usage:        5 bytes
  4556 ;; Hardware stack levels used:    1
  4557 ;; Hardware stack levels required when called:    1
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_main
  4562 ;;		_vfd_init
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           psect	text745,local,class=CODE,delta=2,merge=1
  4566                           global __ptext745
  4567  0B9C                     __ptext745:	;psect for function _vfd_write
  4568                           psect	text745
  4569                           	file	"C:\PIC_WorkSpace\AquaTempFan\vfd_ctrl.c"
  4570                           	line	67
  4571                           	global	__size_of_vfd_write
  4572  0034                     	__size_of_vfd_write	equ	__end_of_vfd_write-_vfd_write
  4573                           	
  4574  0B9C                     _vfd_write:	
  4575                           	opt	stack 6
  4576                           ; Regs used in _vfd_write: [wreg+status,2+status,0]
  4577                           ;vfd_write@data stored from wreg
  4578                           	line	70
  4579  0B9C  1283               	bcf	status, 5	;RP0=0, select bank0
  4580  0B9D  1303               	bcf	status, 6	;RP1=0, select bank0
  4581  0B9E  00A2               	movwf	(vfd_write@data)
  4582                           	
  4583  0B9F                     l8098:	
  4584                           ;vfd_ctrl.c: 68: unsigned char i, txdata;
  4585                           ;vfd_ctrl.c: 70: txdata = data;
  4586  0B9F  0822               	movf	(vfd_write@data),w
  4587  0BA0  00A0               	movwf	(??_vfd_write+0)+0
  4588  0BA1  0820               	movf	(??_vfd_write+0)+0,w
  4589  0BA2  00A4               	movwf	(vfd_write@txdata)
  4590                           	line	71
  4591                           ;vfd_ctrl.c: 71: while(RB3);
  4592  0BA3  2BA4               	goto	l3115
  4593                           	
  4594  0BA4                     l3116:	
  4595                           	
  4596  0BA4                     l3115:	
  4597  0BA4  1986               	btfsc	(51/8),(51)&7	;volatile
  4598  0BA5  2BA7               	goto	u3201
  4599  0BA6  2BA8               	goto	u3200
  4600  0BA7                     u3201:
  4601  0BA7  2BA4               	goto	l3115
  4602  0BA8                     u3200:
  4603                           	
  4604  0BA8                     l3117:	
  4605                           	line	72
  4606                           ;vfd_ctrl.c: 72: for(i = 0; i < 8; i++)
  4607  0BA8  01A3               	clrf	(vfd_write@i)
  4608                           	
  4609  0BA9                     l8100:	
  4610  0BA9  3008               	movlw	(08h)
  4611  0BAA  0223               	subwf	(vfd_write@i),w
  4612  0BAB  1C03               	skipc
  4613  0BAC  2BAE               	goto	u3211
  4614  0BAD  2BAF               	goto	u3210
  4615  0BAE                     u3211:
  4616  0BAE  2BB1               	goto	l3118
  4617  0BAF                     u3210:
  4618  0BAF  2BCF               	goto	l3120
  4619                           	
  4620  0BB0                     l8102:	
  4621  0BB0  2BCF               	goto	l3120
  4622                           	line	73
  4623                           	
  4624  0BB1                     l3118:	
  4625                           	line	74
  4626                           ;vfd_ctrl.c: 73: {
  4627                           ;vfd_ctrl.c: 74: RB5 = 0;
  4628  0BB1  1286               	bcf	(53/8),(53)&7	;volatile
  4629                           	line	75
  4630                           ;vfd_ctrl.c: 75: RB2 = (txdata & 0x01);
  4631  0BB2  1824               	btfsc	(vfd_write@txdata),0
  4632  0BB3  2BB5               	goto	u3221
  4633  0BB4  2BB9               	goto	u3220
  4634                           	
  4635  0BB5                     u3221:
  4636  0BB5  1283               	bcf	status, 5	;RP0=0, select bank0
  4637  0BB6  1303               	bcf	status, 6	;RP1=0, select bank0
  4638  0BB7  1506               	bsf	(50/8),(50)&7	;volatile
  4639  0BB8  2BBC               	goto	u3234
  4640  0BB9                     u3220:
  4641  0BB9  1283               	bcf	status, 5	;RP0=0, select bank0
  4642  0BBA  1303               	bcf	status, 6	;RP1=0, select bank0
  4643  0BBB  1106               	bcf	(50/8),(50)&7	;volatile
  4644  0BBC                     u3234:
  4645                           	line	76
  4646                           ;vfd_ctrl.c: 76: RB5 = 1;
  4647  0BBC  1686               	bsf	(53/8),(53)&7	;volatile
  4648                           	line	77
  4649                           	
  4650  0BBD                     l8104:	
  4651                           ;vfd_ctrl.c: 77: txdata = txdata >> 1;
  4652  0BBD  0824               	movf	(vfd_write@txdata),w
  4653  0BBE  00A0               	movwf	(??_vfd_write+0)+0
  4654  0BBF  1003               	clrc
  4655  0BC0  0C20               	rrf	(??_vfd_write+0)+0,w
  4656  0BC1  00A1               	movwf	(??_vfd_write+1)+0
  4657  0BC2  0821               	movf	(??_vfd_write+1)+0,w
  4658  0BC3  00A4               	movwf	(vfd_write@txdata)
  4659                           	line	72
  4660  0BC4  3001               	movlw	(01h)
  4661  0BC5  00A0               	movwf	(??_vfd_write+0)+0
  4662  0BC6  0820               	movf	(??_vfd_write+0)+0,w
  4663  0BC7  07A3               	addwf	(vfd_write@i),f
  4664                           	
  4665  0BC8                     l8106:	
  4666  0BC8  3008               	movlw	(08h)
  4667  0BC9  0223               	subwf	(vfd_write@i),w
  4668  0BCA  1C03               	skipc
  4669  0BCB  2BCD               	goto	u3241
  4670  0BCC  2BCE               	goto	u3240
  4671  0BCD                     u3241:
  4672  0BCD  2BB1               	goto	l3118
  4673  0BCE                     u3240:
  4674  0BCE  2BCF               	goto	l3120
  4675                           	
  4676  0BCF                     l3119:	
  4677                           	line	79
  4678                           	
  4679  0BCF                     l3120:	
  4680  0BCF  0008               	return
  4681                           	opt stack 0
  4682                           GLOBAL	__end_of_vfd_write
  4683  0BD0                     	__end_of_vfd_write:
  4684                           	signat	_vfd_write,4216
  4685                           	global	_Power
  4686                           
  4687 ;; *************** function _Power *****************
  4688 ;; Defined at:
  4689 ;;		line 7 in file "C:\PIC_WorkSpace\AquaTempFan\sub.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;  data            4   13[BANK0 ] long 
  4692 ;;  num             1   17[BANK0 ] unsigned char 
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;  result          4   20[BANK0 ] long 
  4695 ;;  i               1   19[BANK0 ] unsigned char 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  4   13[BANK0 ] long 
  4698 ;; Registers used:
  4699 ;;		wreg, status,2, status,0, pclath, cstack
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4705 ;;      Params:         0       5       0       0       0
  4706 ;;      Locals:         0       5       0       0       0
  4707 ;;      Temps:          0       1       0       0       0
  4708 ;;      Totals:         0      11       0       0       0
  4709 ;;Total ram usage:       11 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    2
  4712 ;; This function calls:
  4713 ;;		___lmul
  4714 ;; This function is called by:
  4715 ;;		_DoubletoAscii
  4716 ;;		_InttoAscii
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           psect	text746,local,class=CODE,delta=2,merge=1
  4720                           global __ptext746
  4721  0C0C                     __ptext746:	;psect for function _Power
  4722                           psect	text746
  4723                           	file	"C:\PIC_WorkSpace\AquaTempFan\sub.c"
  4724                           	line	7
  4725                           	global	__size_of_Power
  4726  003F                     	__size_of_Power	equ	__end_of_Power-_Power
  4727                           	
  4728  0C0C                     _Power:	
  4729                           	opt	stack 4
  4730                           ; Regs used in _Power: [wreg+status,2+status,0+pclath+cstack]
  4731                           	line	11
  4732                           	
  4733  0C0C                     l8144:	
  4734                           ;sub.c: 8: unsigned char i;
  4735                           ;sub.c: 9: long result;
  4736                           ;sub.c: 11: result = 1;
  4737  0C0C  3000               	movlw	0
  4738  0C0D  1283               	bcf	status, 5	;RP0=0, select bank0
  4739  0C0E  1303               	bcf	status, 6	;RP1=0, select bank0
  4740  0C0F  00B7               	movwf	(Power@result+3)
  4741  0C10  3000               	movlw	0
  4742  0C11  00B6               	movwf	(Power@result+2)
  4743  0C12  3000               	movlw	0
  4744  0C13  00B5               	movwf	(Power@result+1)
  4745  0C14  3001               	movlw	01h
  4746  0C15  00B4               	movwf	(Power@result)
  4747                           
  4748                           	line	13
  4749                           	
  4750  0C16                     l8146:	
  4751                           ;sub.c: 13: for (i = 0; i < num; i++) {
  4752  0C16  01B3               	clrf	(Power@i)
  4753  0C17  2C3A               	goto	l8152
  4754                           	
  4755  0C18                     l4940:	
  4756                           	line	14
  4757                           	
  4758  0C18                     l8148:	
  4759                           ;sub.c: 14: result *= data;
  4760  0C18  0830               	movf	(Power@data+3),w
  4761  0C19  00A3               	movwf	(?___lmul+3)
  4762  0C1A  082F               	movf	(Power@data+2),w
  4763  0C1B  00A2               	movwf	(?___lmul+2)
  4764  0C1C  082E               	movf	(Power@data+1),w
  4765  0C1D  00A1               	movwf	(?___lmul+1)
  4766  0C1E  082D               	movf	(Power@data),w
  4767  0C1F  00A0               	movwf	(?___lmul)
  4768                           
  4769  0C20  0837               	movf	(Power@result+3),w
  4770  0C21  00A7               	movwf	3+(?___lmul)+04h
  4771  0C22  0836               	movf	(Power@result+2),w
  4772  0C23  00A6               	movwf	2+(?___lmul)+04h
  4773  0C24  0835               	movf	(Power@result+1),w
  4774  0C25  00A5               	movwf	1+(?___lmul)+04h
  4775  0C26  0834               	movf	(Power@result),w
  4776  0C27  00A4               	movwf	0+(?___lmul)+04h
  4777                           
  4778  0C28  158A  244B  158A   	fcall	___lmul
  4779  0C2B  1283               	bcf	status, 5	;RP0=0, select bank0
  4780  0C2C  1303               	bcf	status, 6	;RP1=0, select bank0
  4781  0C2D  0823               	movf	(3+(?___lmul)),w
  4782  0C2E  00B7               	movwf	(Power@result+3)
  4783  0C2F  0822               	movf	(2+(?___lmul)),w
  4784  0C30  00B6               	movwf	(Power@result+2)
  4785  0C31  0821               	movf	(1+(?___lmul)),w
  4786  0C32  00B5               	movwf	(Power@result+1)
  4787  0C33  0820               	movf	(0+(?___lmul)),w
  4788  0C34  00B4               	movwf	(Power@result)
  4789                           
  4790                           	line	13
  4791                           	
  4792  0C35                     l8150:	
  4793  0C35  3001               	movlw	(01h)
  4794  0C36  00B2               	movwf	(??_Power+0)+0
  4795  0C37  0832               	movf	(??_Power+0)+0,w
  4796  0C38  07B3               	addwf	(Power@i),f
  4797  0C39  2C3A               	goto	l8152
  4798                           	
  4799  0C3A                     l4939:	
  4800                           	
  4801  0C3A                     l8152:	
  4802  0C3A  0831               	movf	(Power@num),w
  4803  0C3B  0233               	subwf	(Power@i),w
  4804  0C3C  1C03               	skipc
  4805  0C3D  2C3F               	goto	u3301
  4806  0C3E  2C40               	goto	u3300
  4807  0C3F                     u3301:
  4808  0C3F  2C18               	goto	l8148
  4809  0C40                     u3300:
  4810  0C40  2C41               	goto	l8154
  4811                           	
  4812  0C41                     l4941:	
  4813                           	line	16
  4814                           	
  4815  0C41                     l8154:	
  4816                           ;sub.c: 15: }
  4817                           ;sub.c: 16: return result;
  4818  0C41  0837               	movf	(Power@result+3),w
  4819  0C42  00B0               	movwf	(?_Power+3)
  4820  0C43  0836               	movf	(Power@result+2),w
  4821  0C44  00AF               	movwf	(?_Power+2)
  4822  0C45  0835               	movf	(Power@result+1),w
  4823  0C46  00AE               	movwf	(?_Power+1)
  4824  0C47  0834               	movf	(Power@result),w
  4825  0C48  00AD               	movwf	(?_Power)
  4826                           
  4827  0C49  2C4A               	goto	l4942
  4828                           	
  4829  0C4A                     l8156:	
  4830                           	line	17
  4831                           	
  4832  0C4A                     l4942:	
  4833  0C4A  0008               	return
  4834                           	opt stack 0
  4835                           GLOBAL	__end_of_Power
  4836  0C4B                     	__end_of_Power:
  4837                           	signat	_Power,8316
  4838                           	global	___lmul
  4839                           
  4840 ;; *************** function ___lmul *****************
  4841 ;; Defined at:
  4842 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v1.10\sources\lmul.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4845 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;  product         4    9[BANK0 ] unsigned long 
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  4    0[BANK0 ] unsigned long 
  4850 ;; Registers used:
  4851 ;;		wreg, status,2, status,0
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4857 ;;      Params:         0       8       0       0       0
  4858 ;;      Locals:         0       4       0       0       0
  4859 ;;      Temps:          0       1       0       0       0
  4860 ;;      Totals:         0      13       0       0       0
  4861 ;;Total ram usage:       13 bytes
  4862 ;; Hardware stack levels used:    1
  4863 ;; Hardware stack levels required when called:    1
  4864 ;; This function calls:
  4865 ;;		Nothing
  4866 ;; This function is called by:
  4867 ;;		_Power
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           psect	text747,local,class=CODE,delta=2,merge=1
  4871                           global __ptext747
  4872  0C4B                     __ptext747:	;psect for function ___lmul
  4873                           psect	text747
  4874                           	file	"C:\Program Files\Microchip\xc8\v1.10\sources\lmul.c"
  4875                           	line	3
  4876                           	global	__size_of___lmul
  4877  004C                     	__size_of___lmul	equ	__end_of___lmul-___lmul
  4878                           	
  4879  0C4B                     ___lmul:	
  4880                           	opt	stack 4
  4881                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4882                           	line	4
  4883                           	
  4884  0C4B                     l8158:	
  4885  0C4B  3000               	movlw	0
  4886  0C4C  1283               	bcf	status, 5	;RP0=0, select bank0
  4887  0C4D  1303               	bcf	status, 6	;RP1=0, select bank0
  4888  0C4E  00AC               	movwf	(___lmul@product+3)
  4889  0C4F  3000               	movlw	0
  4890  0C50  00AB               	movwf	(___lmul@product+2)
  4891  0C51  3000               	movlw	0
  4892  0C52  00AA               	movwf	(___lmul@product+1)
  4893  0C53  3000               	movlw	0
  4894  0C54  00A9               	movwf	(___lmul@product)
  4895                           
  4896  0C55  2C56               	goto	l8160
  4897                           	line	6
  4898                           	
  4899  0C56                     l5658:	
  4900                           	line	7
  4901                           	
  4902  0C56                     l8160:	
  4903  0C56  1C20               	btfss	(___lmul@multiplier),(0)&7
  4904  0C57  2C59               	goto	u3311
  4905  0C58  2C5A               	goto	u3310
  4906  0C59                     u3311:
  4907  0C59  2C72               	goto	l8164
  4908  0C5A                     u3310:
  4909                           	line	8
  4910                           	
  4911  0C5A                     l8162:	
  4912  0C5A  0824               	movf	(___lmul@multiplicand),w
  4913  0C5B  07A9               	addwf	(___lmul@product),f
  4914  0C5C  0825               	movf	(___lmul@multiplicand+1),w
  4915  0C5D  1103               	clrz
  4916  0C5E  1803               	skipnc
  4917  0C5F  3E01               	addlw	1
  4918  0C60  1903               	skipnz
  4919  0C61  2C63               	goto	u3321
  4920  0C62  07AA               	addwf	(___lmul@product+1),f
  4921  0C63                     u3321:
  4922  0C63  0826               	movf	(___lmul@multiplicand+2),w
  4923  0C64  1103               	clrz
  4924  0C65  1803               	skipnc
  4925  0C66  3E01               	addlw	1
  4926  0C67  1903               	skipnz
  4927  0C68  2C6A               	goto	u3322
  4928  0C69  07AB               	addwf	(___lmul@product+2),f
  4929  0C6A                     u3322:
  4930  0C6A  0827               	movf	(___lmul@multiplicand+3),w
  4931  0C6B  1103               	clrz
  4932  0C6C  1803               	skipnc
  4933  0C6D  3E01               	addlw	1
  4934  0C6E  1903               	skipnz
  4935  0C6F  2C71               	goto	u3323
  4936  0C70  07AC               	addwf	(___lmul@product+3),f
  4937  0C71                     u3323:
  4938                           
  4939  0C71  2C72               	goto	l8164
  4940                           	
  4941  0C72                     l5659:	
  4942                           	line	9
  4943                           	
  4944  0C72                     l8164:	
  4945  0C72  3001               	movlw	01h
  4946  0C73  00A8               	movwf	(??___lmul+0)+0
  4947  0C74                     u3335:
  4948  0C74  1003               	clrc
  4949  0C75  0DA4               	rlf	(___lmul@multiplicand),f
  4950  0C76  0DA5               	rlf	(___lmul@multiplicand+1),f
  4951  0C77  0DA6               	rlf	(___lmul@multiplicand+2),f
  4952  0C78  0DA7               	rlf	(___lmul@multiplicand+3),f
  4953  0C79  0BA8               	decfsz	(??___lmul+0)+0
  4954  0C7A  2C74               	goto	u3335
  4955                           	line	10
  4956                           	
  4957  0C7B                     l8166:	
  4958  0C7B  3001               	movlw	01h
  4959  0C7C                     u3345:
  4960  0C7C  1003               	clrc
  4961  0C7D  0CA3               	rrf	(___lmul@multiplier+3),f
  4962  0C7E  0CA2               	rrf	(___lmul@multiplier+2),f
  4963  0C7F  0CA1               	rrf	(___lmul@multiplier+1),f
  4964  0C80  0CA0               	rrf	(___lmul@multiplier),f
  4965  0C81  3EFF               	addlw	-1
  4966  0C82  1D03               	skipz
  4967  0C83  2C7C               	goto	u3345
  4968                           
  4969                           	line	11
  4970  0C84  0823               	movf	(___lmul@multiplier+3),w
  4971  0C85  0422               	iorwf	(___lmul@multiplier+2),w
  4972  0C86  0421               	iorwf	(___lmul@multiplier+1),w
  4973  0C87  0420               	iorwf	(___lmul@multiplier),w
  4974  0C88  1D03               	skipz
  4975  0C89  2C8B               	goto	u3351
  4976  0C8A  2C8C               	goto	u3350
  4977  0C8B                     u3351:
  4978  0C8B  2C56               	goto	l8160
  4979  0C8C                     u3350:
  4980  0C8C  2C8D               	goto	l8168
  4981                           	
  4982  0C8D                     l5660:	
  4983                           	line	12
  4984                           	
  4985  0C8D                     l8168:	
  4986  0C8D  082C               	movf	(___lmul@product+3),w
  4987  0C8E  00A3               	movwf	(?___lmul+3)
  4988  0C8F  082B               	movf	(___lmul@product+2),w
  4989  0C90  00A2               	movwf	(?___lmul+2)
  4990  0C91  082A               	movf	(___lmul@product+1),w
  4991  0C92  00A1               	movwf	(?___lmul+1)
  4992  0C93  0829               	movf	(___lmul@product),w
  4993  0C94  00A0               	movwf	(?___lmul)
  4994                           
  4995  0C95  2C96               	goto	l5661
  4996                           	
  4997  0C96                     l8170:	
  4998                           	line	13
  4999                           	
  5000  0C96                     l5661:	
  5001  0C96  0008               	return
  5002                           	opt stack 0
  5003                           GLOBAL	__end_of___lmul
  5004  0C97                     	__end_of___lmul:
  5005                           	signat	___lmul,8316
  5006                           	global	___fladd
  5007                           
  5008 ;; *************** function ___fladd *****************
  5009 ;; Defined at:
  5010 ;;		line 89 in file "C:\Program Files\Microchip\xc8\v1.10\sources\fladd.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;  f1              4   37[BANK0 ] unsigned long 
  5013 ;;  f2              4   41[BANK0 ] unsigned long 
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;  exp1            1   52[BANK0 ] unsigned char 
  5016 ;;  exp2            1   51[BANK0 ] unsigned char 
  5017 ;;  sign            1   50[BANK0 ] unsigned char 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  4   37[BANK0 ] unsigned char 
  5020 ;; Registers used:
  5021 ;;		wreg, status,2, status,0, pclath, cstack
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5027 ;;      Params:         0       8       0       0       0
  5028 ;;      Locals:         0       3       0       0       0
  5029 ;;      Temps:          0       5       0       0       0
  5030 ;;      Totals:         0      16       0       0       0
  5031 ;;Total ram usage:       16 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:    2
  5034 ;; This function calls:
  5035 ;;		___flpack
  5036 ;; This function is called by:
  5037 ;;		_main
  5038 ;;		_DoubletoAscii
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           psect	text748,local,class=CODE,delta=2,merge=1
  5042                           global __ptext748
  5043  0413                     __ptext748:	;psect for function ___fladd
  5044                           psect	text748
  5045                           	file	"C:\Program Files\Microchip\xc8\v1.10\sources\fladd.c"
  5046                           	line	89
  5047                           	global	__size_of___fladd
  5048  016F                     	__size_of___fladd	equ	__end_of___fladd-___fladd
  5049                           	
  5050  0413                     ___fladd:	
  5051                           	opt	stack 4
  5052                           ; Regs used in ___fladd: [wreg+status,2+status,0+pclath+cstack]
  5053                           	line	92
  5054                           	
  5055  0413                     l8172:	
  5056  0413  1283               	bcf	status, 5	;RP0=0, select bank0
  5057  0414  1303               	bcf	status, 6	;RP1=0, select bank0
  5058  0415  0845               	movf	(___fladd@f1),w
  5059  0416  00CD               	movwf	(??___fladd+0)+0
  5060  0417  0846               	movf	(___fladd@f1+1),w
  5061  0418  00CE               	movwf	((??___fladd+0)+0+1)
  5062  0419  0847               	movf	(___fladd@f1+2),w
  5063  041A  00CF               	movwf	((??___fladd+0)+0+2)
  5064  041B  0848               	movf	(___fladd@f1+3),w
  5065  041C  00D0               	movwf	((??___fladd+0)+0+3)
  5066  041D  1003               	clrc
  5067  041E  0D4F               	rlf	(??___fladd+0)+2,w
  5068  041F  0D50               	rlf	(??___fladd+0)+3,w
  5069  0420  00D1               	movwf	(??___fladd+4)+0
  5070  0421  0851               	movf	(??___fladd+4)+0,w
  5071  0422  00D4               	movwf	(___fladd@exp1)
  5072                           	line	93
  5073  0423  0849               	movf	(___fladd@f2),w
  5074  0424  00CD               	movwf	(??___fladd+0)+0
  5075  0425  084A               	movf	(___fladd@f2+1),w
  5076  0426  00CE               	movwf	((??___fladd+0)+0+1)
  5077  0427  084B               	movf	(___fladd@f2+2),w
  5078  0428  00CF               	movwf	((??___fladd+0)+0+2)
  5079  0429  084C               	movf	(___fladd@f2+3),w
  5080  042A  00D0               	movwf	((??___fladd+0)+0+3)
  5081  042B  1003               	clrc
  5082  042C  0D4F               	rlf	(??___fladd+0)+2,w
  5083  042D  0D50               	rlf	(??___fladd+0)+3,w
  5084  042E  00D1               	movwf	(??___fladd+4)+0
  5085  042F  0851               	movf	(??___fladd+4)+0,w
  5086  0430  00D3               	movwf	(___fladd@exp2)
  5087                           	line	94
  5088                           	
  5089  0431                     l8174:	
  5090  0431  0854               	movf	(___fladd@exp1),w
  5091  0432  1D03               	skipz
  5092  0433  2C35               	goto	u3360
  5093  0434  2C46               	goto	l8180
  5094  0435                     u3360:
  5095                           	
  5096  0435                     l8176:	
  5097  0435  0853               	movf	(___fladd@exp2),w
  5098  0436  0254               	subwf	(___fladd@exp1),w
  5099  0437  1803               	skipnc
  5100  0438  2C3A               	goto	u3371
  5101  0439  2C3B               	goto	u3370
  5102  043A                     u3371:
  5103  043A  2C50               	goto	l8184
  5104  043B                     u3370:
  5105                           	
  5106  043B                     l8178:	
  5107  043B  0354               	decf	(___fladd@exp1),w
  5108  043C  3AFF               	xorlw	0ffh
  5109  043D  0753               	addwf	(___fladd@exp2),w
  5110  043E  00CD               	movwf	(??___fladd+0)+0
  5111  043F  3021               	movlw	(021h)
  5112  0440  024D               	subwf	0+(??___fladd+0)+0,w
  5113  0441  1C03               	skipc
  5114  0442  2C44               	goto	u3381
  5115  0443  2C45               	goto	u3380
  5116  0444                     u3381:
  5117  0444  2C50               	goto	l8184
  5118  0445                     u3380:
  5119  0445  2C46               	goto	l8180
  5120                           	
  5121  0446                     l5668:	
  5122                           	line	95
  5123                           	
  5124  0446                     l8180:	
  5125  0446  084C               	movf	(___fladd@f2+3),w
  5126  0447  00C8               	movwf	(?___fladd+3)
  5127  0448  084B               	movf	(___fladd@f2+2),w
  5128  0449  00C7               	movwf	(?___fladd+2)
  5129  044A  084A               	movf	(___fladd@f2+1),w
  5130  044B  00C6               	movwf	(?___fladd+1)
  5131  044C  0849               	movf	(___fladd@f2),w
  5132  044D  00C5               	movwf	(?___fladd)
  5133                           
  5134  044E  2D81               	goto	l5669
  5135                           	
  5136  044F                     l8182:	
  5137  044F  2D81               	goto	l5669
  5138                           	
  5139  0450                     l5666:	
  5140                           	line	96
  5141                           	
  5142  0450                     l8184:	
  5143  0450  0853               	movf	(___fladd@exp2),w
  5144  0451  1D03               	skipz
  5145  0452  2C54               	goto	u3390
  5146  0453  2C64               	goto	l5672
  5147  0454                     u3390:
  5148                           	
  5149  0454                     l8186:	
  5150  0454  0854               	movf	(___fladd@exp1),w
  5151  0455  0253               	subwf	(___fladd@exp2),w
  5152  0456  1803               	skipnc
  5153  0457  2C59               	goto	u3401
  5154  0458  2C5A               	goto	u3400
  5155  0459                     u3401:
  5156  0459  2C65               	goto	l8190
  5157  045A                     u3400:
  5158                           	
  5159  045A                     l8188:	
  5160  045A  0353               	decf	(___fladd@exp2),w
  5161  045B  3AFF               	xorlw	0ffh
  5162  045C  0754               	addwf	(___fladd@exp1),w
  5163  045D  00CD               	movwf	(??___fladd+0)+0
  5164  045E  3021               	movlw	(021h)
  5165  045F  024D               	subwf	0+(??___fladd+0)+0,w
  5166  0460  1C03               	skipc
  5167  0461  2C63               	goto	u3411
  5168  0462  2C64               	goto	u3410
  5169  0463                     u3411:
  5170  0463  2C65               	goto	l8190
  5171  0464                     u3410:
  5172                           	
  5173  0464                     l5672:	
  5174                           	line	97
  5175  0464  2D81               	goto	l5669
  5176                           	
  5177  0465                     l5670:	
  5178                           	line	98
  5179                           	
  5180  0465                     l8190:	
  5181  0465  3006               	movlw	(06h)
  5182  0466  00CD               	movwf	(??___fladd+0)+0
  5183  0467  084D               	movf	(??___fladd+0)+0,w
  5184  0468  00D2               	movwf	(___fladd@sign)
  5185                           	line	99
  5186                           	
  5187  0469                     l8192:	
  5188  0469  1FC8               	btfss	(___fladd@f1+3),(31)&7
  5189  046A  2C6C               	goto	u3421
  5190  046B  2C6D               	goto	u3420
  5191  046C                     u3421:
  5192  046C  2C6E               	goto	l5673
  5193  046D                     u3420:
  5194                           	line	100
  5195                           	
  5196  046D                     l8194:	
  5197  046D  17D2               	bsf	(___fladd@sign)+(7/8),(7)&7
  5198                           	
  5199  046E                     l5673:	
  5200                           	line	101
  5201  046E  1FCC               	btfss	(___fladd@f2+3),(31)&7
  5202  046F  2C71               	goto	u3431
  5203  0470  2C72               	goto	u3430
  5204  0471                     u3431:
  5205  0471  2C73               	goto	l5674
  5206  0472                     u3430:
  5207                           	line	102
  5208                           	
  5209  0472                     l8196:	
  5210  0472  1752               	bsf	(___fladd@sign)+(6/8),(6)&7
  5211                           	
  5212  0473                     l5674:	
  5213                           	line	103
  5214  0473  17C7               	bsf	(___fladd@f1)+(23/8),(23)&7
  5215                           	line	104
  5216                           	
  5217  0474                     l8198:	
  5218  0474  30FF               	movlw	0FFh
  5219  0475  05C5               	andwf	(___fladd@f1),f
  5220  0476  30FF               	movlw	0FFh
  5221  0477  05C6               	andwf	(___fladd@f1+1),f
  5222  0478  30FF               	movlw	0FFh
  5223  0479  05C7               	andwf	(___fladd@f1+2),f
  5224  047A  3000               	movlw	0
  5225  047B  05C8               	andwf	(___fladd@f1+3),f
  5226                           	line	105
  5227                           	
  5228  047C                     l8200:	
  5229  047C  17CB               	bsf	(___fladd@f2)+(23/8),(23)&7
  5230                           	line	106
  5231  047D  30FF               	movlw	0FFh
  5232  047E  05C9               	andwf	(___fladd@f2),f
  5233  047F  30FF               	movlw	0FFh
  5234  0480  05CA               	andwf	(___fladd@f2+1),f
  5235  0481  30FF               	movlw	0FFh
  5236  0482  05CB               	andwf	(___fladd@f2+2),f
  5237  0483  3000               	movlw	0
  5238  0484  05CC               	andwf	(___fladd@f2+3),f
  5239                           	line	108
  5240  0485  0853               	movf	(___fladd@exp2),w
  5241  0486  0254               	subwf	(___fladd@exp1),w
  5242  0487  1803               	skipnc
  5243  0488  2C8A               	goto	u3441
  5244  0489  2C8B               	goto	u3440
  5245  048A                     u3441:
  5246  048A  2CBE               	goto	l8212
  5247  048B                     u3440:
  5248  048B  2C8C               	goto	l8202
  5249                           	line	111
  5250                           	
  5251  048C                     l5676:	
  5252                           	line	112
  5253                           	
  5254  048C                     l8202:	
  5255  048C  3001               	movlw	01h
  5256  048D  00CD               	movwf	(??___fladd+0)+0
  5257  048E                     u3455:
  5258  048E  1003               	clrc
  5259  048F  0DC9               	rlf	(___fladd@f2),f
  5260  0490  0DCA               	rlf	(___fladd@f2+1),f
  5261  0491  0DCB               	rlf	(___fladd@f2+2),f
  5262  0492  0DCC               	rlf	(___fladd@f2+3),f
  5263  0493  0BCD               	decfsz	(??___fladd+0)+0
  5264  0494  2C8E               	goto	u3455
  5265                           	line	113
  5266  0495  3001               	movlw	low(01h)
  5267  0496  02D3               	subwf	(___fladd@exp2),f
  5268                           	line	114
  5269                           	
  5270  0497                     l8204:	
  5271  0497  0853               	movf	(___fladd@exp2),w
  5272  0498  0654               	xorwf	(___fladd@exp1),w
  5273  0499  1903               	skipnz
  5274  049A  2C9C               	goto	u3461
  5275  049B  2C9D               	goto	u3460
  5276  049C                     u3461:
  5277  049C  2CB6               	goto	l8210
  5278  049D                     u3460:
  5279                           	
  5280  049D                     l8206:	
  5281  049D  3001               	movlw	low(01h)
  5282  049E  02D2               	subwf	(___fladd@sign),f
  5283  049F  0852               	movf	((___fladd@sign)),w
  5284  04A0  3907               	andlw	07h
  5285  04A1  1D03               	btfss	status,2
  5286  04A2  2CA4               	goto	u3471
  5287  04A3  2CA5               	goto	u3470
  5288  04A4                     u3471:
  5289  04A4  2C8C               	goto	l8202
  5290  04A5                     u3470:
  5291  04A5  2CB6               	goto	l8210
  5292                           	
  5293  04A6                     l5678:	
  5294  04A6  2CB6               	goto	l8210
  5295                           	
  5296  04A7                     l5679:	
  5297                           	line	115
  5298  04A7  2CB6               	goto	l8210
  5299                           	
  5300  04A8                     l5681:	
  5301                           	line	116
  5302                           	
  5303  04A8                     l8208:	
  5304  04A8  3001               	movlw	01h
  5305  04A9                     u3485:
  5306  04A9  1003               	clrc
  5307  04AA  0CC8               	rrf	(___fladd@f1+3),f
  5308  04AB  0CC7               	rrf	(___fladd@f1+2),f
  5309  04AC  0CC6               	rrf	(___fladd@f1+1),f
  5310  04AD  0CC5               	rrf	(___fladd@f1),f
  5311  04AE  3EFF               	addlw	-1
  5312  04AF  1D03               	skipz
  5313  04B0  2CA9               	goto	u3485
  5314                           
  5315                           	line	117
  5316  04B1  3001               	movlw	(01h)
  5317  04B2  00CD               	movwf	(??___fladd+0)+0
  5318  04B3  084D               	movf	(??___fladd+0)+0,w
  5319  04B4  07D4               	addwf	(___fladd@exp1),f
  5320  04B5  2CB6               	goto	l8210
  5321                           	line	118
  5322                           	
  5323  04B6                     l5680:	
  5324                           	line	115
  5325                           	
  5326  04B6                     l8210:	
  5327  04B6  0854               	movf	(___fladd@exp1),w
  5328  04B7  0653               	xorwf	(___fladd@exp2),w
  5329  04B8  1D03               	skipz
  5330  04B9  2CBB               	goto	u3491
  5331  04BA  2CBC               	goto	u3490
  5332  04BB                     u3491:
  5333  04BB  2CA8               	goto	l8208
  5334  04BC                     u3490:
  5335  04BC  2CF7               	goto	l5683
  5336                           	
  5337  04BD                     l5682:	
  5338                           	line	119
  5339  04BD  2CF7               	goto	l5683
  5340                           	
  5341  04BE                     l5675:	
  5342                           	
  5343  04BE                     l8212:	
  5344  04BE  0854               	movf	(___fladd@exp1),w
  5345  04BF  0253               	subwf	(___fladd@exp2),w
  5346  04C0  1803               	skipnc
  5347  04C1  2CC3               	goto	u3501
  5348  04C2  2CC4               	goto	u3500
  5349  04C3                     u3501:
  5350  04C3  2CF7               	goto	l5683
  5351  04C4                     u3500:
  5352  04C4  2CC5               	goto	l8214
  5353                           	line	122
  5354                           	
  5355  04C5                     l5685:	
  5356                           	line	123
  5357                           	
  5358  04C5                     l8214:	
  5359  04C5  3001               	movlw	01h
  5360  04C6  00CD               	movwf	(??___fladd+0)+0
  5361  04C7                     u3515:
  5362  04C7  1003               	clrc
  5363  04C8  0DC5               	rlf	(___fladd@f1),f
  5364  04C9  0DC6               	rlf	(___fladd@f1+1),f
  5365  04CA  0DC7               	rlf	(___fladd@f1+2),f
  5366  04CB  0DC8               	rlf	(___fladd@f1+3),f
  5367  04CC  0BCD               	decfsz	(??___fladd+0)+0
  5368  04CD  2CC7               	goto	u3515
  5369                           	line	124
  5370  04CE  3001               	movlw	low(01h)
  5371  04CF  02D4               	subwf	(___fladd@exp1),f
  5372                           	line	125
  5373                           	
  5374  04D0                     l8216:	
  5375  04D0  0853               	movf	(___fladd@exp2),w
  5376  04D1  0654               	xorwf	(___fladd@exp1),w
  5377  04D2  1903               	skipnz
  5378  04D3  2CD5               	goto	u3521
  5379  04D4  2CD6               	goto	u3520
  5380  04D5                     u3521:
  5381  04D5  2CEF               	goto	l8222
  5382  04D6                     u3520:
  5383                           	
  5384  04D6                     l8218:	
  5385  04D6  3001               	movlw	low(01h)
  5386  04D7  02D2               	subwf	(___fladd@sign),f
  5387  04D8  0852               	movf	((___fladd@sign)),w
  5388  04D9  3907               	andlw	07h
  5389  04DA  1D03               	btfss	status,2
  5390  04DB  2CDD               	goto	u3531
  5391  04DC  2CDE               	goto	u3530
  5392  04DD                     u3531:
  5393  04DD  2CC5               	goto	l8214
  5394  04DE                     u3530:
  5395  04DE  2CEF               	goto	l8222
  5396                           	
  5397  04DF                     l5687:	
  5398  04DF  2CEF               	goto	l8222
  5399                           	
  5400  04E0                     l5688:	
  5401                           	line	126
  5402  04E0  2CEF               	goto	l8222
  5403                           	
  5404  04E1                     l5690:	
  5405                           	line	127
  5406                           	
  5407  04E1                     l8220:	
  5408  04E1  3001               	movlw	01h
  5409  04E2                     u3545:
  5410  04E2  1003               	clrc
  5411  04E3  0CCC               	rrf	(___fladd@f2+3),f
  5412  04E4  0CCB               	rrf	(___fladd@f2+2),f
  5413  04E5  0CCA               	rrf	(___fladd@f2+1),f
  5414  04E6  0CC9               	rrf	(___fladd@f2),f
  5415  04E7  3EFF               	addlw	-1
  5416  04E8  1D03               	skipz
  5417  04E9  2CE2               	goto	u3545
  5418                           
  5419                           	line	128
  5420  04EA  3001               	movlw	(01h)
  5421  04EB  00CD               	movwf	(??___fladd+0)+0
  5422  04EC  084D               	movf	(??___fladd+0)+0,w
  5423  04ED  07D3               	addwf	(___fladd@exp2),f
  5424  04EE  2CEF               	goto	l8222
  5425                           	line	129
  5426                           	
  5427  04EF                     l5689:	
  5428                           	line	126
  5429                           	
  5430  04EF                     l8222:	
  5431  04EF  0854               	movf	(___fladd@exp1),w
  5432  04F0  0653               	xorwf	(___fladd@exp2),w
  5433  04F1  1D03               	skipz
  5434  04F2  2CF4               	goto	u3551
  5435  04F3  2CF5               	goto	u3550
  5436  04F4                     u3551:
  5437  04F4  2CE1               	goto	l8220
  5438  04F5                     u3550:
  5439  04F5  2CF7               	goto	l5683
  5440                           	
  5441  04F6                     l5691:	
  5442  04F6  2CF7               	goto	l5683
  5443                           	line	130
  5444                           	
  5445  04F7                     l5684:	
  5446                           	line	131
  5447                           	
  5448  04F7                     l5683:	
  5449  04F7  1FD2               	btfss	(___fladd@sign),(7)&7
  5450  04F8  2CFA               	goto	u3561
  5451  04F9  2CFB               	goto	u3560
  5452  04FA                     u3561:
  5453  04FA  2D12               	goto	l8226
  5454  04FB                     u3560:
  5455                           	line	133
  5456                           	
  5457  04FB                     l8224:	
  5458  04FB  30FF               	movlw	0FFh
  5459  04FC  06C5               	xorwf	(___fladd@f1),f
  5460  04FD  30FF               	movlw	0FFh
  5461  04FE  06C6               	xorwf	(___fladd@f1+1),f
  5462  04FF  30FF               	movlw	0FFh
  5463  0500  06C7               	xorwf	(___fladd@f1+2),f
  5464  0501  30FF               	movlw	0FFh
  5465  0502  06C8               	xorwf	(___fladd@f1+3),f
  5466                           	line	134
  5467  0503  3001               	movlw	01h
  5468  0504  07C5               	addwf	(___fladd@f1),f
  5469  0505  3000               	movlw	0
  5470  0506  1803               	skipnc
  5471  0507  3001               movlw 1
  5472  0508  07C6               	addwf	(___fladd@f1+1),f
  5473  0509  3000               	movlw	0
  5474  050A  1803               	skipnc
  5475  050B  3001               movlw 1
  5476  050C  07C7               	addwf	(___fladd@f1+2),f
  5477  050D  3000               	movlw	0
  5478  050E  1803               	skipnc
  5479  050F  3001               movlw 1
  5480  0510  07C8               	addwf	(___fladd@f1+3),f
  5481  0511  2D12               	goto	l8226
  5482                           	line	135
  5483                           	
  5484  0512                     l5692:	
  5485                           	line	136
  5486                           	
  5487  0512                     l8226:	
  5488  0512  1F52               	btfss	(___fladd@sign),(6)&7
  5489  0513  2D15               	goto	u3571
  5490  0514  2D16               	goto	u3570
  5491  0515                     u3571:
  5492  0515  2D2D               	goto	l8230
  5493  0516                     u3570:
  5494                           	line	138
  5495                           	
  5496  0516                     l8228:	
  5497  0516  30FF               	movlw	0FFh
  5498  0517  06C9               	xorwf	(___fladd@f2),f
  5499  0518  30FF               	movlw	0FFh
  5500  0519  06CA               	xorwf	(___fladd@f2+1),f
  5501  051A  30FF               	movlw	0FFh
  5502  051B  06CB               	xorwf	(___fladd@f2+2),f
  5503  051C  30FF               	movlw	0FFh
  5504  051D  06CC               	xorwf	(___fladd@f2+3),f
  5505                           	line	139
  5506  051E  3001               	movlw	01h
  5507  051F  07C9               	addwf	(___fladd@f2),f
  5508  0520  3000               	movlw	0
  5509  0521  1803               	skipnc
  5510  0522  3001               movlw 1
  5511  0523  07CA               	addwf	(___fladd@f2+1),f
  5512  0524  3000               	movlw	0
  5513  0525  1803               	skipnc
  5514  0526  3001               movlw 1
  5515  0527  07CB               	addwf	(___fladd@f2+2),f
  5516  0528  3000               	movlw	0
  5517  0529  1803               	skipnc
  5518  052A  3001               movlw 1
  5519  052B  07CC               	addwf	(___fladd@f2+3),f
  5520  052C  2D2D               	goto	l8230
  5521                           	line	140
  5522                           	
  5523  052D                     l5693:	
  5524                           	line	141
  5525                           	
  5526  052D                     l8230:	
  5527  052D  01D2               	clrf	(___fladd@sign)
  5528                           	line	142
  5529  052E  0845               	movf	(___fladd@f1),w
  5530  052F  07C9               	addwf	(___fladd@f2),f
  5531  0530  0846               	movf	(___fladd@f1+1),w
  5532  0531  1103               	clrz
  5533  0532  1803               	skipnc
  5534  0533  3E01               	addlw	1
  5535  0534  1903               	skipnz
  5536  0535  2D37               	goto	u3581
  5537  0536  07CA               	addwf	(___fladd@f2+1),f
  5538  0537                     u3581:
  5539  0537  0847               	movf	(___fladd@f1+2),w
  5540  0538  1103               	clrz
  5541  0539  1803               	skipnc
  5542  053A  3E01               	addlw	1
  5543  053B  1903               	skipnz
  5544  053C  2D3E               	goto	u3582
  5545  053D  07CB               	addwf	(___fladd@f2+2),f
  5546  053E                     u3582:
  5547  053E  0848               	movf	(___fladd@f1+3),w
  5548  053F  1103               	clrz
  5549  0540  1803               	skipnc
  5550  0541  3E01               	addlw	1
  5551  0542  1903               	skipnz
  5552  0543  2D45               	goto	u3583
  5553  0544  07CC               	addwf	(___fladd@f2+3),f
  5554  0545                     u3583:
  5555                           
  5556                           	line	143
  5557                           	
  5558  0545                     l8232:	
  5559  0545  1FCC               	btfss	(___fladd@f2+3),(31)&7
  5560  0546  2D48               	goto	u3591
  5561  0547  2D49               	goto	u3590
  5562  0548                     u3591:
  5563  0548  2D63               	goto	l8238
  5564  0549                     u3590:
  5565                           	line	144
  5566                           	
  5567  0549                     l8234:	
  5568  0549  30FF               	movlw	0FFh
  5569  054A  06C9               	xorwf	(___fladd@f2),f
  5570  054B  30FF               	movlw	0FFh
  5571  054C  06CA               	xorwf	(___fladd@f2+1),f
  5572  054D  30FF               	movlw	0FFh
  5573  054E  06CB               	xorwf	(___fladd@f2+2),f
  5574  054F  30FF               	movlw	0FFh
  5575  0550  06CC               	xorwf	(___fladd@f2+3),f
  5576                           	line	145
  5577  0551  3001               	movlw	01h
  5578  0552  07C9               	addwf	(___fladd@f2),f
  5579  0553  3000               	movlw	0
  5580  0554  1803               	skipnc
  5581  0555  3001               movlw 1
  5582  0556  07CA               	addwf	(___fladd@f2+1),f
  5583  0557  3000               	movlw	0
  5584  0558  1803               	skipnc
  5585  0559  3001               movlw 1
  5586  055A  07CB               	addwf	(___fladd@f2+2),f
  5587  055B  3000               	movlw	0
  5588  055C  1803               	skipnc
  5589  055D  3001               movlw 1
  5590  055E  07CC               	addwf	(___fladd@f2+3),f
  5591                           	line	146
  5592                           	
  5593  055F                     l8236:	
  5594  055F  01D2               	clrf	(___fladd@sign)
  5595  0560  1403               	bsf	status,0
  5596  0561  0DD2               	rlf	(___fladd@sign),f
  5597  0562  2D63               	goto	l8238
  5598                           	line	147
  5599                           	
  5600  0563                     l5694:	
  5601                           	line	148
  5602                           	
  5603  0563                     l8238:	
  5604  0563  084C               	movf	(___fladd@f2+3),w
  5605  0564  00A3               	movwf	(?___flpack+3)
  5606  0565  084B               	movf	(___fladd@f2+2),w
  5607  0566  00A2               	movwf	(?___flpack+2)
  5608  0567  084A               	movf	(___fladd@f2+1),w
  5609  0568  00A1               	movwf	(?___flpack+1)
  5610  0569  0849               	movf	(___fladd@f2),w
  5611  056A  00A0               	movwf	(?___flpack)
  5612                           
  5613  056B  0854               	movf	(___fladd@exp1),w
  5614  056C  00CD               	movwf	(??___fladd+0)+0
  5615  056D  084D               	movf	(??___fladd+0)+0,w
  5616  056E  00A4               	movwf	0+(?___flpack)+04h
  5617  056F  0852               	movf	(___fladd@sign),w
  5618  0570  00CE               	movwf	(??___fladd+1)+0
  5619  0571  084E               	movf	(??___fladd+1)+0,w
  5620  0572  00A5               	movwf	0+(?___flpack)+05h
  5621  0573  158A  259D  118A   	fcall	___flpack
  5622  0576  1283               	bcf	status, 5	;RP0=0, select bank0
  5623  0577  1303               	bcf	status, 6	;RP1=0, select bank0
  5624  0578  0823               	movf	(3+(?___flpack)),w
  5625  0579  00C8               	movwf	(?___fladd+3)
  5626  057A  0822               	movf	(2+(?___flpack)),w
  5627  057B  00C7               	movwf	(?___fladd+2)
  5628  057C  0821               	movf	(1+(?___flpack)),w
  5629  057D  00C6               	movwf	(?___fladd+1)
  5630  057E  0820               	movf	(0+(?___flpack)),w
  5631  057F  00C5               	movwf	(?___fladd)
  5632                           
  5633  0580  2D81               	goto	l5669
  5634                           	
  5635  0581                     l8240:	
  5636                           	line	149
  5637                           	
  5638  0581                     l5669:	
  5639  0581  0008               	return
  5640                           	opt stack 0
  5641                           GLOBAL	__end_of___fladd
  5642  0582                     	__end_of___fladd:
  5643                           	signat	___fladd,8316
  5644                           	global	___fldiv
  5645                           
  5646 ;; *************** function ___fldiv *****************
  5647 ;; Defined at:
  5648 ;;		line 50 in file "C:\Program Files\Microchip\xc8\v1.10\sources\fldiv.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;  f2              4   10[BANK0 ] unsigned char 
  5651 ;;  f1              4   14[BANK0 ] unsigned char 
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;  f3              4   23[BANK0 ] unsigned char 
  5654 ;;  sign            1   29[BANK0 ] unsigned char 
  5655 ;;  exp             1   28[BANK0 ] unsigned char 
  5656 ;;  cntr            1   27[BANK0 ] unsigned char 
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  4   10[BANK0 ] unsigned char 
  5659 ;; Registers used:
  5660 ;;		wreg, status,2, status,0, pclath, cstack
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5666 ;;      Params:         0       8       0       0       0
  5667 ;;      Locals:         0       7       0       0       0
  5668 ;;      Temps:          0       5       0       0       0
  5669 ;;      Totals:         0      20       0       0       0
  5670 ;;Total ram usage:       20 bytes
  5671 ;; Hardware stack levels used:    1
  5672 ;; Hardware stack levels required when called:    2
  5673 ;; This function calls:
  5674 ;;		___flpack
  5675 ;; This function is called by:
  5676 ;;		_main
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           psect	text749,local,class=CODE,delta=2,merge=1
  5680                           global __ptext749
  5681  0696                     __ptext749:	;psect for function ___fldiv
  5682                           psect	text749
  5683                           	file	"C:\Program Files\Microchip\xc8\v1.10\sources\fldiv.c"
  5684                           	line	50
  5685                           	global	__size_of___fldiv
  5686  00E0                     	__size_of___fldiv	equ	__end_of___fldiv-___fldiv
  5687                           	
  5688  0696                     ___fldiv:	
  5689                           	opt	stack 5
  5690                           ; Regs used in ___fldiv: [wreg+status,2+status,0+pclath+cstack]
  5691                           	line	55
  5692                           	
  5693  0696                     l8272:	
  5694  0696  1283               	bcf	status, 5	;RP0=0, select bank0
  5695  0697  1303               	bcf	status, 6	;RP1=0, select bank0
  5696  0698  082E               	movf	(___fldiv@f1),w
  5697  0699  00B2               	movwf	(??___fldiv+0)+0
  5698  069A  082F               	movf	(___fldiv@f1+1),w
  5699  069B  00B3               	movwf	((??___fldiv+0)+0+1)
  5700  069C  0830               	movf	(___fldiv@f1+2),w
  5701  069D  00B4               	movwf	((??___fldiv+0)+0+2)
  5702  069E  0831               	movf	(___fldiv@f1+3),w
  5703  069F  00B5               	movwf	((??___fldiv+0)+0+3)
  5704  06A0  1003               	clrc
  5705  06A1  0D34               	rlf	(??___fldiv+0)+2,w
  5706  06A2  0D35               	rlf	(??___fldiv+0)+3,w
  5707  06A3  00B6               	movwf	(??___fldiv+4)+0
  5708  06A4  0836               	movf	(??___fldiv+4)+0,w
  5709  06A5  00BC               	movwf	(___fldiv@exp)
  5710  06A6  08BC               	movf	((___fldiv@exp)),f
  5711  06A7  1D03               	skipz
  5712  06A8  2EAA               	goto	u3711
  5713  06A9  2EAB               	goto	u3710
  5714  06AA                     u3711:
  5715  06AA  2EB5               	goto	l8278
  5716  06AB                     u3710:
  5717                           	line	56
  5718                           	
  5719  06AB                     l8274:	
  5720  06AB  3000               	movlw	0x0
  5721  06AC  00AD               	movwf	(?___fldiv+3)
  5722  06AD  3000               	movlw	0x0
  5723  06AE  00AC               	movwf	(?___fldiv+2)
  5724  06AF  3000               	movlw	0x0
  5725  06B0  00AB               	movwf	(?___fldiv+1)
  5726  06B1  3000               	movlw	0x0
  5727  06B2  00AA               	movwf	(?___fldiv)
  5728                           
  5729  06B3  2F75               	goto	l5705
  5730                           	
  5731  06B4                     l8276:	
  5732  06B4  2F75               	goto	l5705
  5733                           	
  5734  06B5                     l5704:	
  5735                           	line	57
  5736                           	
  5737  06B5                     l8278:	
  5738  06B5  082A               	movf	(___fldiv@f2),w
  5739  06B6  00B2               	movwf	(??___fldiv+0)+0
  5740  06B7  082B               	movf	(___fldiv@f2+1),w
  5741  06B8  00B3               	movwf	((??___fldiv+0)+0+1)
  5742  06B9  082C               	movf	(___fldiv@f2+2),w
  5743  06BA  00B4               	movwf	((??___fldiv+0)+0+2)
  5744  06BB  082D               	movf	(___fldiv@f2+3),w
  5745  06BC  00B5               	movwf	((??___fldiv+0)+0+3)
  5746  06BD  1003               	clrc
  5747  06BE  0D34               	rlf	(??___fldiv+0)+2,w
  5748  06BF  0D35               	rlf	(??___fldiv+0)+3,w
  5749  06C0  00B6               	movwf	(??___fldiv+4)+0
  5750  06C1  0836               	movf	(??___fldiv+4)+0,w
  5751  06C2  00BD               	movwf	(___fldiv@sign)
  5752  06C3  08BD               	movf	((___fldiv@sign)),f
  5753  06C4  1D03               	skipz
  5754  06C5  2EC7               	goto	u3721
  5755  06C6  2EC8               	goto	u3720
  5756  06C7                     u3721:
  5757  06C7  2ED2               	goto	l8284
  5758  06C8                     u3720:
  5759                           	line	58
  5760                           	
  5761  06C8                     l8280:	
  5762  06C8  3000               	movlw	0x0
  5763  06C9  00AD               	movwf	(?___fldiv+3)
  5764  06CA  3000               	movlw	0x0
  5765  06CB  00AC               	movwf	(?___fldiv+2)
  5766  06CC  3000               	movlw	0x0
  5767  06CD  00AB               	movwf	(?___fldiv+1)
  5768  06CE  3000               	movlw	0x0
  5769  06CF  00AA               	movwf	(?___fldiv)
  5770                           
  5771  06D0  2F75               	goto	l5705
  5772                           	
  5773  06D1                     l8282:	
  5774  06D1  2F75               	goto	l5705
  5775                           	
  5776  06D2                     l5706:	
  5777                           	line	59
  5778                           	
  5779  06D2                     l8284:	
  5780  06D2  3089               	movlw	(089h)
  5781  06D3  073D               	addwf	(___fldiv@sign),w
  5782  06D4  00B2               	movwf	(??___fldiv+0)+0
  5783  06D5  0832               	movf	0+(??___fldiv+0)+0,w
  5784  06D6  02BC               	subwf	(___fldiv@exp),f
  5785                           	line	60
  5786  06D7  082E               	movf	(___fldiv@f1),w
  5787  06D8  00B2               	movwf	(??___fldiv+0)+0
  5788  06D9  082F               	movf	(___fldiv@f1+1),w
  5789  06DA  00B3               	movwf	((??___fldiv+0)+0+1)
  5790  06DB  0830               	movf	(___fldiv@f1+2),w
  5791  06DC  00B4               	movwf	((??___fldiv+0)+0+2)
  5792  06DD  0831               	movf	(___fldiv@f1+3),w
  5793  06DE  00B5               	movwf	((??___fldiv+0)+0+3)
  5794  06DF  3018               	movlw	018h
  5795  06E0                     u3735:
  5796  06E0  1003               	clrc
  5797  06E1  0CB5               	rrf	(??___fldiv+0)+3,f
  5798  06E2  0CB4               	rrf	(??___fldiv+0)+2,f
  5799  06E3  0CB3               	rrf	(??___fldiv+0)+1,f
  5800  06E4  0CB2               	rrf	(??___fldiv+0)+0,f
  5801  06E5                     u3730:
  5802  06E5  3EFF               	addlw	-1
  5803  06E6  1D03               	skipz
  5804  06E7  2EE0               	goto	u3735
  5805  06E8  0832               	movf	0+(??___fldiv+0)+0,w
  5806  06E9  00B6               	movwf	(??___fldiv+4)+0
  5807  06EA  0836               	movf	(??___fldiv+4)+0,w
  5808  06EB  00BD               	movwf	(___fldiv@sign)
  5809                           	line	61
  5810  06EC  082A               	movf	(___fldiv@f2),w
  5811  06ED  00B2               	movwf	(??___fldiv+0)+0
  5812  06EE  082B               	movf	(___fldiv@f2+1),w
  5813  06EF  00B3               	movwf	((??___fldiv+0)+0+1)
  5814  06F0  082C               	movf	(___fldiv@f2+2),w
  5815  06F1  00B4               	movwf	((??___fldiv+0)+0+2)
  5816  06F2  082D               	movf	(___fldiv@f2+3),w
  5817  06F3  00B5               	movwf	((??___fldiv+0)+0+3)
  5818  06F4  3018               	movlw	018h
  5819  06F5                     u3745:
  5820  06F5  1003               	clrc
  5821  06F6  0CB5               	rrf	(??___fldiv+0)+3,f
  5822  06F7  0CB4               	rrf	(??___fldiv+0)+2,f
  5823  06F8  0CB3               	rrf	(??___fldiv+0)+1,f
  5824  06F9  0CB2               	rrf	(??___fldiv+0)+0,f
  5825  06FA                     u3740:
  5826  06FA  3EFF               	addlw	-1
  5827  06FB  1D03               	skipz
  5828  06FC  2EF5               	goto	u3745
  5829  06FD  0832               	movf	0+(??___fldiv+0)+0,w
  5830  06FE  00B6               	movwf	(??___fldiv+4)+0
  5831  06FF  0836               	movf	(??___fldiv+4)+0,w
  5832  0700  06BD               	xorwf	(___fldiv@sign),f
  5833                           	line	62
  5834  0701  3080               	movlw	(080h)
  5835  0702  00B2               	movwf	(??___fldiv+0)+0
  5836  0703  0832               	movf	(??___fldiv+0)+0,w
  5837  0704  05BD               	andwf	(___fldiv@sign),f
  5838                           	line	63
  5839                           	
  5840  0705                     l8286:	
  5841  0705  17B0               	bsf	(___fldiv@f1)+(23/8),(23)&7
  5842                           	line	64
  5843                           	
  5844  0706                     l8288:	
  5845  0706  30FF               	movlw	0FFh
  5846  0707  05AE               	andwf	(___fldiv@f1),f
  5847  0708  30FF               	movlw	0FFh
  5848  0709  05AF               	andwf	(___fldiv@f1+1),f
  5849  070A  30FF               	movlw	0FFh
  5850  070B  05B0               	andwf	(___fldiv@f1+2),f
  5851  070C  3000               	movlw	0
  5852  070D  05B1               	andwf	(___fldiv@f1+3),f
  5853                           	line	65
  5854                           	
  5855  070E                     l8290:	
  5856  070E  17AC               	bsf	(___fldiv@f2)+(23/8),(23)&7
  5857                           	line	66
  5858                           	
  5859  070F                     l8292:	
  5860  070F  30FF               	movlw	0FFh
  5861  0710  05AA               	andwf	(___fldiv@f2),f
  5862  0711  30FF               	movlw	0FFh
  5863  0712  05AB               	andwf	(___fldiv@f2+1),f
  5864  0713  30FF               	movlw	0FFh
  5865  0714  05AC               	andwf	(___fldiv@f2+2),f
  5866  0715  3000               	movlw	0
  5867  0716  05AD               	andwf	(___fldiv@f2+3),f
  5868                           	line	67
  5869                           	
  5870  0717                     l8294:	
  5871  0717  3020               	movlw	(020h)
  5872  0718  00B2               	movwf	(??___fldiv+0)+0
  5873  0719  0832               	movf	(??___fldiv+0)+0,w
  5874  071A  00BB               	movwf	(___fldiv@cntr)
  5875  071B  2F1C               	goto	l8296
  5876                           	line	68
  5877                           	
  5878  071C                     l5707:	
  5879                           	line	69
  5880                           	
  5881  071C                     l8296:	
  5882  071C  3001               	movlw	01h
  5883  071D  00B2               	movwf	(??___fldiv+0)+0
  5884  071E                     u3755:
  5885  071E  1003               	clrc
  5886  071F  0DB7               	rlf	(___fldiv@f3),f
  5887  0720  0DB8               	rlf	(___fldiv@f3+1),f
  5888  0721  0DB9               	rlf	(___fldiv@f3+2),f
  5889  0722  0DBA               	rlf	(___fldiv@f3+3),f
  5890  0723  0BB2               	decfsz	(??___fldiv+0)+0
  5891  0724  2F1E               	goto	u3755
  5892                           	line	70
  5893  0725  082D               	movf	(___fldiv@f2+3),w
  5894  0726  0231               	subwf	(___fldiv@f1+3),w
  5895  0727  1D03               	skipz
  5896  0728  2F33               	goto	u3765
  5897  0729  082C               	movf	(___fldiv@f2+2),w
  5898  072A  0230               	subwf	(___fldiv@f1+2),w
  5899  072B  1D03               	skipz
  5900  072C  2F33               	goto	u3765
  5901  072D  082B               	movf	(___fldiv@f2+1),w
  5902  072E  022F               	subwf	(___fldiv@f1+1),w
  5903  072F  1D03               	skipz
  5904  0730  2F33               	goto	u3765
  5905  0731  082A               	movf	(___fldiv@f2),w
  5906  0732  022E               	subwf	(___fldiv@f1),w
  5907  0733                     u3765:
  5908  0733  1C03               	skipc
  5909  0734  2F36               	goto	u3761
  5910  0735  2F37               	goto	u3760
  5911  0736                     u3761:
  5912  0736  2F47               	goto	l8302
  5913  0737                     u3760:
  5914                           	line	71
  5915                           	
  5916  0737                     l8298:	
  5917  0737  082A               	movf	(___fldiv@f2),w
  5918  0738  02AE               	subwf	(___fldiv@f1),f
  5919  0739  082B               	movf	(___fldiv@f2+1),w
  5920  073A  1C03               	skipc
  5921  073B  0F2B               	incfsz	(___fldiv@f2+1),w
  5922  073C  02AF               	subwf	(___fldiv@f1+1),f
  5923  073D  082C               	movf	(___fldiv@f2+2),w
  5924  073E  1C03               	skipc
  5925  073F  0F2C               	incfsz	(___fldiv@f2+2),w
  5926  0740  02B0               	subwf	(___fldiv@f1+2),f
  5927  0741  082D               	movf	(___fldiv@f2+3),w
  5928  0742  1C03               	skipc
  5929  0743  0F2D               	incfsz	(___fldiv@f2+3),w
  5930  0744  02B1               	subwf	(___fldiv@f1+3),f
  5931                           	line	72
  5932                           	
  5933  0745                     l8300:	
  5934  0745  1437               	bsf	(___fldiv@f3)+(0/8),(0)&7
  5935  0746  2F47               	goto	l8302
  5936                           	line	73
  5937                           	
  5938  0747                     l5708:	
  5939                           	line	74
  5940                           	
  5941  0747                     l8302:	
  5942  0747  3001               	movlw	01h
  5943  0748  00B2               	movwf	(??___fldiv+0)+0
  5944  0749                     u3775:
  5945  0749  1003               	clrc
  5946  074A  0DAE               	rlf	(___fldiv@f1),f
  5947  074B  0DAF               	rlf	(___fldiv@f1+1),f
  5948  074C  0DB0               	rlf	(___fldiv@f1+2),f
  5949  074D  0DB1               	rlf	(___fldiv@f1+3),f
  5950  074E  0BB2               	decfsz	(??___fldiv+0)+0
  5951  074F  2F49               	goto	u3775
  5952                           	line	75
  5953                           	
  5954  0750                     l8304:	
  5955  0750  3001               	movlw	low(01h)
  5956  0751  02BB               	subwf	(___fldiv@cntr),f
  5957  0752  1D03               	btfss	status,2
  5958  0753  2F55               	goto	u3781
  5959  0754  2F56               	goto	u3780
  5960  0755                     u3781:
  5961  0755  2F1C               	goto	l8296
  5962  0756                     u3780:
  5963  0756  2F57               	goto	l8306
  5964                           	
  5965  0757                     l5709:	
  5966                           	line	76
  5967                           	
  5968  0757                     l8306:	
  5969  0757  083A               	movf	(___fldiv@f3+3),w
  5970  0758  00A3               	movwf	(?___flpack+3)
  5971  0759  0839               	movf	(___fldiv@f3+2),w
  5972  075A  00A2               	movwf	(?___flpack+2)
  5973  075B  0838               	movf	(___fldiv@f3+1),w
  5974  075C  00A1               	movwf	(?___flpack+1)
  5975  075D  0837               	movf	(___fldiv@f3),w
  5976  075E  00A0               	movwf	(?___flpack)
  5977                           
  5978  075F  083C               	movf	(___fldiv@exp),w
  5979  0760  00B2               	movwf	(??___fldiv+0)+0
  5980  0761  0832               	movf	(??___fldiv+0)+0,w
  5981  0762  00A4               	movwf	0+(?___flpack)+04h
  5982  0763  083D               	movf	(___fldiv@sign),w
  5983  0764  00B3               	movwf	(??___fldiv+1)+0
  5984  0765  0833               	movf	(??___fldiv+1)+0,w
  5985  0766  00A5               	movwf	0+(?___flpack)+05h
  5986  0767  158A  259D  118A   	fcall	___flpack
  5987  076A  1283               	bcf	status, 5	;RP0=0, select bank0
  5988  076B  1303               	bcf	status, 6	;RP1=0, select bank0
  5989  076C  0823               	movf	(3+(?___flpack)),w
  5990  076D  00AD               	movwf	(?___fldiv+3)
  5991  076E  0822               	movf	(2+(?___flpack)),w
  5992  076F  00AC               	movwf	(?___fldiv+2)
  5993  0770  0821               	movf	(1+(?___flpack)),w
  5994  0771  00AB               	movwf	(?___fldiv+1)
  5995  0772  0820               	movf	(0+(?___flpack)),w
  5996  0773  00AA               	movwf	(?___fldiv)
  5997                           
  5998  0774  2F75               	goto	l5705
  5999                           	
  6000  0775                     l8308:	
  6001                           	line	77
  6002                           	
  6003  0775                     l5705:	
  6004  0775  0008               	return
  6005                           	opt stack 0
  6006                           GLOBAL	__end_of___fldiv
  6007  0776                     	__end_of___fldiv:
  6008                           	signat	___fldiv,8316
  6009                           	global	___flmul
  6010                           
  6011 ;; *************** function ___flmul *****************
  6012 ;; Defined at:
  6013 ;;		line 51 in file "C:\Program Files\Microchip\xc8\v1.10\sources\flmul.c"
  6014 ;; Parameters:    Size  Location     Type
  6015 ;;  f1              4   17[BANK0 ] unsigned char 
  6016 ;;  f2              4   21[BANK0 ] unsigned char 
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;  f3_as_produc    4   31[BANK0 ] unsigned long 
  6019 ;;  sign            1   36[BANK0 ] unsigned char 
  6020 ;;  cntr            1   35[BANK0 ] unsigned char 
  6021 ;;  exp             1   30[BANK0 ] unsigned char 
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  4   17[BANK0 ] unsigned char 
  6024 ;; Registers used:
  6025 ;;		wreg, status,2, status,0, pclath, cstack
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6031 ;;      Params:         0       8       0       0       0
  6032 ;;      Locals:         0       7       0       0       0
  6033 ;;      Temps:          0       5       0       0       0
  6034 ;;      Totals:         0      20       0       0       0
  6035 ;;Total ram usage:       20 bytes
  6036 ;; Hardware stack levels used:    1
  6037 ;; Hardware stack levels required when called:    2
  6038 ;; This function calls:
  6039 ;;		___flpack
  6040 ;; This function is called by:
  6041 ;;		_main
  6042 ;;		_DoubletoAscii
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           psect	text750,local,class=CODE,delta=2,merge=1
  6046                           global __ptext750
  6047  0582                     __ptext750:	;psect for function ___flmul
  6048                           psect	text750
  6049                           	file	"C:\Program Files\Microchip\xc8\v1.10\sources\flmul.c"
  6050                           	line	51
  6051                           	global	__size_of___flmul
  6052  0114                     	__size_of___flmul	equ	__end_of___flmul-___flmul
  6053                           	
  6054  0582                     ___flmul:	
  6055                           	opt	stack 4
  6056                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  6057                           	line	55
  6058                           	
  6059  0582                     l8310:	
  6060  0582  1283               	bcf	status, 5	;RP0=0, select bank0
  6061  0583  1303               	bcf	status, 6	;RP1=0, select bank0
  6062  0584  0831               	movf	(___flmul@f1),w
  6063  0585  00B9               	movwf	(??___flmul+0)+0
  6064  0586  0832               	movf	(___flmul@f1+1),w
  6065  0587  00BA               	movwf	((??___flmul+0)+0+1)
  6066  0588  0833               	movf	(___flmul@f1+2),w
  6067  0589  00BB               	movwf	((??___flmul+0)+0+2)
  6068  058A  0834               	movf	(___flmul@f1+3),w
  6069  058B  00BC               	movwf	((??___flmul+0)+0+3)
  6070  058C  1003               	clrc
  6071  058D  0D3B               	rlf	(??___flmul+0)+2,w
  6072  058E  0D3C               	rlf	(??___flmul+0)+3,w
  6073  058F  00BD               	movwf	(??___flmul+4)+0
  6074  0590  083D               	movf	(??___flmul+4)+0,w
  6075  0591  00BE               	movwf	(___flmul@exp)
  6076  0592  08BE               	movf	((___flmul@exp)),f
  6077  0593  1D03               	skipz
  6078  0594  2D96               	goto	u3791
  6079  0595  2D97               	goto	u3790
  6080  0596                     u3791:
  6081  0596  2DA1               	goto	l8316
  6082  0597                     u3790:
  6083                           	line	56
  6084                           	
  6085  0597                     l8312:	
  6086  0597  3000               	movlw	0x0
  6087  0598  00B4               	movwf	(?___flmul+3)
  6088  0599  3000               	movlw	0x0
  6089  059A  00B3               	movwf	(?___flmul+2)
  6090  059B  3000               	movlw	0x0
  6091  059C  00B2               	movwf	(?___flmul+1)
  6092  059D  3000               	movlw	0x0
  6093  059E  00B1               	movwf	(?___flmul)
  6094                           
  6095  059F  2E95               	goto	l5715
  6096                           	
  6097  05A0                     l8314:	
  6098  05A0  2E95               	goto	l5715
  6099                           	
  6100  05A1                     l5714:	
  6101                           	line	57
  6102                           	
  6103  05A1                     l8316:	
  6104  05A1  0835               	movf	(___flmul@f2),w
  6105  05A2  00B9               	movwf	(??___flmul+0)+0
  6106  05A3  0836               	movf	(___flmul@f2+1),w
  6107  05A4  00BA               	movwf	((??___flmul+0)+0+1)
  6108  05A5  0837               	movf	(___flmul@f2+2),w
  6109  05A6  00BB               	movwf	((??___flmul+0)+0+2)
  6110  05A7  0838               	movf	(___flmul@f2+3),w
  6111  05A8  00BC               	movwf	((??___flmul+0)+0+3)
  6112  05A9  1003               	clrc
  6113  05AA  0D3B               	rlf	(??___flmul+0)+2,w
  6114  05AB  0D3C               	rlf	(??___flmul+0)+3,w
  6115  05AC  00BD               	movwf	(??___flmul+4)+0
  6116  05AD  083D               	movf	(??___flmul+4)+0,w
  6117  05AE  00C4               	movwf	(___flmul@sign)
  6118  05AF  08C4               	movf	((___flmul@sign)),f
  6119  05B0  1D03               	skipz
  6120  05B1  2DB3               	goto	u3801
  6121  05B2  2DB4               	goto	u3800
  6122  05B3                     u3801:
  6123  05B3  2DBE               	goto	l8322
  6124  05B4                     u3800:
  6125                           	line	58
  6126                           	
  6127  05B4                     l8318:	
  6128  05B4  3000               	movlw	0x0
  6129  05B5  00B4               	movwf	(?___flmul+3)
  6130  05B6  3000               	movlw	0x0
  6131  05B7  00B3               	movwf	(?___flmul+2)
  6132  05B8  3000               	movlw	0x0
  6133  05B9  00B2               	movwf	(?___flmul+1)
  6134  05BA  3000               	movlw	0x0
  6135  05BB  00B1               	movwf	(?___flmul)
  6136                           
  6137  05BC  2E95               	goto	l5715
  6138                           	
  6139  05BD                     l8320:	
  6140  05BD  2E95               	goto	l5715
  6141                           	
  6142  05BE                     l5716:	
  6143                           	line	59
  6144                           	
  6145  05BE                     l8322:	
  6146  05BE  0844               	movf	(___flmul@sign),w
  6147  05BF  3E7B               	addlw	07Bh
  6148  05C0  00B9               	movwf	(??___flmul+0)+0
  6149  05C1  0839               	movf	(??___flmul+0)+0,w
  6150  05C2  07BE               	addwf	(___flmul@exp),f
  6151                           	line	60
  6152  05C3  0831               	movf	(___flmul@f1),w
  6153  05C4  00B9               	movwf	(??___flmul+0)+0
  6154  05C5  0832               	movf	(___flmul@f1+1),w
  6155  05C6  00BA               	movwf	((??___flmul+0)+0+1)
  6156  05C7  0833               	movf	(___flmul@f1+2),w
  6157  05C8  00BB               	movwf	((??___flmul+0)+0+2)
  6158  05C9  0834               	movf	(___flmul@f1+3),w
  6159  05CA  00BC               	movwf	((??___flmul+0)+0+3)
  6160  05CB  3018               	movlw	018h
  6161  05CC                     u3815:
  6162  05CC  1003               	clrc
  6163  05CD  0CBC               	rrf	(??___flmul+0)+3,f
  6164  05CE  0CBB               	rrf	(??___flmul+0)+2,f
  6165  05CF  0CBA               	rrf	(??___flmul+0)+1,f
  6166  05D0  0CB9               	rrf	(??___flmul+0)+0,f
  6167  05D1                     u3810:
  6168  05D1  3EFF               	addlw	-1
  6169  05D2  1D03               	skipz
  6170  05D3  2DCC               	goto	u3815
  6171  05D4  0839               	movf	0+(??___flmul+0)+0,w
  6172  05D5  00BD               	movwf	(??___flmul+4)+0
  6173  05D6  083D               	movf	(??___flmul+4)+0,w
  6174  05D7  00C4               	movwf	(___flmul@sign)
  6175                           	line	61
  6176  05D8  0835               	movf	(___flmul@f2),w
  6177  05D9  00B9               	movwf	(??___flmul+0)+0
  6178  05DA  0836               	movf	(___flmul@f2+1),w
  6179  05DB  00BA               	movwf	((??___flmul+0)+0+1)
  6180  05DC  0837               	movf	(___flmul@f2+2),w
  6181  05DD  00BB               	movwf	((??___flmul+0)+0+2)
  6182  05DE  0838               	movf	(___flmul@f2+3),w
  6183  05DF  00BC               	movwf	((??___flmul+0)+0+3)
  6184  05E0  3018               	movlw	018h
  6185  05E1                     u3825:
  6186  05E1  1003               	clrc
  6187  05E2  0CBC               	rrf	(??___flmul+0)+3,f
  6188  05E3  0CBB               	rrf	(??___flmul+0)+2,f
  6189  05E4  0CBA               	rrf	(??___flmul+0)+1,f
  6190  05E5  0CB9               	rrf	(??___flmul+0)+0,f
  6191  05E6                     u3820:
  6192  05E6  3EFF               	addlw	-1
  6193  05E7  1D03               	skipz
  6194  05E8  2DE1               	goto	u3825
  6195  05E9  0839               	movf	0+(??___flmul+0)+0,w
  6196  05EA  00BD               	movwf	(??___flmul+4)+0
  6197  05EB  083D               	movf	(??___flmul+4)+0,w
  6198  05EC  06C4               	xorwf	(___flmul@sign),f
  6199                           	line	62
  6200  05ED  3080               	movlw	(080h)
  6201  05EE  00B9               	movwf	(??___flmul+0)+0
  6202  05EF  0839               	movf	(??___flmul+0)+0,w
  6203  05F0  05C4               	andwf	(___flmul@sign),f
  6204                           	line	63
  6205                           	
  6206  05F1                     l8324:	
  6207  05F1  17B3               	bsf	(___flmul@f1)+(23/8),(23)&7
  6208                           	line	65
  6209                           	
  6210  05F2                     l8326:	
  6211  05F2  17B7               	bsf	(___flmul@f2)+(23/8),(23)&7
  6212                           	line	66
  6213                           	
  6214  05F3                     l8328:	
  6215  05F3  30FF               	movlw	0FFh
  6216  05F4  05B5               	andwf	(___flmul@f2),f
  6217  05F5  30FF               	movlw	0FFh
  6218  05F6  05B6               	andwf	(___flmul@f2+1),f
  6219  05F7  30FF               	movlw	0FFh
  6220  05F8  05B7               	andwf	(___flmul@f2+2),f
  6221  05F9  3000               	movlw	0
  6222  05FA  05B8               	andwf	(___flmul@f2+3),f
  6223                           	line	67
  6224                           	
  6225  05FB                     l8330:	
  6226  05FB  3000               	movlw	0
  6227  05FC  00C2               	movwf	(___flmul@f3_as_product+3)
  6228  05FD  3000               	movlw	0
  6229  05FE  00C1               	movwf	(___flmul@f3_as_product+2)
  6230  05FF  3000               	movlw	0
  6231  0600  00C0               	movwf	(___flmul@f3_as_product+1)
  6232  0601  3000               	movlw	0
  6233  0602  00BF               	movwf	(___flmul@f3_as_product)
  6234                           
  6235                           	line	68
  6236                           	
  6237  0603                     l8332:	
  6238  0603  3007               	movlw	(07h)
  6239  0604  00B9               	movwf	(??___flmul+0)+0
  6240  0605  0839               	movf	(??___flmul+0)+0,w
  6241  0606  00C3               	movwf	(___flmul@cntr)
  6242  0607  2E08               	goto	l8334
  6243                           	line	69
  6244                           	
  6245  0608                     l5717:	
  6246                           	line	70
  6247                           	
  6248  0608                     l8334:	
  6249  0608  1C31               	btfss	(___flmul@f1),(0)&7
  6250  0609  2E0B               	goto	u3831
  6251  060A  2E0C               	goto	u3830
  6252  060B                     u3831:
  6253  060B  2E24               	goto	l8338
  6254  060C                     u3830:
  6255                           	line	71
  6256                           	
  6257  060C                     l8336:	
  6258  060C  0835               	movf	(___flmul@f2),w
  6259  060D  07BF               	addwf	(___flmul@f3_as_product),f
  6260  060E  0836               	movf	(___flmul@f2+1),w
  6261  060F  1103               	clrz
  6262  0610  1803               	skipnc
  6263  0611  3E01               	addlw	1
  6264  0612  1903               	skipnz
  6265  0613  2E15               	goto	u3841
  6266  0614  07C0               	addwf	(___flmul@f3_as_product+1),f
  6267  0615                     u3841:
  6268  0615  0837               	movf	(___flmul@f2+2),w
  6269  0616  1103               	clrz
  6270  0617  1803               	skipnc
  6271  0618  3E01               	addlw	1
  6272  0619  1903               	skipnz
  6273  061A  2E1C               	goto	u3842
  6274  061B  07C1               	addwf	(___flmul@f3_as_product+2),f
  6275  061C                     u3842:
  6276  061C  0838               	movf	(___flmul@f2+3),w
  6277  061D  1103               	clrz
  6278  061E  1803               	skipnc
  6279  061F  3E01               	addlw	1
  6280  0620  1903               	skipnz
  6281  0621  2E23               	goto	u3843
  6282  0622  07C2               	addwf	(___flmul@f3_as_product+3),f
  6283  0623                     u3843:
  6284                           
  6285  0623  2E24               	goto	l8338
  6286                           	
  6287  0624                     l5718:	
  6288                           	line	72
  6289                           	
  6290  0624                     l8338:	
  6291  0624  3001               	movlw	01h
  6292  0625                     u3855:
  6293  0625  1003               	clrc
  6294  0626  0CB4               	rrf	(___flmul@f1+3),f
  6295  0627  0CB3               	rrf	(___flmul@f1+2),f
  6296  0628  0CB2               	rrf	(___flmul@f1+1),f
  6297  0629  0CB1               	rrf	(___flmul@f1),f
  6298  062A  3EFF               	addlw	-1
  6299  062B  1D03               	skipz
  6300  062C  2E25               	goto	u3855
  6301                           
  6302                           	line	73
  6303                           	
  6304  062D                     l8340:	
  6305  062D  3001               	movlw	01h
  6306  062E  00B9               	movwf	(??___flmul+0)+0
  6307  062F                     u3865:
  6308  062F  1003               	clrc
  6309  0630  0DB5               	rlf	(___flmul@f2),f
  6310  0631  0DB6               	rlf	(___flmul@f2+1),f
  6311  0632  0DB7               	rlf	(___flmul@f2+2),f
  6312  0633  0DB8               	rlf	(___flmul@f2+3),f
  6313  0634  0BB9               	decfsz	(??___flmul+0)+0
  6314  0635  2E2F               	goto	u3865
  6315                           	line	74
  6316                           	
  6317  0636                     l8342:	
  6318  0636  3001               	movlw	low(01h)
  6319  0637  02C3               	subwf	(___flmul@cntr),f
  6320  0638  1D03               	btfss	status,2
  6321  0639  2E3B               	goto	u3871
  6322  063A  2E3C               	goto	u3870
  6323  063B                     u3871:
  6324  063B  2E08               	goto	l8334
  6325  063C                     u3870:
  6326  063C  2E3D               	goto	l8344
  6327                           	
  6328  063D                     l5719:	
  6329                           	line	75
  6330                           	
  6331  063D                     l8344:	
  6332  063D  3011               	movlw	(011h)
  6333  063E  00B9               	movwf	(??___flmul+0)+0
  6334  063F  0839               	movf	(??___flmul+0)+0,w
  6335  0640  00C3               	movwf	(___flmul@cntr)
  6336  0641  2E42               	goto	l8346
  6337                           	line	76
  6338                           	
  6339  0642                     l5720:	
  6340                           	line	77
  6341                           	
  6342  0642                     l8346:	
  6343  0642  1C31               	btfss	(___flmul@f1),(0)&7
  6344  0643  2E45               	goto	u3881
  6345  0644  2E46               	goto	u3880
  6346  0645                     u3881:
  6347  0645  2E5E               	goto	l8350
  6348  0646                     u3880:
  6349                           	line	78
  6350                           	
  6351  0646                     l8348:	
  6352  0646  0835               	movf	(___flmul@f2),w
  6353  0647  07BF               	addwf	(___flmul@f3_as_product),f
  6354  0648  0836               	movf	(___flmul@f2+1),w
  6355  0649  1103               	clrz
  6356  064A  1803               	skipnc
  6357  064B  3E01               	addlw	1
  6358  064C  1903               	skipnz
  6359  064D  2E4F               	goto	u3891
  6360  064E  07C0               	addwf	(___flmul@f3_as_product+1),f
  6361  064F                     u3891:
  6362  064F  0837               	movf	(___flmul@f2+2),w
  6363  0650  1103               	clrz
  6364  0651  1803               	skipnc
  6365  0652  3E01               	addlw	1
  6366  0653  1903               	skipnz
  6367  0654  2E56               	goto	u3892
  6368  0655  07C1               	addwf	(___flmul@f3_as_product+2),f
  6369  0656                     u3892:
  6370  0656  0838               	movf	(___flmul@f2+3),w
  6371  0657  1103               	clrz
  6372  0658  1803               	skipnc
  6373  0659  3E01               	addlw	1
  6374  065A  1903               	skipnz
  6375  065B  2E5D               	goto	u3893
  6376  065C  07C2               	addwf	(___flmul@f3_as_product+3),f
  6377  065D                     u3893:
  6378                           
  6379  065D  2E5E               	goto	l8350
  6380                           	
  6381  065E                     l5721:	
  6382                           	line	79
  6383                           	
  6384  065E                     l8350:	
  6385  065E  3001               	movlw	01h
  6386  065F                     u3905:
  6387  065F  1003               	clrc
  6388  0660  0CB4               	rrf	(___flmul@f1+3),f
  6389  0661  0CB3               	rrf	(___flmul@f1+2),f
  6390  0662  0CB2               	rrf	(___flmul@f1+1),f
  6391  0663  0CB1               	rrf	(___flmul@f1),f
  6392  0664  3EFF               	addlw	-1
  6393  0665  1D03               	skipz
  6394  0666  2E5F               	goto	u3905
  6395                           
  6396                           	line	80
  6397                           	
  6398  0667                     l8352:	
  6399  0667  3001               	movlw	01h
  6400  0668                     u3915:
  6401  0668  1003               	clrc
  6402  0669  0CC2               	rrf	(___flmul@f3_as_product+3),f
  6403  066A  0CC1               	rrf	(___flmul@f3_as_product+2),f
  6404  066B  0CC0               	rrf	(___flmul@f3_as_product+1),f
  6405  066C  0CBF               	rrf	(___flmul@f3_as_product),f
  6406  066D  3EFF               	addlw	-1
  6407  066E  1D03               	skipz
  6408  066F  2E68               	goto	u3915
  6409                           
  6410                           	line	81
  6411                           	
  6412  0670                     l8354:	
  6413  0670  3001               	movlw	low(01h)
  6414  0671  02C3               	subwf	(___flmul@cntr),f
  6415  0672  1D03               	btfss	status,2
  6416  0673  2E75               	goto	u3921
  6417  0674  2E76               	goto	u3920
  6418  0675                     u3921:
  6419  0675  2E42               	goto	l8346
  6420  0676                     u3920:
  6421  0676  2E77               	goto	l8356
  6422                           	
  6423  0677                     l5722:	
  6424                           	line	82
  6425                           	
  6426  0677                     l8356:	
  6427  0677  0842               	movf	(___flmul@f3_as_product+3),w
  6428  0678  00A3               	movwf	(?___flpack+3)
  6429  0679  0841               	movf	(___flmul@f3_as_product+2),w
  6430  067A  00A2               	movwf	(?___flpack+2)
  6431  067B  0840               	movf	(___flmul@f3_as_product+1),w
  6432  067C  00A1               	movwf	(?___flpack+1)
  6433  067D  083F               	movf	(___flmul@f3_as_product),w
  6434  067E  00A0               	movwf	(?___flpack)
  6435                           
  6436  067F  083E               	movf	(___flmul@exp),w
  6437  0680  00B9               	movwf	(??___flmul+0)+0
  6438  0681  0839               	movf	(??___flmul+0)+0,w
  6439  0682  00A4               	movwf	0+(?___flpack)+04h
  6440  0683  0844               	movf	(___flmul@sign),w
  6441  0684  00BA               	movwf	(??___flmul+1)+0
  6442  0685  083A               	movf	(??___flmul+1)+0,w
  6443  0686  00A5               	movwf	0+(?___flpack)+05h
  6444  0687  158A  259D  118A   	fcall	___flpack
  6445  068A  1283               	bcf	status, 5	;RP0=0, select bank0
  6446  068B  1303               	bcf	status, 6	;RP1=0, select bank0
  6447  068C  0823               	movf	(3+(?___flpack)),w
  6448  068D  00B4               	movwf	(?___flmul+3)
  6449  068E  0822               	movf	(2+(?___flpack)),w
  6450  068F  00B3               	movwf	(?___flmul+2)
  6451  0690  0821               	movf	(1+(?___flpack)),w
  6452  0691  00B2               	movwf	(?___flmul+1)
  6453  0692  0820               	movf	(0+(?___flpack)),w
  6454  0693  00B1               	movwf	(?___flmul)
  6455                           
  6456  0694  2E95               	goto	l5715
  6457                           	
  6458  0695                     l8358:	
  6459                           	line	83
  6460                           	
  6461  0695                     l5715:	
  6462  0695  0008               	return
  6463                           	opt stack 0
  6464                           GLOBAL	__end_of___flmul
  6465  0696                     	__end_of___flmul:
  6466                           	signat	___flmul,8316
  6467                           	global	___fltol
  6468                           
  6469 ;; *************** function ___fltol *****************
  6470 ;; Defined at:
  6471 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.10\sources\fltol.c"
  6472 ;; Parameters:    Size  Location     Type
  6473 ;;  f1              4   53[BANK0 ] unsigned char 
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;  exp1            1   63[BANK0 ] unsigned char 
  6476 ;;  sign1           1   62[BANK0 ] unsigned char 
  6477 ;; Return value:  Size  Location     Type
  6478 ;;                  4   53[BANK0 ] long 
  6479 ;; Registers used:
  6480 ;;		wreg, status,2, status,0
  6481 ;; Tracked objects:
  6482 ;;		On entry : 0/0
  6483 ;;		On exit  : 0/0
  6484 ;;		Unchanged: 0/0
  6485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6486 ;;      Params:         0       4       0       0       0
  6487 ;;      Locals:         0       2       0       0       0
  6488 ;;      Temps:          0       5       0       0       0
  6489 ;;      Totals:         0      11       0       0       0
  6490 ;;Total ram usage:       11 bytes
  6491 ;; Hardware stack levels used:    1
  6492 ;; Hardware stack levels required when called:    1
  6493 ;; This function calls:
  6494 ;;		Nothing
  6495 ;; This function is called by:
  6496 ;;		_main
  6497 ;;		_DoubletoAscii
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           psect	text751,local,class=CODE,delta=2,merge=1
  6501                           global __ptext751
  6502  0EBC                     __ptext751:	;psect for function ___fltol
  6503                           psect	text751
  6504                           	file	"C:\Program Files\Microchip\xc8\v1.10\sources\fltol.c"
  6505                           	line	44
  6506                           	global	__size_of___fltol
  6507  009C                     	__size_of___fltol	equ	__end_of___fltol-___fltol
  6508                           	
  6509  0EBC                     ___fltol:	
  6510                           	opt	stack 5
  6511                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6512                           	line	47
  6513                           	
  6514  0EBC                     l8360:	
  6515  0EBC  1283               	bcf	status, 5	;RP0=0, select bank0
  6516  0EBD  1303               	bcf	status, 6	;RP1=0, select bank0
  6517  0EBE  0855               	movf	(___fltol@f1),w
  6518  0EBF  00D9               	movwf	(??___fltol+0)+0
  6519  0EC0  0856               	movf	(___fltol@f1+1),w
  6520  0EC1  00DA               	movwf	((??___fltol+0)+0+1)
  6521  0EC2  0857               	movf	(___fltol@f1+2),w
  6522  0EC3  00DB               	movwf	((??___fltol+0)+0+2)
  6523  0EC4  0858               	movf	(___fltol@f1+3),w
  6524  0EC5  00DC               	movwf	((??___fltol+0)+0+3)
  6525  0EC6  1003               	clrc
  6526  0EC7  0D5B               	rlf	(??___fltol+0)+2,w
  6527  0EC8  0D5C               	rlf	(??___fltol+0)+3,w
  6528  0EC9  00DD               	movwf	(??___fltol+4)+0
  6529  0ECA  085D               	movf	(??___fltol+4)+0,w
  6530  0ECB  00DF               	movwf	(___fltol@exp1)
  6531  0ECC  08DF               	movf	((___fltol@exp1)),f
  6532  0ECD  1D03               	skipz
  6533  0ECE  2ED0               	goto	u3931
  6534  0ECF  2ED1               	goto	u3930
  6535  0ED0                     u3931:
  6536  0ED0  2EDB               	goto	l8366
  6537  0ED1                     u3930:
  6538                           	line	48
  6539                           	
  6540  0ED1                     l8362:	
  6541  0ED1  3000               	movlw	0
  6542  0ED2  00D8               	movwf	(?___fltol+3)
  6543  0ED3  3000               	movlw	0
  6544  0ED4  00D7               	movwf	(?___fltol+2)
  6545  0ED5  3000               	movlw	0
  6546  0ED6  00D6               	movwf	(?___fltol+1)
  6547  0ED7  3000               	movlw	0
  6548  0ED8  00D5               	movwf	(?___fltol)
  6549                           
  6550  0ED9  2F57               	goto	l5753
  6551                           	
  6552  0EDA                     l8364:	
  6553  0EDA  2F57               	goto	l5753
  6554                           	
  6555  0EDB                     l5752:	
  6556                           	line	49
  6557                           	
  6558  0EDB                     l8366:	
  6559  0EDB  0855               	movf	(___fltol@f1),w
  6560  0EDC  00D9               	movwf	(??___fltol+0)+0
  6561  0EDD  0856               	movf	(___fltol@f1+1),w
  6562  0EDE  00DA               	movwf	((??___fltol+0)+0+1)
  6563  0EDF  0857               	movf	(___fltol@f1+2),w
  6564  0EE0  00DB               	movwf	((??___fltol+0)+0+2)
  6565  0EE1  0858               	movf	(___fltol@f1+3),w
  6566  0EE2  00DC               	movwf	((??___fltol+0)+0+3)
  6567  0EE3  301F               	movlw	01Fh
  6568  0EE4                     u3945:
  6569  0EE4  1003               	clrc
  6570  0EE5  0CDC               	rrf	(??___fltol+0)+3,f
  6571  0EE6  0CDB               	rrf	(??___fltol+0)+2,f
  6572  0EE7  0CDA               	rrf	(??___fltol+0)+1,f
  6573  0EE8  0CD9               	rrf	(??___fltol+0)+0,f
  6574  0EE9                     u3940:
  6575  0EE9  3EFF               	addlw	-1
  6576  0EEA  1D03               	skipz
  6577  0EEB  2EE4               	goto	u3945
  6578  0EEC  0859               	movf	0+(??___fltol+0)+0,w
  6579  0EED  00DD               	movwf	(??___fltol+4)+0
  6580  0EEE  085D               	movf	(??___fltol+4)+0,w
  6581  0EEF  00DE               	movwf	(___fltol@sign1)
  6582                           	line	50
  6583                           	
  6584  0EF0                     l8368:	
  6585  0EF0  17D7               	bsf	(___fltol@f1)+(23/8),(23)&7
  6586                           	line	51
  6587                           	
  6588  0EF1                     l8370:	
  6589  0EF1  30FF               	movlw	0FFh
  6590  0EF2  05D5               	andwf	(___fltol@f1),f
  6591  0EF3  30FF               	movlw	0FFh
  6592  0EF4  05D6               	andwf	(___fltol@f1+1),f
  6593  0EF5  30FF               	movlw	0FFh
  6594  0EF6  05D7               	andwf	(___fltol@f1+2),f
  6595  0EF7  3000               	movlw	0
  6596  0EF8  05D8               	andwf	(___fltol@f1+3),f
  6597                           	line	52
  6598                           	
  6599  0EF9                     l8372:	
  6600  0EF9  3096               	movlw	low(096h)
  6601  0EFA  02DF               	subwf	(___fltol@exp1),f
  6602                           	line	53
  6603                           	
  6604  0EFB                     l8374:	
  6605  0EFB  1FDF               	btfss	(___fltol@exp1),7
  6606  0EFC  2EFE               	goto	u3951
  6607  0EFD  2EFF               	goto	u3950
  6608  0EFE                     u3951:
  6609  0EFE  2F24               	goto	l8384
  6610  0EFF                     u3950:
  6611                           	line	54
  6612                           	
  6613  0EFF                     l8376:	
  6614  0EFF  085F               	movf	(___fltol@exp1),w
  6615  0F00  3A80               	xorlw	80h
  6616  0F01  3E97               	addlw	-((-23)^80h)
  6617  0F02  1803               	skipnc
  6618  0F03  2F05               	goto	u3961
  6619  0F04  2F06               	goto	u3960
  6620  0F05                     u3961:
  6621  0F05  2F11               	goto	l8382
  6622  0F06                     u3960:
  6623                           	line	55
  6624                           	
  6625  0F06                     l8378:	
  6626  0F06  3000               	movlw	0
  6627  0F07  00D8               	movwf	(?___fltol+3)
  6628  0F08  3000               	movlw	0
  6629  0F09  00D7               	movwf	(?___fltol+2)
  6630  0F0A  3000               	movlw	0
  6631  0F0B  00D6               	movwf	(?___fltol+1)
  6632  0F0C  3000               	movlw	0
  6633  0F0D  00D5               	movwf	(?___fltol)
  6634                           
  6635  0F0E  2F57               	goto	l5753
  6636                           	
  6637  0F0F                     l8380:	
  6638  0F0F  2F57               	goto	l5753
  6639                           	
  6640  0F10                     l5755:	
  6641  0F10  2F11               	goto	l8382
  6642                           	line	56
  6643                           	
  6644  0F11                     l5756:	
  6645                           	line	57
  6646                           	
  6647  0F11                     l8382:	
  6648  0F11  3001               	movlw	01h
  6649  0F12                     u3975:
  6650  0F12  1003               	clrc
  6651  0F13  0CD8               	rrf	(___fltol@f1+3),f
  6652  0F14  0CD7               	rrf	(___fltol@f1+2),f
  6653  0F15  0CD6               	rrf	(___fltol@f1+1),f
  6654  0F16  0CD5               	rrf	(___fltol@f1),f
  6655  0F17  3EFF               	addlw	-1
  6656  0F18  1D03               	skipz
  6657  0F19  2F12               	goto	u3975
  6658                           
  6659                           	line	58
  6660  0F1A  3001               	movlw	(01h)
  6661  0F1B  00D9               	movwf	(??___fltol+0)+0
  6662  0F1C  0859               	movf	(??___fltol+0)+0,w
  6663  0F1D  07DF               	addwf	(___fltol@exp1),f
  6664  0F1E  1D03               	btfss	status,2
  6665  0F1F  2F21               	goto	u3981
  6666  0F20  2F22               	goto	u3980
  6667  0F21                     u3981:
  6668  0F21  2F11               	goto	l8382
  6669  0F22                     u3980:
  6670  0F22  2F48               	goto	l8394
  6671                           	
  6672  0F23                     l5757:	
  6673                           	line	59
  6674  0F23  2F48               	goto	l8394
  6675                           	
  6676  0F24                     l5754:	
  6677                           	line	60
  6678                           	
  6679  0F24                     l8384:	
  6680  0F24  3020               	movlw	(020h)
  6681  0F25  025F               	subwf	(___fltol@exp1),w
  6682  0F26  1C03               	skipc
  6683  0F27  2F29               	goto	u3991
  6684  0F28  2F2A               	goto	u3990
  6685  0F29                     u3991:
  6686  0F29  2F41               	goto	l8392
  6687  0F2A                     u3990:
  6688                           	line	61
  6689                           	
  6690  0F2A                     l8386:	
  6691  0F2A  3000               	movlw	0
  6692  0F2B  00D8               	movwf	(?___fltol+3)
  6693  0F2C  3000               	movlw	0
  6694  0F2D  00D7               	movwf	(?___fltol+2)
  6695  0F2E  3000               	movlw	0
  6696  0F2F  00D6               	movwf	(?___fltol+1)
  6697  0F30  3000               	movlw	0
  6698  0F31  00D5               	movwf	(?___fltol)
  6699                           
  6700  0F32  2F57               	goto	l5753
  6701                           	
  6702  0F33                     l8388:	
  6703  0F33  2F57               	goto	l5753
  6704                           	
  6705  0F34                     l5759:	
  6706                           	line	62
  6707  0F34  2F41               	goto	l8392
  6708                           	
  6709  0F35                     l5761:	
  6710                           	line	63
  6711                           	
  6712  0F35                     l8390:	
  6713  0F35  3001               	movlw	01h
  6714  0F36  00D9               	movwf	(??___fltol+0)+0
  6715  0F37                     u4005:
  6716  0F37  1003               	clrc
  6717  0F38  0DD5               	rlf	(___fltol@f1),f
  6718  0F39  0DD6               	rlf	(___fltol@f1+1),f
  6719  0F3A  0DD7               	rlf	(___fltol@f1+2),f
  6720  0F3B  0DD8               	rlf	(___fltol@f1+3),f
  6721  0F3C  0BD9               	decfsz	(??___fltol+0)+0
  6722  0F3D  2F37               	goto	u4005
  6723                           	line	64
  6724  0F3E  3001               	movlw	low(01h)
  6725  0F3F  02DF               	subwf	(___fltol@exp1),f
  6726  0F40  2F41               	goto	l8392
  6727                           	line	65
  6728                           	
  6729  0F41                     l5760:	
  6730                           	line	62
  6731                           	
  6732  0F41                     l8392:	
  6733  0F41  08DF               	movf	(___fltol@exp1),f
  6734  0F42  1D03               	skipz
  6735  0F43  2F45               	goto	u4011
  6736  0F44  2F46               	goto	u4010
  6737  0F45                     u4011:
  6738  0F45  2F35               	goto	l8390
  6739  0F46                     u4010:
  6740  0F46  2F48               	goto	l8394
  6741                           	
  6742  0F47                     l5762:	
  6743  0F47  2F48               	goto	l8394
  6744                           	line	66
  6745                           	
  6746  0F48                     l5758:	
  6747                           	line	67
  6748                           	
  6749  0F48                     l8394:	
  6750  0F48  085E               	movf	(___fltol@sign1),w
  6751  0F49  1D03               	skipz
  6752  0F4A  2F4C               	goto	u4020
  6753  0F4B  2F57               	goto	l5763
  6754  0F4C                     u4020:
  6755                           	line	68
  6756                           	
  6757  0F4C                     l8396:	
  6758  0F4C  09D5               	comf	(___fltol@f1),f
  6759  0F4D  09D6               	comf	(___fltol@f1+1),f
  6760  0F4E  09D7               	comf	(___fltol@f1+2),f
  6761  0F4F  09D8               	comf	(___fltol@f1+3),f
  6762  0F50  0AD5               	incf	(___fltol@f1),f
  6763  0F51  1903               	skipnz
  6764  0F52  0AD6               	incf	(___fltol@f1+1),f
  6765  0F53  1903               	skipnz
  6766  0F54  0AD7               	incf	(___fltol@f1+2),f
  6767  0F55  1903               	skipnz
  6768  0F56  0AD8               	incf	(___fltol@f1+3),f
  6769                           	
  6770  0F57                     l5763:	
  6771                           	line	69
  6772                           	line	70
  6773                           	
  6774  0F57                     l5753:	
  6775  0F57  0008               	return
  6776                           	opt stack 0
  6777                           GLOBAL	__end_of___fltol
  6778  0F58                     	__end_of___fltol:
  6779                           	signat	___fltol,4220
  6780                           	global	___awtofl
  6781                           
  6782 ;; *************** function ___awtofl *****************
  6783 ;; Defined at:
  6784 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v1.10\sources\awtofl.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;  c               2   10[BANK0 ] int 
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;  f1              4    0        int 
  6789 ;;  sign            1   16[BANK0 ] unsigned char 
  6790 ;; Return value:  Size  Location     Type
  6791 ;;                  4   10[BANK0 ] unsigned char 
  6792 ;; Registers used:
  6793 ;;		wreg, status,2, status,0, pclath, cstack
  6794 ;; Tracked objects:
  6795 ;;		On entry : 0/0
  6796 ;;		On exit  : 0/0
  6797 ;;		Unchanged: 0/0
  6798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6799 ;;      Params:         0       4       0       0       0
  6800 ;;      Locals:         0       1       0       0       0
  6801 ;;      Temps:          0       2       0       0       0
  6802 ;;      Totals:         0       7       0       0       0
  6803 ;;Total ram usage:        7 bytes
  6804 ;; Hardware stack levels used:    1
  6805 ;; Hardware stack levels required when called:    2
  6806 ;; This function calls:
  6807 ;;		___flpack
  6808 ;; This function is called by:
  6809 ;;		_main
  6810 ;; This function uses a non-reentrant model
  6811 ;;
  6812                           psect	text752,local,class=CODE,delta=2,merge=1
  6813                           global __ptext752
  6814  0B0D                     __ptext752:	;psect for function ___awtofl
  6815                           psect	text752
  6816                           	file	"C:\Program Files\Microchip\xc8\v1.10\sources\awtofl.c"
  6817                           	line	32
  6818                           	global	__size_of___awtofl
  6819  002E                     	__size_of___awtofl	equ	__end_of___awtofl-___awtofl
  6820                           	
  6821  0B0D                     ___awtofl:	
  6822                           	opt	stack 5
  6823                           ; Regs used in ___awtofl: [wreg+status,2+status,0+pclath+cstack]
  6824                           	line	36
  6825                           	
  6826  0B0D                     l8398:	
  6827  0B0D  1283               	bcf	status, 5	;RP0=0, select bank0
  6828  0B0E  1303               	bcf	status, 6	;RP1=0, select bank0
  6829  0B0F  01B0               	clrf	(___awtofl@sign)
  6830                           	line	37
  6831  0B10  1FAB               	btfss	(___awtofl@c+1),7
  6832  0B11  2B13               	goto	u4031
  6833  0B12  2B14               	goto	u4030
  6834  0B13                     u4031:
  6835  0B13  2B1E               	goto	l8404
  6836  0B14                     u4030:
  6837                           	line	38
  6838                           	
  6839  0B14                     l8400:	
  6840  0B14  09AA               	comf	(___awtofl@c),f
  6841  0B15  09AB               	comf	(___awtofl@c+1),f
  6842  0B16  0AAA               	incf	(___awtofl@c),f
  6843  0B17  1903               	skipnz
  6844  0B18  0AAB               	incf	(___awtofl@c+1),f
  6845                           	line	39
  6846                           	
  6847  0B19                     l8402:	
  6848  0B19  3001               	movlw	(01h)
  6849  0B1A  00AE               	movwf	(??___awtofl+0)+0
  6850  0B1B  082E               	movf	(??___awtofl+0)+0,w
  6851  0B1C  07B0               	addwf	(___awtofl@sign),f
  6852  0B1D  2B1E               	goto	l8404
  6853                           	line	40
  6854                           	
  6855  0B1E                     l5773:	
  6856                           	line	41
  6857                           	
  6858  0B1E                     l8404:	
  6859  0B1E  082A               	movf	(___awtofl@c),w
  6860  0B1F  00A0               	movwf	(?___flpack)
  6861  0B20  082B               	movf	(___awtofl@c+1),w
  6862  0B21  00A1               	movwf	((?___flpack))+1
  6863  0B22  01A2               	clrf	2+((?___flpack))
  6864  0B23  01A3               	clrf	3+((?___flpack))
  6865  0B24  3096               	movlw	(096h)
  6866  0B25  00AE               	movwf	(??___awtofl+0)+0
  6867  0B26  082E               	movf	(??___awtofl+0)+0,w
  6868  0B27  00A4               	movwf	0+(?___flpack)+04h
  6869  0B28  0830               	movf	(___awtofl@sign),w
  6870  0B29  00AF               	movwf	(??___awtofl+1)+0
  6871  0B2A  082F               	movf	(??___awtofl+1)+0,w
  6872  0B2B  00A5               	movwf	0+(?___flpack)+05h
  6873  0B2C  158A  259D  158A   	fcall	___flpack
  6874  0B2F  1283               	bcf	status, 5	;RP0=0, select bank0
  6875  0B30  1303               	bcf	status, 6	;RP1=0, select bank0
  6876  0B31  0823               	movf	(3+(?___flpack)),w
  6877  0B32  00AD               	movwf	(?___awtofl+3)
  6878  0B33  0822               	movf	(2+(?___flpack)),w
  6879  0B34  00AC               	movwf	(?___awtofl+2)
  6880  0B35  0821               	movf	(1+(?___flpack)),w
  6881  0B36  00AB               	movwf	(?___awtofl+1)
  6882  0B37  0820               	movf	(0+(?___flpack)),w
  6883  0B38  00AA               	movwf	(?___awtofl)
  6884                           
  6885  0B39  2B3A               	goto	l5774
  6886                           	
  6887  0B3A                     l8406:	
  6888                           	line	42
  6889                           	
  6890  0B3A                     l5774:	
  6891  0B3A  0008               	return
  6892                           	opt stack 0
  6893                           GLOBAL	__end_of___awtofl
  6894  0B3B                     	__end_of___awtofl:
  6895                           	signat	___awtofl,4220
  6896                           	global	___flpack
  6897                           
  6898 ;; *************** function ___flpack *****************
  6899 ;; Defined at:
  6900 ;;		line 64 in file "C:\Program Files\Microchip\xc8\v1.10\sources\double.c"
  6901 ;; Parameters:    Size  Location     Type
  6902 ;;  arg             4    0[BANK0 ] unsigned long 
  6903 ;;  exp             1    4[BANK0 ] unsigned char 
  6904 ;;  sign            1    5[BANK0 ] unsigned char 
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;		None
  6907 ;; Return value:  Size  Location     Type
  6908 ;;                  4    0[BANK0 ] unsigned char 
  6909 ;; Registers used:
  6910 ;;		wreg, status,2, status,0
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/0
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6916 ;;      Params:         0       6       0       0       0
  6917 ;;      Locals:         0       0       0       0       0
  6918 ;;      Temps:          0       4       0       0       0
  6919 ;;      Totals:         0      10       0       0       0
  6920 ;;Total ram usage:       10 bytes
  6921 ;; Hardware stack levels used:    1
  6922 ;; Hardware stack levels required when called:    1
  6923 ;; This function calls:
  6924 ;;		Nothing
  6925 ;; This function is called by:
  6926 ;;		___fladd
  6927 ;;		___fldiv
  6928 ;;		___flmul
  6929 ;;		___awtofl
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           psect	text753,local,class=CODE,delta=2,merge=1
  6933                           global __ptext753
  6934  0D9D                     __ptext753:	;psect for function ___flpack
  6935                           psect	text753
  6936                           	file	"C:\Program Files\Microchip\xc8\v1.10\sources\double.c"
  6937                           	line	64
  6938                           	global	__size_of___flpack
  6939  008D                     	__size_of___flpack	equ	__end_of___flpack-___flpack
  6940                           	
  6941  0D9D                     ___flpack:	
  6942                           	opt	stack 4
  6943                           ; Regs used in ___flpack: [wreg+status,2+status,0]
  6944                           	line	65
  6945                           	
  6946  0D9D                     l8242:	
  6947  0D9D  1283               	bcf	status, 5	;RP0=0, select bank0
  6948  0D9E  1303               	bcf	status, 6	;RP1=0, select bank0
  6949  0D9F  0824               	movf	(___flpack@exp),w
  6950  0DA0  1D03               	skipz
  6951  0DA1  2DA3               	goto	u3600
  6952  0DA2  2DAC               	goto	l8246
  6953  0DA3                     u3600:
  6954                           	
  6955  0DA3                     l8244:	
  6956  0DA3  0823               	movf	(___flpack@arg+3),w
  6957  0DA4  0422               	iorwf	(___flpack@arg+2),w
  6958  0DA5  0421               	iorwf	(___flpack@arg+1),w
  6959  0DA6  0420               	iorwf	(___flpack@arg),w
  6960  0DA7  1D03               	skipz
  6961  0DA8  2DAA               	goto	u3611
  6962  0DA9  2DAB               	goto	u3610
  6963  0DAA                     u3611:
  6964  0DAA  2DC5               	goto	l8252
  6965  0DAB                     u3610:
  6966  0DAB  2DAC               	goto	l8246
  6967                           	
  6968  0DAC                     l5944:	
  6969                           	line	66
  6970                           	
  6971  0DAC                     l8246:	
  6972  0DAC  3000               	movlw	0x0
  6973  0DAD  00A3               	movwf	(?___flpack+3)
  6974  0DAE  3000               	movlw	0x0
  6975  0DAF  00A2               	movwf	(?___flpack+2)
  6976  0DB0  3000               	movlw	0x0
  6977  0DB1  00A1               	movwf	(?___flpack+1)
  6978  0DB2  3000               	movlw	0x0
  6979  0DB3  00A0               	movwf	(?___flpack)
  6980                           
  6981  0DB4  2E29               	goto	l5945
  6982                           	
  6983  0DB5                     l8248:	
  6984  0DB5  2E29               	goto	l5945
  6985                           	
  6986  0DB6                     l5942:	
  6987                           	line	67
  6988  0DB6  2DC5               	goto	l8252
  6989                           	
  6990  0DB7                     l5947:	
  6991                           	line	68
  6992                           	
  6993  0DB7                     l8250:	
  6994  0DB7  3001               	movlw	(01h)
  6995  0DB8  00A6               	movwf	(??___flpack+0)+0
  6996  0DB9  0826               	movf	(??___flpack+0)+0,w
  6997  0DBA  07A4               	addwf	(___flpack@exp),f
  6998                           	line	69
  6999  0DBB  3001               	movlw	01h
  7000  0DBC                     u3625:
  7001  0DBC  1003               	clrc
  7002  0DBD  0CA3               	rrf	(___flpack@arg+3),f
  7003  0DBE  0CA2               	rrf	(___flpack@arg+2),f
  7004  0DBF  0CA1               	rrf	(___flpack@arg+1),f
  7005  0DC0  0CA0               	rrf	(___flpack@arg),f
  7006  0DC1  3EFF               	addlw	-1
  7007  0DC2  1D03               	skipz
  7008  0DC3  2DBC               	goto	u3625
  7009                           
  7010  0DC4  2DC5               	goto	l8252
  7011                           	line	70
  7012                           	
  7013  0DC5                     l5946:	
  7014                           	line	67
  7015                           	
  7016  0DC5                     l8252:	
  7017  0DC5  30FE               	movlw	high highword(-33554432)
  7018  0DC6  0523               	andwf	(___flpack@arg+3),w
  7019  0DC7  1D03               	btfss	status,2
  7020  0DC8  2DCA               	goto	u3631
  7021  0DC9  2DCB               	goto	u3630
  7022  0DCA                     u3631:
  7023  0DCA  2DB7               	goto	l8250
  7024  0DCB                     u3630:
  7025  0DCB  2DE8               	goto	l5949
  7026                           	
  7027  0DCC                     l5948:	
  7028                           	line	71
  7029  0DCC  2DE8               	goto	l5949
  7030                           	
  7031  0DCD                     l5950:	
  7032                           	line	72
  7033                           	
  7034  0DCD                     l8254:	
  7035  0DCD  3001               	movlw	(01h)
  7036  0DCE  00A6               	movwf	(??___flpack+0)+0
  7037  0DCF  0826               	movf	(??___flpack+0)+0,w
  7038  0DD0  07A4               	addwf	(___flpack@exp),f
  7039                           	line	73
  7040                           	
  7041  0DD1                     l8256:	
  7042  0DD1  3001               	movlw	01h
  7043  0DD2  07A0               	addwf	(___flpack@arg),f
  7044  0DD3  3000               	movlw	0
  7045  0DD4  1803               	skipnc
  7046  0DD5  3001               movlw 1
  7047  0DD6  07A1               	addwf	(___flpack@arg+1),f
  7048  0DD7  3000               	movlw	0
  7049  0DD8  1803               	skipnc
  7050  0DD9  3001               movlw 1
  7051  0DDA  07A2               	addwf	(___flpack@arg+2),f
  7052  0DDB  3000               	movlw	0
  7053  0DDC  1803               	skipnc
  7054  0DDD  3001               movlw 1
  7055  0DDE  07A3               	addwf	(___flpack@arg+3),f
  7056                           	line	74
  7057                           	
  7058  0DDF                     l8258:	
  7059  0DDF  3001               	movlw	01h
  7060  0DE0                     u3645:
  7061  0DE0  1003               	clrc
  7062  0DE1  0CA3               	rrf	(___flpack@arg+3),f
  7063  0DE2  0CA2               	rrf	(___flpack@arg+2),f
  7064  0DE3  0CA1               	rrf	(___flpack@arg+1),f
  7065  0DE4  0CA0               	rrf	(___flpack@arg),f
  7066  0DE5  3EFF               	addlw	-1
  7067  0DE6  1D03               	skipz
  7068  0DE7  2DE0               	goto	u3645
  7069                           
  7070                           	line	75
  7071                           	
  7072  0DE8                     l5949:	
  7073                           	line	71
  7074  0DE8  30FF               	movlw	high highword(-16777216)
  7075  0DE9  0523               	andwf	(___flpack@arg+3),w
  7076  0DEA  1D03               	btfss	status,2
  7077  0DEB  2DED               	goto	u3651
  7078  0DEC  2DEE               	goto	u3650
  7079  0DED                     u3651:
  7080  0DED  2DCD               	goto	l8254
  7081  0DEE                     u3650:
  7082  0DEE  2DFC               	goto	l8262
  7083                           	
  7084  0DEF                     l5951:	
  7085                           	line	76
  7086  0DEF  2DFC               	goto	l8262
  7087                           	
  7088  0DF0                     l5953:	
  7089                           	line	77
  7090                           	
  7091  0DF0                     l8260:	
  7092  0DF0  3001               	movlw	low(01h)
  7093  0DF1  02A4               	subwf	(___flpack@exp),f
  7094                           	line	78
  7095  0DF2  3001               	movlw	01h
  7096  0DF3  00A6               	movwf	(??___flpack+0)+0
  7097  0DF4                     u3665:
  7098  0DF4  1003               	clrc
  7099  0DF5  0DA0               	rlf	(___flpack@arg),f
  7100  0DF6  0DA1               	rlf	(___flpack@arg+1),f
  7101  0DF7  0DA2               	rlf	(___flpack@arg+2),f
  7102  0DF8  0DA3               	rlf	(___flpack@arg+3),f
  7103  0DF9  0BA6               	decfsz	(??___flpack+0)+0
  7104  0DFA  2DF4               	goto	u3665
  7105  0DFB  2DFC               	goto	l8262
  7106                           	line	79
  7107                           	
  7108  0DFC                     l5952:	
  7109                           	line	76
  7110                           	
  7111  0DFC                     l8262:	
  7112  0DFC  1FA2               	btfss	(___flpack@arg+2),(23)&7
  7113  0DFD  2DFF               	goto	u3671
  7114  0DFE  2E00               	goto	u3670
  7115  0DFF                     u3671:
  7116  0DFF  2DF0               	goto	l8260
  7117  0E00                     u3670:
  7118                           	
  7119  0E00                     l5954:	
  7120                           	line	80
  7121  0E00  1824               	btfsc	(___flpack@exp),(0)&7
  7122  0E01  2E03               	goto	u3681
  7123  0E02  2E04               	goto	u3680
  7124  0E03                     u3681:
  7125  0E03  2E0C               	goto	l5955
  7126  0E04                     u3680:
  7127                           	line	81
  7128                           	
  7129  0E04                     l8264:	
  7130  0E04  30FF               	movlw	0FFh
  7131  0E05  05A0               	andwf	(___flpack@arg),f
  7132  0E06  30FF               	movlw	0FFh
  7133  0E07  05A1               	andwf	(___flpack@arg+1),f
  7134  0E08  307F               	movlw	07Fh
  7135  0E09  05A2               	andwf	(___flpack@arg+2),f
  7136  0E0A  30FF               	movlw	0FFh
  7137  0E0B  05A3               	andwf	(___flpack@arg+3),f
  7138                           	
  7139  0E0C                     l5955:	
  7140                           	line	82
  7141  0E0C  1003               	clrc
  7142  0E0D  0CA4               	rrf	(___flpack@exp),f
  7143                           
  7144                           	line	83
  7145                           	
  7146  0E0E                     l8266:	
  7147  0E0E  0824               	movf	(___flpack@exp),w
  7148  0E0F  00A6               	movwf	(??___flpack+0)+0
  7149  0E10  01A7               	clrf	((??___flpack+0)+0+1)
  7150  0E11  01A8               	clrf	((??___flpack+0)+0+2)
  7151  0E12  01A9               	clrf	((??___flpack+0)+0+3)
  7152  0E13  3018               	movlw	018h
  7153  0E14                     u3695:
  7154  0E14  1003               	clrc
  7155  0E15  0DA6               	rlf	(??___flpack+0)+0,f
  7156  0E16  0DA7               	rlf	(??___flpack+0)+1,f
  7157  0E17  0DA8               	rlf	(??___flpack+0)+2,f
  7158  0E18  0DA9               	rlf	(??___flpack+0)+3,f
  7159  0E19                     u3690:
  7160  0E19  3EFF               	addlw	-1
  7161  0E1A  1D03               	skipz
  7162  0E1B  2E14               	goto	u3695
  7163  0E1C  0826               	movf	0+(??___flpack+0)+0,w
  7164  0E1D  04A0               	iorwf	(___flpack@arg),f
  7165  0E1E  0827               	movf	1+(??___flpack+0)+0,w
  7166  0E1F  04A1               	iorwf	(___flpack@arg+1),f
  7167  0E20  0828               	movf	2+(??___flpack+0)+0,w
  7168  0E21  04A2               	iorwf	(___flpack@arg+2),f
  7169  0E22  0829               	movf	3+(??___flpack+0)+0,w
  7170  0E23  04A3               	iorwf	(___flpack@arg+3),f
  7171                           	line	84
  7172                           	
  7173  0E24                     l8268:	
  7174  0E24  0825               	movf	(___flpack@sign),w
  7175  0E25  1D03               	skipz
  7176  0E26  2E28               	goto	u3700
  7177  0E27  2E29               	goto	l5956
  7178  0E28                     u3700:
  7179                           	line	85
  7180                           	
  7181  0E28                     l8270:	
  7182  0E28  17A3               	bsf	(___flpack@arg)+(31/8),(31)&7
  7183                           	
  7184  0E29                     l5956:	
  7185                           	line	86
  7186                           	line	87
  7187                           	
  7188  0E29                     l5945:	
  7189  0E29  0008               	return
  7190                           	opt stack 0
  7191                           GLOBAL	__end_of___flpack
  7192  0E2A                     	__end_of___flpack:
  7193                           	signat	___flpack,12412
  7194                           	global	___flge
  7195                           
  7196 ;; *************** function ___flge *****************
  7197 ;; Defined at:
  7198 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.10\sources\flge.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;  ff1             4    0[BANK0 ] unsigned char 
  7201 ;;  ff2             4    4[BANK0 ] unsigned char 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;		None
  7204 ;; Return value:  Size  Location     Type
  7205 ;;		None               void
  7206 ;; Registers used:
  7207 ;;		wreg, status,2, status,0
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/0
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7213 ;;      Params:         0       8       0       0       0
  7214 ;;      Locals:         0       0       0       0       0
  7215 ;;      Temps:          0       8       0       0       0
  7216 ;;      Totals:         0      16       0       0       0
  7217 ;;Total ram usage:       16 bytes
  7218 ;; Hardware stack levels used:    1
  7219 ;; Hardware stack levels required when called:    1
  7220 ;; This function calls:
  7221 ;;		Nothing
  7222 ;; This function is called by:
  7223 ;;		_main
  7224 ;;		_DoubletoAscii
  7225 ;; This function uses a non-reentrant model
  7226 ;;
  7227                           psect	text754,local,class=CODE,delta=2,merge=1
  7228                           global __ptext754
  7229  0776                     __ptext754:	;psect for function ___flge
  7230                           psect	text754
  7231                           	file	"C:\Program Files\Microchip\xc8\v1.10\sources\flge.c"
  7232                           	line	5
  7233                           	global	__size_of___flge
  7234  008A                     	__size_of___flge	equ	__end_of___flge-___flge
  7235                           	
  7236  0776                     ___flge:	
  7237                           	opt	stack 5
  7238                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7239                           	line	6
  7240                           	
  7241  0776                     l8408:	
  7242  0776  1283               	bcf	status, 5	;RP0=0, select bank0
  7243  0777  1303               	bcf	status, 6	;RP1=0, select bank0
  7244  0778  1FA3               	btfss	(___flge@ff1+3),(31)&7
  7245  0779  2F7B               	goto	u4041
  7246  077A  2F7C               	goto	u4040
  7247  077B                     u4041:
  7248  077B  2FAE               	goto	l8412
  7249  077C                     u4040:
  7250                           	line	7
  7251                           	
  7252  077C                     l8410:	
  7253  077C  3000               	movlw	0
  7254  077D  00A8               	movwf	((??___flge+0)+0)
  7255  077E  3000               	movlw	0
  7256  077F  00A9               	movwf	((??___flge+0)+0+1)
  7257  0780  3000               	movlw	0
  7258  0781  00AA               	movwf	((??___flge+0)+0+2)
  7259  0782  3080               	movlw	080h
  7260  0783  00AB               	movwf	((??___flge+0)+0+3)
  7261  0784  0920               	comf	(___flge@ff1),w
  7262  0785  00AC               	movwf	(??___flge+4)+0
  7263  0786  0921               	comf	(___flge@ff1+1),w
  7264  0787  00AD               	movwf	((??___flge+4)+0+1)
  7265  0788  0922               	comf	(___flge@ff1+2),w
  7266  0789  00AE               	movwf	((??___flge+4)+0+2)
  7267  078A  0923               	comf	(___flge@ff1+3),w
  7268  078B  00AF               	movwf	((??___flge+4)+0+3)
  7269  078C  0AAC               	incf	(??___flge+4)+0,f
  7270  078D  1903               	skipnz
  7271  078E  0AAD               	incf	((??___flge+4)+0+1),f
  7272  078F  1903               	skipnz
  7273  0790  0AAE               	incf	((??___flge+4)+0+2),f
  7274  0791  1903               	skipnz
  7275  0792  0AAF               	incf	((??___flge+4)+0+3),f
  7276  0793  082C               	movf	0+(??___flge+4)+0,w
  7277  0794  07A8               	addwf	(??___flge+0)+0,f
  7278  0795  082D               	movf	1+(??___flge+4)+0,w
  7279  0796  1803               	skipnc
  7280  0797  0F2D               	incfsz	1+(??___flge+4)+0,w
  7281  0798  2F9A               	goto	u4050
  7282  0799  2F9B               	goto	u4051
  7283  079A                     u4050:
  7284  079A  07A9               	addwf	(??___flge+0)+1,f
  7285  079B                     u4051:
  7286  079B  082E               	movf	2+(??___flge+4)+0,w
  7287  079C  1803               	skipnc
  7288  079D  0F2E               	incfsz	2+(??___flge+4)+0,w
  7289  079E  2FA0               	goto	u4052
  7290  079F  2FA1               	goto	u4053
  7291  07A0                     u4052:
  7292  07A0  07AA               	addwf	(??___flge+0)+2,f
  7293  07A1                     u4053:
  7294  07A1  082F               	movf	3+(??___flge+4)+0,w
  7295  07A2  1803               	skipnc
  7296  07A3  0A2F               	incf	3+(??___flge+4)+0,w
  7297  07A4  07AB               	addwf	(??___flge+0)+3,f
  7298  07A5  082B               	movf	3+(??___flge+0)+0,w
  7299  07A6  00A3               	movwf	(___flge@ff1+3)
  7300  07A7  082A               	movf	2+(??___flge+0)+0,w
  7301  07A8  00A2               	movwf	(___flge@ff1+2)
  7302  07A9  0829               	movf	1+(??___flge+0)+0,w
  7303  07AA  00A1               	movwf	(___flge@ff1+1)
  7304  07AB  0828               	movf	0+(??___flge+0)+0,w
  7305  07AC  00A0               	movwf	(___flge@ff1)
  7306                           
  7307  07AD  2FAE               	goto	l8412
  7308                           	
  7309  07AE                     l5777:	
  7310                           	line	8
  7311                           	
  7312  07AE                     l8412:	
  7313  07AE  1FA7               	btfss	(___flge@ff2+3),(31)&7
  7314  07AF  2FB1               	goto	u4061
  7315  07B0  2FB2               	goto	u4060
  7316  07B1                     u4061:
  7317  07B1  2FE4               	goto	l8416
  7318  07B2                     u4060:
  7319                           	line	9
  7320                           	
  7321  07B2                     l8414:	
  7322  07B2  3000               	movlw	0
  7323  07B3  00A8               	movwf	((??___flge+0)+0)
  7324  07B4  3000               	movlw	0
  7325  07B5  00A9               	movwf	((??___flge+0)+0+1)
  7326  07B6  3000               	movlw	0
  7327  07B7  00AA               	movwf	((??___flge+0)+0+2)
  7328  07B8  3080               	movlw	080h
  7329  07B9  00AB               	movwf	((??___flge+0)+0+3)
  7330  07BA  0924               	comf	(___flge@ff2),w
  7331  07BB  00AC               	movwf	(??___flge+4)+0
  7332  07BC  0925               	comf	(___flge@ff2+1),w
  7333  07BD  00AD               	movwf	((??___flge+4)+0+1)
  7334  07BE  0926               	comf	(___flge@ff2+2),w
  7335  07BF  00AE               	movwf	((??___flge+4)+0+2)
  7336  07C0  0927               	comf	(___flge@ff2+3),w
  7337  07C1  00AF               	movwf	((??___flge+4)+0+3)
  7338  07C2  0AAC               	incf	(??___flge+4)+0,f
  7339  07C3  1903               	skipnz
  7340  07C4  0AAD               	incf	((??___flge+4)+0+1),f
  7341  07C5  1903               	skipnz
  7342  07C6  0AAE               	incf	((??___flge+4)+0+2),f
  7343  07C7  1903               	skipnz
  7344  07C8  0AAF               	incf	((??___flge+4)+0+3),f
  7345  07C9  082C               	movf	0+(??___flge+4)+0,w
  7346  07CA  07A8               	addwf	(??___flge+0)+0,f
  7347  07CB  082D               	movf	1+(??___flge+4)+0,w
  7348  07CC  1803               	skipnc
  7349  07CD  0F2D               	incfsz	1+(??___flge+4)+0,w
  7350  07CE  2FD0               	goto	u4070
  7351  07CF  2FD1               	goto	u4071
  7352  07D0                     u4070:
  7353  07D0  07A9               	addwf	(??___flge+0)+1,f
  7354  07D1                     u4071:
  7355  07D1  082E               	movf	2+(??___flge+4)+0,w
  7356  07D2  1803               	skipnc
  7357  07D3  0F2E               	incfsz	2+(??___flge+4)+0,w
  7358  07D4  2FD6               	goto	u4072
  7359  07D5  2FD7               	goto	u4073
  7360  07D6                     u4072:
  7361  07D6  07AA               	addwf	(??___flge+0)+2,f
  7362  07D7                     u4073:
  7363  07D7  082F               	movf	3+(??___flge+4)+0,w
  7364  07D8  1803               	skipnc
  7365  07D9  0A2F               	incf	3+(??___flge+4)+0,w
  7366  07DA  07AB               	addwf	(??___flge+0)+3,f
  7367  07DB  082B               	movf	3+(??___flge+0)+0,w
  7368  07DC  00A7               	movwf	(___flge@ff2+3)
  7369  07DD  082A               	movf	2+(??___flge+0)+0,w
  7370  07DE  00A6               	movwf	(___flge@ff2+2)
  7371  07DF  0829               	movf	1+(??___flge+0)+0,w
  7372  07E0  00A5               	movwf	(___flge@ff2+1)
  7373  07E1  0828               	movf	0+(??___flge+0)+0,w
  7374  07E2  00A4               	movwf	(___flge@ff2)
  7375                           
  7376  07E3  2FE4               	goto	l8416
  7377                           	
  7378  07E4                     l5778:	
  7379                           	line	10
  7380                           	
  7381  07E4                     l8416:	
  7382  07E4  3080               	movlw	080h
  7383  07E5  06A3               	xorwf	(___flge@ff1+3),f
  7384                           	line	11
  7385                           	
  7386  07E6                     l8418:	
  7387  07E6  3080               	movlw	080h
  7388  07E7  06A7               	xorwf	(___flge@ff2+3),f
  7389                           	line	12
  7390                           	
  7391  07E8                     l8420:	
  7392  07E8  0827               	movf	(___flge@ff2+3),w
  7393  07E9  0223               	subwf	(___flge@ff1+3),w
  7394  07EA  1D03               	skipz
  7395  07EB  2FF6               	goto	u4085
  7396  07EC  0826               	movf	(___flge@ff2+2),w
  7397  07ED  0222               	subwf	(___flge@ff1+2),w
  7398  07EE  1D03               	skipz
  7399  07EF  2FF6               	goto	u4085
  7400  07F0  0825               	movf	(___flge@ff2+1),w
  7401  07F1  0221               	subwf	(___flge@ff1+1),w
  7402  07F2  1D03               	skipz
  7403  07F3  2FF6               	goto	u4085
  7404  07F4  0824               	movf	(___flge@ff2),w
  7405  07F5  0220               	subwf	(___flge@ff1),w
  7406  07F6                     u4085:
  7407  07F6  1803               	skipnc
  7408  07F7  2FF9               	goto	u4081
  7409  07F8  2FFA               	goto	u4080
  7410  07F9                     u4081:
  7411  07F9  2FFC               	goto	l8424
  7412  07FA                     u4080:
  7413                           	
  7414  07FA                     l8422:	
  7415  07FA  1003               	clrc
  7416                           	
  7417  07FB  2FFF               	goto	l5779
  7418                           	
  7419  07FC                     l7820:	
  7420                           	
  7421  07FC                     l8424:	
  7422  07FC  1403               	setc
  7423                           	
  7424  07FD  2FFF               	goto	l5779
  7425                           	
  7426  07FE                     l7822:	
  7427  07FE  2FFF               	goto	l5779
  7428                           	
  7429  07FF                     l8426:	
  7430                           	line	13
  7431                           	
  7432  07FF                     l5779:	
  7433  07FF  0008               	return
  7434                           	opt stack 0
  7435                           GLOBAL	__end_of___flge
  7436  0800                     	__end_of___flge:
  7437                           	signat	___flge,8312
  7438                           	global	___almod
  7439                           
  7440 ;; *************** function ___almod *****************
  7441 ;; Defined at:
  7442 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.10\sources\almod.c"
  7443 ;; Parameters:    Size  Location     Type
  7444 ;;  divisor         4   24[BANK0 ] long 
  7445 ;;  dividend        4   28[BANK0 ] long 
  7446 ;; Auto vars:     Size  Location     Type
  7447 ;;  sign            1   34[BANK0 ] unsigned char 
  7448 ;;  counter         1   33[BANK0 ] unsigned char 
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  4   24[BANK0 ] long 
  7451 ;; Registers used:
  7452 ;;		wreg, status,2, status,0
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7458 ;;      Params:         0       8       0       0       0
  7459 ;;      Locals:         0       2       0       0       0
  7460 ;;      Temps:          0       1       0       0       0
  7461 ;;      Totals:         0      11       0       0       0
  7462 ;;Total ram usage:       11 bytes
  7463 ;; Hardware stack levels used:    1
  7464 ;; Hardware stack levels required when called:    1
  7465 ;; This function calls:
  7466 ;;		Nothing
  7467 ;; This function is called by:
  7468 ;;		_DoubletoAscii
  7469 ;;		_InttoAscii
  7470 ;; This function uses a non-reentrant model
  7471 ;;
  7472                           psect	text755,local,class=CODE,delta=2,merge=1
  7473                           global __ptext755
  7474  0E2A                     __ptext755:	;psect for function ___almod
  7475                           psect	text755
  7476                           	file	"C:\Program Files\Microchip\xc8\v1.10\sources\almod.c"
  7477                           	line	5
  7478                           	global	__size_of___almod
  7479  0092                     	__size_of___almod	equ	__end_of___almod-___almod
  7480                           	
  7481  0E2A                     ___almod:	
  7482                           	opt	stack 5
  7483                           ; Regs used in ___almod: [wreg+status,2+status,0]
  7484                           	line	8
  7485                           	
  7486  0E2A                     l8428:	
  7487  0E2A  1283               	bcf	status, 5	;RP0=0, select bank0
  7488  0E2B  1303               	bcf	status, 6	;RP1=0, select bank0
  7489  0E2C  01C2               	clrf	(___almod@sign)
  7490                           	line	9
  7491  0E2D  1FBF               	btfss	(___almod@dividend+3),7
  7492  0E2E  2E30               	goto	u4091
  7493  0E2F  2E31               	goto	u4090
  7494  0E30                     u4091:
  7495  0E30  2E40               	goto	l8434
  7496  0E31                     u4090:
  7497                           	line	10
  7498                           	
  7499  0E31                     l8430:	
  7500  0E31  09BC               	comf	(___almod@dividend),f
  7501  0E32  09BD               	comf	(___almod@dividend+1),f
  7502  0E33  09BE               	comf	(___almod@dividend+2),f
  7503  0E34  09BF               	comf	(___almod@dividend+3),f
  7504  0E35  0ABC               	incf	(___almod@dividend),f
  7505  0E36  1903               	skipnz
  7506  0E37  0ABD               	incf	(___almod@dividend+1),f
  7507  0E38  1903               	skipnz
  7508  0E39  0ABE               	incf	(___almod@dividend+2),f
  7509  0E3A  1903               	skipnz
  7510  0E3B  0ABF               	incf	(___almod@dividend+3),f
  7511                           	line	11
  7512                           	
  7513  0E3C                     l8432:	
  7514  0E3C  01C2               	clrf	(___almod@sign)
  7515  0E3D  1403               	bsf	status,0
  7516  0E3E  0DC2               	rlf	(___almod@sign),f
  7517  0E3F  2E40               	goto	l8434
  7518                           	line	12
  7519                           	
  7520  0E40                     l5792:	
  7521                           	line	13
  7522                           	
  7523  0E40                     l8434:	
  7524  0E40  1FBB               	btfss	(___almod@divisor+3),7
  7525  0E41  2E43               	goto	u4101
  7526  0E42  2E44               	goto	u4100
  7527  0E43                     u4101:
  7528  0E43  2E50               	goto	l8438
  7529  0E44                     u4100:
  7530                           	line	14
  7531                           	
  7532  0E44                     l8436:	
  7533  0E44  09B8               	comf	(___almod@divisor),f
  7534  0E45  09B9               	comf	(___almod@divisor+1),f
  7535  0E46  09BA               	comf	(___almod@divisor+2),f
  7536  0E47  09BB               	comf	(___almod@divisor+3),f
  7537  0E48  0AB8               	incf	(___almod@divisor),f
  7538  0E49  1903               	skipnz
  7539  0E4A  0AB9               	incf	(___almod@divisor+1),f
  7540  0E4B  1903               	skipnz
  7541  0E4C  0ABA               	incf	(___almod@divisor+2),f
  7542  0E4D  1903               	skipnz
  7543  0E4E  0ABB               	incf	(___almod@divisor+3),f
  7544  0E4F  2E50               	goto	l8438
  7545                           	
  7546  0E50                     l5793:	
  7547                           	line	15
  7548                           	
  7549  0E50                     l8438:	
  7550  0E50  083B               	movf	(___almod@divisor+3),w
  7551  0E51  043A               	iorwf	(___almod@divisor+2),w
  7552  0E52  0439               	iorwf	(___almod@divisor+1),w
  7553  0E53  0438               	iorwf	(___almod@divisor),w
  7554  0E54  1903               	skipnz
  7555  0E55  2E57               	goto	u4111
  7556  0E56  2E58               	goto	u4110
  7557  0E57                     u4111:
  7558  0E57  2EA2               	goto	l8454
  7559  0E58                     u4110:
  7560                           	line	16
  7561                           	
  7562  0E58                     l8440:	
  7563  0E58  01C1               	clrf	(___almod@counter)
  7564  0E59  1403               	bsf	status,0
  7565  0E5A  0DC1               	rlf	(___almod@counter),f
  7566                           	line	17
  7567  0E5B  2E6A               	goto	l8444
  7568                           	
  7569  0E5C                     l5796:	
  7570                           	line	18
  7571                           	
  7572  0E5C                     l8442:	
  7573  0E5C  3001               	movlw	01h
  7574  0E5D  00C0               	movwf	(??___almod+0)+0
  7575  0E5E                     u4125:
  7576  0E5E  1003               	clrc
  7577  0E5F  0DB8               	rlf	(___almod@divisor),f
  7578  0E60  0DB9               	rlf	(___almod@divisor+1),f
  7579  0E61  0DBA               	rlf	(___almod@divisor+2),f
  7580  0E62  0DBB               	rlf	(___almod@divisor+3),f
  7581  0E63  0BC0               	decfsz	(??___almod+0)+0
  7582  0E64  2E5E               	goto	u4125
  7583                           	line	19
  7584  0E65  3001               	movlw	(01h)
  7585  0E66  00C0               	movwf	(??___almod+0)+0
  7586  0E67  0840               	movf	(??___almod+0)+0,w
  7587  0E68  07C1               	addwf	(___almod@counter),f
  7588  0E69  2E6A               	goto	l8444
  7589                           	line	20
  7590                           	
  7591  0E6A                     l5795:	
  7592                           	line	17
  7593                           	
  7594  0E6A                     l8444:	
  7595  0E6A  1FBB               	btfss	(___almod@divisor+3),(31)&7
  7596  0E6B  2E6D               	goto	u4131
  7597  0E6C  2E6E               	goto	u4130
  7598  0E6D                     u4131:
  7599  0E6D  2E5C               	goto	l8442
  7600  0E6E                     u4130:
  7601  0E6E  2E70               	goto	l8446
  7602                           	
  7603  0E6F                     l5797:	
  7604  0E6F  2E70               	goto	l8446
  7605                           	line	21
  7606                           	
  7607  0E70                     l5798:	
  7608                           	line	22
  7609                           	
  7610  0E70                     l8446:	
  7611  0E70  083B               	movf	(___almod@divisor+3),w
  7612  0E71  023F               	subwf	(___almod@dividend+3),w
  7613  0E72  1D03               	skipz
  7614  0E73  2E7E               	goto	u4145
  7615  0E74  083A               	movf	(___almod@divisor+2),w
  7616  0E75  023E               	subwf	(___almod@dividend+2),w
  7617  0E76  1D03               	skipz
  7618  0E77  2E7E               	goto	u4145
  7619  0E78  0839               	movf	(___almod@divisor+1),w
  7620  0E79  023D               	subwf	(___almod@dividend+1),w
  7621  0E7A  1D03               	skipz
  7622  0E7B  2E7E               	goto	u4145
  7623  0E7C  0838               	movf	(___almod@divisor),w
  7624  0E7D  023C               	subwf	(___almod@dividend),w
  7625  0E7E                     u4145:
  7626  0E7E  1C03               	skipc
  7627  0E7F  2E81               	goto	u4141
  7628  0E80  2E82               	goto	u4140
  7629  0E81                     u4141:
  7630  0E81  2E91               	goto	l8450
  7631  0E82                     u4140:
  7632                           	line	23
  7633                           	
  7634  0E82                     l8448:	
  7635  0E82  0838               	movf	(___almod@divisor),w
  7636  0E83  02BC               	subwf	(___almod@dividend),f
  7637  0E84  0839               	movf	(___almod@divisor+1),w
  7638  0E85  1C03               	skipc
  7639  0E86  0F39               	incfsz	(___almod@divisor+1),w
  7640  0E87  02BD               	subwf	(___almod@dividend+1),f
  7641  0E88  083A               	movf	(___almod@divisor+2),w
  7642  0E89  1C03               	skipc
  7643  0E8A  0F3A               	incfsz	(___almod@divisor+2),w
  7644  0E8B  02BE               	subwf	(___almod@dividend+2),f
  7645  0E8C  083B               	movf	(___almod@divisor+3),w
  7646  0E8D  1C03               	skipc
  7647  0E8E  0F3B               	incfsz	(___almod@divisor+3),w
  7648  0E8F  02BF               	subwf	(___almod@dividend+3),f
  7649  0E90  2E91               	goto	l8450
  7650                           	
  7651  0E91                     l5799:	
  7652                           	line	24
  7653                           	
  7654  0E91                     l8450:	
  7655  0E91  3001               	movlw	01h
  7656  0E92                     u4155:
  7657  0E92  1003               	clrc
  7658  0E93  0CBB               	rrf	(___almod@divisor+3),f
  7659  0E94  0CBA               	rrf	(___almod@divisor+2),f
  7660  0E95  0CB9               	rrf	(___almod@divisor+1),f
  7661  0E96  0CB8               	rrf	(___almod@divisor),f
  7662  0E97  3EFF               	addlw	-1
  7663  0E98  1D03               	skipz
  7664  0E99  2E92               	goto	u4155
  7665                           
  7666                           	line	25
  7667                           	
  7668  0E9A                     l8452:	
  7669  0E9A  3001               	movlw	low(01h)
  7670  0E9B  02C1               	subwf	(___almod@counter),f
  7671  0E9C  1D03               	btfss	status,2
  7672  0E9D  2E9F               	goto	u4161
  7673  0E9E  2EA0               	goto	u4160
  7674  0E9F                     u4161:
  7675  0E9F  2E70               	goto	l8446
  7676  0EA0                     u4160:
  7677  0EA0  2EA2               	goto	l8454
  7678                           	
  7679  0EA1                     l5800:	
  7680  0EA1  2EA2               	goto	l8454
  7681                           	line	26
  7682                           	
  7683  0EA2                     l5794:	
  7684                           	line	27
  7685                           	
  7686  0EA2                     l8454:	
  7687  0EA2  0842               	movf	(___almod@sign),w
  7688  0EA3  1D03               	skipz
  7689  0EA4  2EA6               	goto	u4170
  7690  0EA5  2EB2               	goto	l8458
  7691  0EA6                     u4170:
  7692                           	line	28
  7693                           	
  7694  0EA6                     l8456:	
  7695  0EA6  09BC               	comf	(___almod@dividend),f
  7696  0EA7  09BD               	comf	(___almod@dividend+1),f
  7697  0EA8  09BE               	comf	(___almod@dividend+2),f
  7698  0EA9  09BF               	comf	(___almod@dividend+3),f
  7699  0EAA  0ABC               	incf	(___almod@dividend),f
  7700  0EAB  1903               	skipnz
  7701  0EAC  0ABD               	incf	(___almod@dividend+1),f
  7702  0EAD  1903               	skipnz
  7703  0EAE  0ABE               	incf	(___almod@dividend+2),f
  7704  0EAF  1903               	skipnz
  7705  0EB0  0ABF               	incf	(___almod@dividend+3),f
  7706  0EB1  2EB2               	goto	l8458
  7707                           	
  7708  0EB2                     l5801:	
  7709                           	line	29
  7710                           	
  7711  0EB2                     l8458:	
  7712  0EB2  083F               	movf	(___almod@dividend+3),w
  7713  0EB3  00BB               	movwf	(?___almod+3)
  7714  0EB4  083E               	movf	(___almod@dividend+2),w
  7715  0EB5  00BA               	movwf	(?___almod+2)
  7716  0EB6  083D               	movf	(___almod@dividend+1),w
  7717  0EB7  00B9               	movwf	(?___almod+1)
  7718  0EB8  083C               	movf	(___almod@dividend),w
  7719  0EB9  00B8               	movwf	(?___almod)
  7720                           
  7721  0EBA  2EBB               	goto	l5802
  7722                           	
  7723  0EBB                     l8460:	
  7724                           	line	30
  7725                           	
  7726  0EBB                     l5802:	
  7727  0EBB  0008               	return
  7728                           	opt stack 0
  7729                           GLOBAL	__end_of___almod
  7730  0EBC                     	__end_of___almod:
  7731                           	signat	___almod,8316
  7732                           	global	___aldiv
  7733                           
  7734 ;; *************** function ___aldiv *****************
  7735 ;; Defined at:
  7736 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.10\sources\aldiv.c"
  7737 ;; Parameters:    Size  Location     Type
  7738 ;;  divisor         4   24[BANK0 ] long 
  7739 ;;  dividend        4   28[BANK0 ] long 
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;  quotient        4   35[BANK0 ] long 
  7742 ;;  sign            1   34[BANK0 ] unsigned char 
  7743 ;;  counter         1   33[BANK0 ] unsigned char 
  7744 ;; Return value:  Size  Location     Type
  7745 ;;                  4   24[BANK0 ] long 
  7746 ;; Registers used:
  7747 ;;		wreg, status,2, status,0
  7748 ;; Tracked objects:
  7749 ;;		On entry : 0/0
  7750 ;;		On exit  : 0/0
  7751 ;;		Unchanged: 0/0
  7752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7753 ;;      Params:         0       8       0       0       0
  7754 ;;      Locals:         0       6       0       0       0
  7755 ;;      Temps:          0       1       0       0       0
  7756 ;;      Totals:         0      15       0       0       0
  7757 ;;Total ram usage:       15 bytes
  7758 ;; Hardware stack levels used:    1
  7759 ;; Hardware stack levels required when called:    1
  7760 ;; This function calls:
  7761 ;;		Nothing
  7762 ;; This function is called by:
  7763 ;;		_DoubletoAscii
  7764 ;;		_InttoAscii
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767                           psect	text756,local,class=CODE,delta=2,merge=1
  7768                           global __ptext756
  7769  0F58                     __ptext756:	;psect for function ___aldiv
  7770                           psect	text756
  7771                           	file	"C:\Program Files\Microchip\xc8\v1.10\sources\aldiv.c"
  7772                           	line	5
  7773                           	global	__size_of___aldiv
  7774  00A8                     	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  7775                           	
  7776  0F58                     ___aldiv:	
  7777                           	opt	stack 5
  7778                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7779                           	line	9
  7780                           	
  7781  0F58                     l8462:	
  7782  0F58  1283               	bcf	status, 5	;RP0=0, select bank0
  7783  0F59  1303               	bcf	status, 6	;RP1=0, select bank0
  7784  0F5A  01C2               	clrf	(___aldiv@sign)
  7785                           	line	10
  7786  0F5B  1FBB               	btfss	(___aldiv@divisor+3),7
  7787  0F5C  2F5E               	goto	u4181
  7788  0F5D  2F5F               	goto	u4180
  7789  0F5E                     u4181:
  7790  0F5E  2F6E               	goto	l8468
  7791  0F5F                     u4180:
  7792                           	line	11
  7793                           	
  7794  0F5F                     l8464:	
  7795  0F5F  09B8               	comf	(___aldiv@divisor),f
  7796  0F60  09B9               	comf	(___aldiv@divisor+1),f
  7797  0F61  09BA               	comf	(___aldiv@divisor+2),f
  7798  0F62  09BB               	comf	(___aldiv@divisor+3),f
  7799  0F63  0AB8               	incf	(___aldiv@divisor),f
  7800  0F64  1903               	skipnz
  7801  0F65  0AB9               	incf	(___aldiv@divisor+1),f
  7802  0F66  1903               	skipnz
  7803  0F67  0ABA               	incf	(___aldiv@divisor+2),f
  7804  0F68  1903               	skipnz
  7805  0F69  0ABB               	incf	(___aldiv@divisor+3),f
  7806                           	line	12
  7807                           	
  7808  0F6A                     l8466:	
  7809  0F6A  01C2               	clrf	(___aldiv@sign)
  7810  0F6B  1403               	bsf	status,0
  7811  0F6C  0DC2               	rlf	(___aldiv@sign),f
  7812  0F6D  2F6E               	goto	l8468
  7813                           	line	13
  7814                           	
  7815  0F6E                     l5805:	
  7816                           	line	14
  7817                           	
  7818  0F6E                     l8468:	
  7819  0F6E  1FBF               	btfss	(___aldiv@dividend+3),7
  7820  0F6F  2F71               	goto	u4191
  7821  0F70  2F72               	goto	u4190
  7822  0F71                     u4191:
  7823  0F71  2F82               	goto	l8474
  7824  0F72                     u4190:
  7825                           	line	15
  7826                           	
  7827  0F72                     l8470:	
  7828  0F72  09BC               	comf	(___aldiv@dividend),f
  7829  0F73  09BD               	comf	(___aldiv@dividend+1),f
  7830  0F74  09BE               	comf	(___aldiv@dividend+2),f
  7831  0F75  09BF               	comf	(___aldiv@dividend+3),f
  7832  0F76  0ABC               	incf	(___aldiv@dividend),f
  7833  0F77  1903               	skipnz
  7834  0F78  0ABD               	incf	(___aldiv@dividend+1),f
  7835  0F79  1903               	skipnz
  7836  0F7A  0ABE               	incf	(___aldiv@dividend+2),f
  7837  0F7B  1903               	skipnz
  7838  0F7C  0ABF               	incf	(___aldiv@dividend+3),f
  7839                           	line	16
  7840                           	
  7841  0F7D                     l8472:	
  7842  0F7D  3001               	movlw	(01h)
  7843  0F7E  00C0               	movwf	(??___aldiv+0)+0
  7844  0F7F  0840               	movf	(??___aldiv+0)+0,w
  7845  0F80  06C2               	xorwf	(___aldiv@sign),f
  7846  0F81  2F82               	goto	l8474
  7847                           	line	17
  7848                           	
  7849  0F82                     l5806:	
  7850                           	line	18
  7851                           	
  7852  0F82                     l8474:	
  7853  0F82  3000               	movlw	0
  7854  0F83  00C6               	movwf	(___aldiv@quotient+3)
  7855  0F84  3000               	movlw	0
  7856  0F85  00C5               	movwf	(___aldiv@quotient+2)
  7857  0F86  3000               	movlw	0
  7858  0F87  00C4               	movwf	(___aldiv@quotient+1)
  7859  0F88  3000               	movlw	0
  7860  0F89  00C3               	movwf	(___aldiv@quotient)
  7861                           
  7862                           	line	19
  7863                           	
  7864  0F8A                     l8476:	
  7865  0F8A  083B               	movf	(___aldiv@divisor+3),w
  7866  0F8B  043A               	iorwf	(___aldiv@divisor+2),w
  7867  0F8C  0439               	iorwf	(___aldiv@divisor+1),w
  7868  0F8D  0438               	iorwf	(___aldiv@divisor),w
  7869  0F8E  1903               	skipnz
  7870  0F8F  2F91               	goto	u4201
  7871  0F90  2F92               	goto	u4200
  7872  0F91                     u4201:
  7873  0F91  2FE6               	goto	l8496
  7874  0F92                     u4200:
  7875                           	line	20
  7876                           	
  7877  0F92                     l8478:	
  7878  0F92  01C1               	clrf	(___aldiv@counter)
  7879  0F93  1403               	bsf	status,0
  7880  0F94  0DC1               	rlf	(___aldiv@counter),f
  7881                           	line	21
  7882  0F95  2FA4               	goto	l8482
  7883                           	
  7884  0F96                     l5809:	
  7885                           	line	22
  7886                           	
  7887  0F96                     l8480:	
  7888  0F96  3001               	movlw	01h
  7889  0F97  00C0               	movwf	(??___aldiv+0)+0
  7890  0F98                     u4215:
  7891  0F98  1003               	clrc
  7892  0F99  0DB8               	rlf	(___aldiv@divisor),f
  7893  0F9A  0DB9               	rlf	(___aldiv@divisor+1),f
  7894  0F9B  0DBA               	rlf	(___aldiv@divisor+2),f
  7895  0F9C  0DBB               	rlf	(___aldiv@divisor+3),f
  7896  0F9D  0BC0               	decfsz	(??___aldiv+0)+0
  7897  0F9E  2F98               	goto	u4215
  7898                           	line	23
  7899  0F9F  3001               	movlw	(01h)
  7900  0FA0  00C0               	movwf	(??___aldiv+0)+0
  7901  0FA1  0840               	movf	(??___aldiv+0)+0,w
  7902  0FA2  07C1               	addwf	(___aldiv@counter),f
  7903  0FA3  2FA4               	goto	l8482
  7904                           	line	24
  7905                           	
  7906  0FA4                     l5808:	
  7907                           	line	21
  7908                           	
  7909  0FA4                     l8482:	
  7910  0FA4  1FBB               	btfss	(___aldiv@divisor+3),(31)&7
  7911  0FA5  2FA7               	goto	u4221
  7912  0FA6  2FA8               	goto	u4220
  7913  0FA7                     u4221:
  7914  0FA7  2F96               	goto	l8480
  7915  0FA8                     u4220:
  7916  0FA8  2FAA               	goto	l8484
  7917                           	
  7918  0FA9                     l5810:	
  7919  0FA9  2FAA               	goto	l8484
  7920                           	line	25
  7921                           	
  7922  0FAA                     l5811:	
  7923                           	line	26
  7924                           	
  7925  0FAA                     l8484:	
  7926  0FAA  3001               	movlw	01h
  7927  0FAB  00C0               	movwf	(??___aldiv+0)+0
  7928  0FAC                     u4235:
  7929  0FAC  1003               	clrc
  7930  0FAD  0DC3               	rlf	(___aldiv@quotient),f
  7931  0FAE  0DC4               	rlf	(___aldiv@quotient+1),f
  7932  0FAF  0DC5               	rlf	(___aldiv@quotient+2),f
  7933  0FB0  0DC6               	rlf	(___aldiv@quotient+3),f
  7934  0FB1  0BC0               	decfsz	(??___aldiv+0)+0
  7935  0FB2  2FAC               	goto	u4235
  7936                           	line	27
  7937                           	
  7938  0FB3                     l8486:	
  7939  0FB3  083B               	movf	(___aldiv@divisor+3),w
  7940  0FB4  023F               	subwf	(___aldiv@dividend+3),w
  7941  0FB5  1D03               	skipz
  7942  0FB6  2FC1               	goto	u4245
  7943  0FB7  083A               	movf	(___aldiv@divisor+2),w
  7944  0FB8  023E               	subwf	(___aldiv@dividend+2),w
  7945  0FB9  1D03               	skipz
  7946  0FBA  2FC1               	goto	u4245
  7947  0FBB  0839               	movf	(___aldiv@divisor+1),w
  7948  0FBC  023D               	subwf	(___aldiv@dividend+1),w
  7949  0FBD  1D03               	skipz
  7950  0FBE  2FC1               	goto	u4245
  7951  0FBF  0838               	movf	(___aldiv@divisor),w
  7952  0FC0  023C               	subwf	(___aldiv@dividend),w
  7953  0FC1                     u4245:
  7954  0FC1  1C03               	skipc
  7955  0FC2  2FC4               	goto	u4241
  7956  0FC3  2FC5               	goto	u4240
  7957  0FC4                     u4241:
  7958  0FC4  2FD5               	goto	l8492
  7959  0FC5                     u4240:
  7960                           	line	28
  7961                           	
  7962  0FC5                     l8488:	
  7963  0FC5  0838               	movf	(___aldiv@divisor),w
  7964  0FC6  02BC               	subwf	(___aldiv@dividend),f
  7965  0FC7  0839               	movf	(___aldiv@divisor+1),w
  7966  0FC8  1C03               	skipc
  7967  0FC9  0F39               	incfsz	(___aldiv@divisor+1),w
  7968  0FCA  02BD               	subwf	(___aldiv@dividend+1),f
  7969  0FCB  083A               	movf	(___aldiv@divisor+2),w
  7970  0FCC  1C03               	skipc
  7971  0FCD  0F3A               	incfsz	(___aldiv@divisor+2),w
  7972  0FCE  02BE               	subwf	(___aldiv@dividend+2),f
  7973  0FCF  083B               	movf	(___aldiv@divisor+3),w
  7974  0FD0  1C03               	skipc
  7975  0FD1  0F3B               	incfsz	(___aldiv@divisor+3),w
  7976  0FD2  02BF               	subwf	(___aldiv@dividend+3),f
  7977                           	line	29
  7978                           	
  7979  0FD3                     l8490:	
  7980  0FD3  1443               	bsf	(___aldiv@quotient)+(0/8),(0)&7
  7981  0FD4  2FD5               	goto	l8492
  7982                           	line	30
  7983                           	
  7984  0FD5                     l5812:	
  7985                           	line	31
  7986                           	
  7987  0FD5                     l8492:	
  7988  0FD5  3001               	movlw	01h
  7989  0FD6                     u4255:
  7990  0FD6  1003               	clrc
  7991  0FD7  0CBB               	rrf	(___aldiv@divisor+3),f
  7992  0FD8  0CBA               	rrf	(___aldiv@divisor+2),f
  7993  0FD9  0CB9               	rrf	(___aldiv@divisor+1),f
  7994  0FDA  0CB8               	rrf	(___aldiv@divisor),f
  7995  0FDB  3EFF               	addlw	-1
  7996  0FDC  1D03               	skipz
  7997  0FDD  2FD6               	goto	u4255
  7998                           
  7999                           	line	32
  8000                           	
  8001  0FDE                     l8494:	
  8002  0FDE  3001               	movlw	low(01h)
  8003  0FDF  02C1               	subwf	(___aldiv@counter),f
  8004  0FE0  1D03               	btfss	status,2
  8005  0FE1  2FE3               	goto	u4261
  8006  0FE2  2FE4               	goto	u4260
  8007  0FE3                     u4261:
  8008  0FE3  2FAA               	goto	l8484
  8009  0FE4                     u4260:
  8010  0FE4  2FE6               	goto	l8496
  8011                           	
  8012  0FE5                     l5813:	
  8013  0FE5  2FE6               	goto	l8496
  8014                           	line	33
  8015                           	
  8016  0FE6                     l5807:	
  8017                           	line	34
  8018                           	
  8019  0FE6                     l8496:	
  8020  0FE6  0842               	movf	(___aldiv@sign),w
  8021  0FE7  1D03               	skipz
  8022  0FE8  2FEA               	goto	u4270
  8023  0FE9  2FF6               	goto	l8500
  8024  0FEA                     u4270:
  8025                           	line	35
  8026                           	
  8027  0FEA                     l8498:	
  8028  0FEA  09C3               	comf	(___aldiv@quotient),f
  8029  0FEB  09C4               	comf	(___aldiv@quotient+1),f
  8030  0FEC  09C5               	comf	(___aldiv@quotient+2),f
  8031  0FED  09C6               	comf	(___aldiv@quotient+3),f
  8032  0FEE  0AC3               	incf	(___aldiv@quotient),f
  8033  0FEF  1903               	skipnz
  8034  0FF0  0AC4               	incf	(___aldiv@quotient+1),f
  8035  0FF1  1903               	skipnz
  8036  0FF2  0AC5               	incf	(___aldiv@quotient+2),f
  8037  0FF3  1903               	skipnz
  8038  0FF4  0AC6               	incf	(___aldiv@quotient+3),f
  8039  0FF5  2FF6               	goto	l8500
  8040                           	
  8041  0FF6                     l5814:	
  8042                           	line	36
  8043                           	
  8044  0FF6                     l8500:	
  8045  0FF6  0846               	movf	(___aldiv@quotient+3),w
  8046  0FF7  00BB               	movwf	(?___aldiv+3)
  8047  0FF8  0845               	movf	(___aldiv@quotient+2),w
  8048  0FF9  00BA               	movwf	(?___aldiv+2)
  8049  0FFA  0844               	movf	(___aldiv@quotient+1),w
  8050  0FFB  00B9               	movwf	(?___aldiv+1)
  8051  0FFC  0843               	movf	(___aldiv@quotient),w
  8052  0FFD  00B8               	movwf	(?___aldiv)
  8053                           
  8054  0FFE  2FFF               	goto	l5815
  8055                           	
  8056  0FFF                     l8502:	
  8057                           	line	37
  8058                           	
  8059  0FFF                     l5815:	
  8060  0FFF  0008               	return
  8061                           	opt stack 0
  8062                           GLOBAL	__end_of___aldiv
  8063  1000                     	__end_of___aldiv:
  8064                           	signat	___aldiv,8316
  8065                           	global	_int_ctrl
  8066                           
  8067 ;; *************** function _int_ctrl *****************
  8068 ;; Defined at:
  8069 ;;		line 29 in file "C:\PIC_WorkSpace\AquaTempFan\interrupt_ctrl.c"
  8070 ;; Parameters:    Size  Location     Type
  8071 ;;		None
  8072 ;; Auto vars:     Size  Location     Type
  8073 ;;		None
  8074 ;; Return value:  Size  Location     Type
  8075 ;;		None               void
  8076 ;; Registers used:
  8077 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8078 ;; Tracked objects:
  8079 ;;		On entry : 0/0
  8080 ;;		On exit  : 0/0
  8081 ;;		Unchanged: 0/0
  8082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8083 ;;      Params:         0       0       0       0       0
  8084 ;;      Locals:         0       0       0       0       0
  8085 ;;      Temps:          5       0       0       0       0
  8086 ;;      Totals:         5       0       0       0       0
  8087 ;;Total ram usage:        5 bytes
  8088 ;; Hardware stack levels used:    1
  8089 ;; This function calls:
  8090 ;;		Nothing
  8091 ;; This function is called by:
  8092 ;;		Interrupt level 1
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           psect	text757,local,class=CODE,delta=2,merge=1
  8096                           global __ptext757
  8097  0C97                     __ptext757:	;psect for function _int_ctrl
  8098                           psect	text757
  8099                           	file	"C:\PIC_WorkSpace\AquaTempFan\interrupt_ctrl.c"
  8100                           	line	29
  8101                           	global	__size_of_int_ctrl
  8102  007D                     	__size_of_int_ctrl	equ	__end_of_int_ctrl-_int_ctrl
  8103                           	
  8104  0C97                     _int_ctrl:	
  8105                           	opt	stack 4
  8106                           ; Regs used in _int_ctrl: [wreg-fsr0h+status,2+status,0]
  8107                           psect	intentry,class=CODE,delta=2
  8108                           global __pintentry
  8109  0004                     __pintentry:
  8110                           global interrupt_function
  8111  0004                     interrupt_function:
  8112                           	global saved_w
  8113  007E                     	saved_w	set	btemp+0
  8114  0004  00FE               	movwf	saved_w
  8115  0005  0E03               	swapf	status,w
  8116  0006  00F6               	movwf	(??_int_ctrl+1)
  8117  0007  0804               	movf	fsr0,w
  8118  0008  00F7               	movwf	(??_int_ctrl+2)
  8119  0009  080A               	movf	pclath,w
  8120  000A  00F8               	movwf	(??_int_ctrl+3)
  8121  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  8122  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  8123  000D  087F               	movf	btemp+1,w
  8124  000E  00F9               	movwf	(??_int_ctrl+4)
  8125  000F  158A  2C97         	ljmp	_int_ctrl
  8126                           psect	text757
  8127                           	line	30
  8128                           	
  8129  0C97                     i1l7148:	
  8130                           ;interrupt_ctrl.c: 30: if(TMR0IF)
  8131  0C97  1D0B               	btfss	(90/8),(90)&7	;volatile
  8132  0C98  2C9A               	goto	u147_21
  8133  0C99  2C9B               	goto	u147_20
  8134  0C9A                     u147_21:
  8135  0C9A  2CEE               	goto	i1l1822
  8136  0C9B                     u147_20:
  8137                           	line	32
  8138                           	
  8139  0C9B                     i1l7150:	
  8140                           ;interrupt_ctrl.c: 31: {
  8141                           ;interrupt_ctrl.c: 32: TMR0IF = 0;
  8142  0C9B  110B               	bcf	(90/8),(90)&7	;volatile
  8143                           	line	33
  8144                           	
  8145  0C9C                     i1l7152:	
  8146                           ;interrupt_ctrl.c: 33: TMR0 = 0;
  8147  0C9C  0181               	clrf	(1)	;volatile
  8148                           	line	35
  8149                           	
  8150  0C9D                     i1l7154:	
  8151                           ;interrupt_ctrl.c: 35: T05_Counter++;
  8152  0C9D  3001               	movlw	(01h)
  8153  0C9E  00F5               	movwf	(??_int_ctrl+0)+0
  8154  0C9F  0875               	movf	(??_int_ctrl+0)+0,w
  8155  0CA0  07F2               	addwf	(_T05_Counter),f	;volatile
  8156                           	line	36
  8157                           	
  8158  0CA1                     i1l7156:	
  8159                           ;interrupt_ctrl.c: 36: if(T05_Counter > 244)
  8160  0CA1  30F5               	movlw	(0F5h)
  8161  0CA2  0272               	subwf	(_T05_Counter),w	;volatile
  8162  0CA3  1C03               	skipc
  8163  0CA4  2CA6               	goto	u148_21
  8164  0CA5  2CA7               	goto	u148_20
  8165  0CA6                     u148_21:
  8166  0CA6  2CAA               	goto	i1l7160
  8167  0CA7                     u148_20:
  8168                           	line	38
  8169                           	
  8170  0CA7                     i1l7158:	
  8171                           ;interrupt_ctrl.c: 37: {
  8172                           ;interrupt_ctrl.c: 38: T05_Counter = 0;
  8173  0CA7  01F2               	clrf	(_T05_Counter)	;volatile
  8174                           	line	39
  8175                           ;interrupt_ctrl.c: 39: Cycle_Unit.Bit.t05 = 1;
  8176  0CA8  1771               	bsf	(_Cycle_Unit),6	;volatile
  8177  0CA9  2CAA               	goto	i1l7160
  8178                           	line	40
  8179                           	
  8180  0CAA                     i1l1823:	
  8181                           	line	41
  8182                           	
  8183  0CAA                     i1l7160:	
  8184                           ;interrupt_ctrl.c: 40: }
  8185                           ;interrupt_ctrl.c: 41: T1_Counter++;
  8186  0CAA  3001               	movlw	low(01h)
  8187  0CAB  07EA               	addwf	(_T1_Counter),f	;volatile
  8188  0CAC  1803               	skipnc
  8189  0CAD  0AEB               	incf	(_T1_Counter+1),f	;volatile
  8190  0CAE  3000               	movlw	high(01h)
  8191  0CAF  07EB               	addwf	(_T1_Counter+1),f	;volatile
  8192                           	line	42
  8193                           ;interrupt_ctrl.c: 42: if(T1_Counter > 488)
  8194  0CB0  3001               	movlw	high(01E9h)
  8195  0CB1  026B               	subwf	(_T1_Counter+1),w	;volatile
  8196  0CB2  30E9               	movlw	low(01E9h)
  8197  0CB3  1903               	skipnz
  8198  0CB4  026A               	subwf	(_T1_Counter),w	;volatile
  8199  0CB5  1C03               	skipc
  8200  0CB6  2CB8               	goto	u149_21
  8201  0CB7  2CB9               	goto	u149_20
  8202  0CB8                     u149_21:
  8203  0CB8  2CDD               	goto	i1l7180
  8204  0CB9                     u149_20:
  8205                           	line	44
  8206                           	
  8207  0CB9                     i1l7162:	
  8208                           ;interrupt_ctrl.c: 43: {
  8209                           ;interrupt_ctrl.c: 44: T1_Counter = 0;
  8210  0CB9  01EA               	clrf	(_T1_Counter)	;volatile
  8211  0CBA  01EB               	clrf	(_T1_Counter+1)	;volatile
  8212                           	line	45
  8213                           	
  8214  0CBB                     i1l7164:	
  8215                           ;interrupt_ctrl.c: 45: Cycle_Unit.Bit.t1 = 1;
  8216  0CBB  17F1               	bsf	(_Cycle_Unit),7	;volatile
  8217                           	line	46
  8218                           	
  8219  0CBC                     i1l7166:	
  8220                           ;interrupt_ctrl.c: 46: ConvertStep = 1;
  8221  0CBC  01F0               	clrf	(_ConvertStep)	;volatile
  8222  0CBD  1403               	bsf	status,0
  8223  0CBE  0DF0               	rlf	(_ConvertStep),f	;volatile
  8224  0CBF  2CDD               	goto	i1l7180
  8225                           	line	47
  8226                           	
  8227  0CC0                     i1l1824:	
  8228                           	line	48
  8229                           ;interrupt_ctrl.c: 47: }
  8230                           ;interrupt_ctrl.c: 48: switch(ConvertStep)
  8231  0CC0  2CDD               	goto	i1l7180
  8232                           	line	50
  8233                           ;interrupt_ctrl.c: 49: {
  8234                           ;interrupt_ctrl.c: 50: case 4:
  8235                           	
  8236  0CC1                     i1l1826:	
  8237                           	line	51
  8238                           	
  8239  0CC1                     i1l7168:	
  8240                           ;interrupt_ctrl.c: 51: Adc_Data = ADC_DATA_BUF.WORD;
  8241  0CC1  0874               	movf	(_ADC_DATA_BUF+1),w	;volatile
  8242  0CC2  1683               	bsf	status, 5	;RP0=1, select bank1
  8243  0CC3  1303               	bcf	status, 6	;RP1=0, select bank1
  8244  0CC4  01B9               	clrf	(_Adc_Data+1)^080h	;volatile
  8245  0CC5  07B9               	addwf	(_Adc_Data+1)^080h	;volatile
  8246  0CC6  0873               	movf	(_ADC_DATA_BUF),w	;volatile
  8247  0CC7  01B8               	clrf	(_Adc_Data)^080h	;volatile
  8248  0CC8  07B8               	addwf	(_Adc_Data)^080h	;volatile
  8249                           
  8250                           	line	52
  8251                           	
  8252  0CC9                     i1l7170:	
  8253                           ;interrupt_ctrl.c: 52: AdcDataGetFlag = 1;
  8254  0CC9  01BA               	clrf	(_AdcDataGetFlag)^080h	;volatile
  8255  0CCA  1403               	bsf	status,0
  8256  0CCB  0DBA               	rlf	(_AdcDataGetFlag)^080h,f	;volatile
  8257                           	line	53
  8258                           	
  8259  0CCC                     i1l7172:	
  8260                           ;interrupt_ctrl.c: 53: ConvertStep = 0;
  8261  0CCC  01F0               	clrf	(_ConvertStep)	;volatile
  8262                           	line	54
  8263                           ;interrupt_ctrl.c: 54: break;
  8264  0CCD  2CEE               	goto	i1l1822
  8265                           	line	55
  8266                           ;interrupt_ctrl.c: 55: case 2:
  8267                           	
  8268  0CCE                     i1l1828:	
  8269                           	line	56
  8270                           ;interrupt_ctrl.c: 56: GO_nDONE = 1;
  8271  0CCE  151F               	bsf	(250/8),(250)&7	;volatile
  8272                           	line	57
  8273                           	
  8274  0CCF                     i1l7174:	
  8275                           ;interrupt_ctrl.c: 57: ConvertStep = 3;
  8276  0CCF  3003               	movlw	(03h)
  8277  0CD0  00F5               	movwf	(??_int_ctrl+0)+0
  8278  0CD1  0875               	movf	(??_int_ctrl+0)+0,w
  8279  0CD2  00F0               	movwf	(_ConvertStep)	;volatile
  8280                           	line	58
  8281                           ;interrupt_ctrl.c: 58: break;
  8282  0CD3  2CEE               	goto	i1l1822
  8283                           	line	59
  8284                           ;interrupt_ctrl.c: 59: case 1:
  8285                           	
  8286  0CD4                     i1l1829:	
  8287                           	line	60
  8288                           	
  8289  0CD4                     i1l7176:	
  8290                           ;interrupt_ctrl.c: 60: ConvertStep = 2;
  8291  0CD4  3002               	movlw	(02h)
  8292  0CD5  00F5               	movwf	(??_int_ctrl+0)+0
  8293  0CD6  0875               	movf	(??_int_ctrl+0)+0,w
  8294  0CD7  00F0               	movwf	(_ConvertStep)	;volatile
  8295                           	line	61
  8296                           ;interrupt_ctrl.c: 61: break;
  8297  0CD8  2CEE               	goto	i1l1822
  8298                           	line	62
  8299                           ;interrupt_ctrl.c: 62: case 3:
  8300                           	
  8301  0CD9                     i1l1830:	
  8302  0CD9  2CEE               	goto	i1l1822
  8303                           	line	63
  8304                           	
  8305  0CDA                     i1l1831:	
  8306  0CDA  2CEE               	goto	i1l1822
  8307                           	line	64
  8308                           ;interrupt_ctrl.c: 63: case 0:
  8309                           ;interrupt_ctrl.c: 64: default:
  8310                           	
  8311  0CDB                     i1l1832:	
  8312                           	line	65
  8313                           ;interrupt_ctrl.c: 65: break;
  8314  0CDB  2CEE               	goto	i1l1822
  8315                           	line	66
  8316                           	
  8317  0CDC                     i1l7178:	
  8318                           ;interrupt_ctrl.c: 66: }
  8319  0CDC  2CEE               	goto	i1l1822
  8320                           	line	48
  8321                           	
  8322  0CDD                     i1l1825:	
  8323                           	
  8324  0CDD                     i1l7180:	
  8325  0CDD  0870               	movf	(_ConvertStep),w	;volatile
  8326                           	; Switch size 1, requested type "space"
  8327                           ; Number of cases is 5, Range of values is 0 to 4
  8328                           ; switch strategies available:
  8329                           ; Name         Instructions Cycles
  8330                           ; simple_byte           16     9 (average)
  8331                           ; direct_byte           17     7 (fixed)
  8332                           ; jumptable            260     6 (fixed)
  8333                           ; rangetable             9     6 (fixed)
  8334                           ; spacedrange           16     9 (fixed)
  8335                           ; locatedrange           5     3 (fixed)
  8336                           ;	Chosen strategy is simple_byte
  8337                           
  8338                           	opt asmopt_off
  8339  0CDE  3A00               	xorlw	0^0	; case 0
  8340  0CDF  1903               	skipnz
  8341  0CE0  2CEE               	goto	i1l1822
  8342  0CE1  3A01               	xorlw	1^0	; case 1
  8343  0CE2  1903               	skipnz
  8344  0CE3  2CD4               	goto	i1l7176
  8345  0CE4  3A03               	xorlw	2^1	; case 2
  8346  0CE5  1903               	skipnz
  8347  0CE6  2CCE               	goto	i1l1828
  8348  0CE7  3A01               	xorlw	3^2	; case 3
  8349  0CE8  1903               	skipnz
  8350  0CE9  2CEE               	goto	i1l1822
  8351  0CEA  3A07               	xorlw	4^3	; case 4
  8352  0CEB  1903               	skipnz
  8353  0CEC  2CC1               	goto	i1l7168
  8354  0CED  2CEE               	goto	i1l1822
  8355                           	opt asmopt_on
  8356                           
  8357                           	line	66
  8358                           	
  8359  0CEE                     i1l1827:	
  8360                           	line	67
  8361                           	
  8362  0CEE                     i1l1822:	
  8363                           	line	69
  8364                           ;interrupt_ctrl.c: 67: }
  8365                           ;interrupt_ctrl.c: 69: if(ADIF)
  8366  0CEE  1283               	bcf	status, 5	;RP0=0, select bank0
  8367  0CEF  1F0C               	btfss	(102/8),(102)&7	;volatile
  8368  0CF0  2CF2               	goto	u150_21
  8369  0CF1  2CF3               	goto	u150_20
  8370  0CF2                     u150_21:
  8371  0CF2  2D08               	goto	i1l1835
  8372  0CF3                     u150_20:
  8373                           	line	71
  8374                           	
  8375  0CF3                     i1l7182:	
  8376                           ;interrupt_ctrl.c: 70: {
  8377                           ;interrupt_ctrl.c: 71: ADIF = 0;
  8378  0CF3  130C               	bcf	(102/8),(102)&7	;volatile
  8379                           	line	72
  8380                           ;interrupt_ctrl.c: 72: if(GO_nDONE == 0)
  8381  0CF4  191F               	btfsc	(250/8),(250)&7	;volatile
  8382  0CF5  2CF7               	goto	u151_21
  8383  0CF6  2CF8               	goto	u151_20
  8384  0CF7                     u151_21:
  8385  0CF7  2D08               	goto	i1l1835
  8386  0CF8                     u151_20:
  8387                           	line	74
  8388                           	
  8389  0CF8                     i1l7184:	
  8390                           ;interrupt_ctrl.c: 73: {
  8391                           ;interrupt_ctrl.c: 74: ADC_DATA_BUF.BYTE[1] = ADRESH;
  8392  0CF8  081E               	movf	(30),w	;volatile
  8393  0CF9  00F5               	movwf	(??_int_ctrl+0)+0
  8394  0CFA  0875               	movf	(??_int_ctrl+0)+0,w
  8395  0CFB  00F4               	movwf	0+(_ADC_DATA_BUF)+01h	;volatile
  8396                           	line	75
  8397                           ;interrupt_ctrl.c: 75: ADC_DATA_BUF.BYTE[0] = ADRESL;
  8398  0CFC  1683               	bsf	status, 5	;RP0=1, select bank1
  8399  0CFD  1303               	bcf	status, 6	;RP1=0, select bank1
  8400  0CFE  081E               	movf	(158)^080h,w	;volatile
  8401  0CFF  00F5               	movwf	(??_int_ctrl+0)+0
  8402  0D00  0875               	movf	(??_int_ctrl+0)+0,w
  8403  0D01  00F3               	movwf	(_ADC_DATA_BUF)	;volatile
  8404                           	line	76
  8405                           ;interrupt_ctrl.c: 76: ConvertStep = 4;
  8406  0D02  3004               	movlw	(04h)
  8407  0D03  00F5               	movwf	(??_int_ctrl+0)+0
  8408  0D04  0875               	movf	(??_int_ctrl+0)+0,w
  8409  0D05  00F0               	movwf	(_ConvertStep)	;volatile
  8410  0D06  2D08               	goto	i1l1835
  8411                           	line	77
  8412                           	
  8413  0D07                     i1l1834:	
  8414  0D07  2D08               	goto	i1l1835
  8415                           	line	78
  8416                           	
  8417  0D08                     i1l1833:	
  8418                           	line	79
  8419                           	
  8420  0D08                     i1l1835:	
  8421  0D08  0879               	movf	(??_int_ctrl+4),w
  8422  0D09  1283               	bcf	status, 5	;RP0=0, select bank0
  8423  0D0A  00FF               	movwf	btemp+1
  8424  0D0B  0878               	movf	(??_int_ctrl+3),w
  8425  0D0C  008A               	movwf	pclath
  8426  0D0D  0877               	movf	(??_int_ctrl+2),w
  8427  0D0E  0084               	movwf	fsr0
  8428  0D0F  0E76               	swapf	(??_int_ctrl+1)^0FFFFFF80h,w
  8429  0D10  0083               	movwf	status
  8430  0D11  0EFE               	swapf	saved_w,f
  8431  0D12  0E7E               	swapf	saved_w,w
  8432  0D13  0009               	retfie
  8433                           	opt stack 0
  8434                           GLOBAL	__end_of_int_ctrl
  8435  0D14                     	__end_of_int_ctrl:
  8436                           	signat	_int_ctrl,88
  8437                           psect	text758,local,class=CODE,delta=2,merge=1
  8438                           global __ptext758
  8439  0000                     __ptext758:	;psect for function _int_ctrl
  8440                           	global	btemp
  8441  007E                     	btemp set 07Eh
  8442                           
  8443                           	DABS	1,126,2	;btemp
  8444                           	global	wtemp0
  8445  007E                     	wtemp0 set btemp


Data Sizes:
    Strings     68
    Constant    0
    Data        34
    BSS         106
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     74      78
    BANK1            80     11      75
    BANK3            96      0      67
    BANK2            96      0       0

Pointer List with Targets:

    ?___flpack	 size(1) Largest target is 2
		 -> Adc_data(BANK1[2]), ADC_DATA_BUF(COMMON[2]), 

    ?___lmul	unsigned long  size(1) Largest target is 0

    ?___almod	long  size(1) Largest target is 2
		 -> Adc_data(BANK1[2]), 

    ?___aldiv	long  size(1) Largest target is 0

    ?_Power	long  size(1) Largest target is 0

    ?___fltol	long  size(1) Largest target is 0

    ?_strcat	PTR unsigned char  size(1) Largest target is 33
		 -> Vfd_Data(BANK3[33]), 

    ?_strcpy	PTR unsigned char  size(2) Largest target is 33
		 -> Vfd_Data(BANK3[33]), Upside_Data(BANK1[17]), Downside_Data(BANK1[17]), 

    ?___flmul	PTR unsigned char  size(1) Largest target is 0

    ?___fldiv	PTR unsigned char  size(1) Largest target is 0

    ?___fladd	PTR unsigned char  size(1) Largest target is 2
		 -> Adc_data(BANK1[2]), 

    ?___awtofl	PTR unsigned char  size(1) Largest target is 0

    strcpy@from	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), Upside_Data(BANK1[17]), Rly_str(BANK3[34]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 33
		 -> Vfd_Data(BANK3[33]), Upside_Data(BANK1[17]), Downside_Data(BANK1[17]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 33
		 -> Vfd_Data(BANK3[33]), Upside_Data(BANK1[17]), Downside_Data(BANK1[17]), 

    strcat@from	PTR const unsigned char  size(1) Largest target is 17
		 -> Downside_Data(BANK1[17]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 33
		 -> Vfd_Data(BANK3[33]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 33
		 -> Vfd_Data(BANK3[33]), 

    DoubletoAscii@ascii	PTR unsigned char  size(1) Largest target is 17
		 -> Upside_Data(BANK1[17]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 33
		 -> Vfd_Data(BANK3[33]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 33
		 -> Vfd_Data(BANK3[33]), Upside_Data(BANK1[17]), Downside_Data(BANK1[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _int_ctrl in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_DoubletoAscii
    _hw_init->_Adc_init
    _vfd_data_init->_strcpy
    _vfd_init->_strcpy
    _DoubletoAscii->___fltol
    _Power->___lmul
    ___fladd->___flmul
    ___fldiv->___flpack
    ___flmul->___awtofl
    ___fltol->___fladd
    ___awtofl->___flpack
    ___almod->_Power
    ___aldiv->_Power

Critical Paths under _int_ctrl in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_DoubletoAscii

Critical Paths under _int_ctrl in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_ctrl in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_ctrl in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   10432
                                             71 BANK0      3     3      0
                                              6 BANK1      5     5      0
                            _hw_init
                           _int_init
                      _vfd_data_init
                           _vfd_init
                           ___awtofl
                            ___fladd
                            ___fldiv
                            ___fltol
                            ___flmul
                             ___flge
                             _strcpy
                      _DoubletoAscii
                             _strcat
                          _vfd_write
 ---------------------------------------------------------------------------------
 (1) _hw_init                                              0     0      0      99
                           _Adc_init
 ---------------------------------------------------------------------------------
 (2) _Adc_init                                             2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _int_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _vfd_data_init                                        1     1      0     103
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _vfd_init                                             3     3      0     514
                                             11 BANK0      3     3      0
                          _vfd_write
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                              11     7      4     103
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _DoubletoAscii                                       13     8      5    4997
                                             64 BANK0      7     2      5
                                              0 BANK1      6     6      0
                             ___flge
                            ___flmul
                            ___fladd
                            ___fltol
                              _Power
                            ___aldiv
                            ___almod
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     3      1     137
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _vfd_write                                            5     5      0     167
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _Power                                               11     6      5     303
                                             13 BANK0     11     6      5
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     136
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    1537
                                             37 BANK0     16     8      8
                           ___flpack
                           ___awtofl (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             20    12      8     729
                                             10 BANK0     20    12      8
                           ___flpack
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             20    12      8     800
                                             17 BANK0     20    12      8
                           ___flpack
                           ___awtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     337
                                             53 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awtofl                                            11     7      4     445
                                             10 BANK0      7     3      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (3) ___flpack                                            10     4      6     312
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) ___flge                                              16     8      8     198
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             11     3      8     433
                                             24 BANK0     11     3      8
                              _Power (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     445
                                             24 BANK0     15     7      8
                              _Power (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _int_ctrl                                             5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _hw_init
     _Adc_init
   _int_init
   _vfd_data_init
     _strcpy
   _vfd_init
     _vfd_write
     _strcpy
   ___awtofl
     ___flpack
   ___fladd
     ___flpack
     ___awtofl (ARG)
       ___flpack
     ___flmul (ARG)
       ___flpack
       ___awtofl (ARG)
         ___flpack
   ___fldiv
     ___flpack
   ___fltol
     ___fldiv (ARG)
       ___flpack
     ___fladd (ARG)
       ___flpack
       ___awtofl (ARG)
         ___flpack
       ___flmul (ARG)
         ___flpack
         ___awtofl (ARG)
           ___flpack
     ___flmul (ARG)
       ___flpack
       ___awtofl (ARG)
         ___flpack
   ___flmul
     ___flpack
     ___awtofl (ARG)
       ___flpack
   ___flge
   _strcpy
   _DoubletoAscii
     ___flge
     ___flmul
       ___flpack
       ___awtofl (ARG)
         ___flpack
     ___fladd
       ___flpack
       ___awtofl (ARG)
         ___flpack
       ___flmul (ARG)
         ___flpack
         ___awtofl (ARG)
           ___flpack
     ___fltol
       ___fldiv (ARG)
         ___flpack
       ___fladd (ARG)
         ___flpack
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___flpack
           ___awtofl (ARG)
             ___flpack
       ___flmul (ARG)
         ___flpack
         ___awtofl (ARG)
           ___flpack
     _Power
       ___lmul
     ___aldiv
       _Power (ARG)
         ___lmul
     ___almod
       _Power (ARG)
         ___lmul
   _strcat
   _vfd_write

 _int_ctrl (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      43       9       69.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      B      4B       7       93.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4A      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      E9      12        0.0%
ABS                  0      0      E6       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       3       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.10 build 47796 
Symbol Table                                                                                   Fri Sep 21 03:28:58 2012

           ___fldiv@cntr 003B                        pc 0002             ___fldiv@sign 003D  
                     fsr 0004             ___flpack@arg 0020             ___flpack@exp 0024  
                    l603 0BEF                      l604 0C04                      l605 0C0B  
                    _GIE 005F                      _RB0 0030                      _RB2 0032  
                    _RB3 0033                      _RB5 0035                      _PS0 0408  
                    _PS1 0409                      _PS2 040A                      _PSA 040B  
                    fsr0 0004                      indf 0000             ___flmul@cntr 0043  
           ___flmul@sign 0044             __CFG_LVP$OFF 0000            ___flpack@sign 0025  
           ___fltol@exp1 005F                     l1210 0B9B                     l3100 0D1D  
                   l3101 0D59                     l3110 0D6D                     l3102 0D1E  
                   l3111 0D7E                     l3103 0D29                     l3120 0BCF  
                   l3112 0D9C                     l3104 0D3B                     l3105 0D31  
                   l3106 0D45                     l3115 0BA4                     l3107 0D58  
                   l3116 0BA4                     l3140 02AD                     l3108 0D4D  
                   l3117 0BA8                     l3141 040B                     l3109 0D5D  
                   l3118 0BB1                     l3150 0412                     l3142 02FC  
                   l3119 0BCF                     l3151 0412                     l3143 038D  
                   l3144 03A8                     l3145 0402                     l3146 03BD  
                   l3138 024F                     l3147 0401                     l3139 025E  
                   l3148 03D6                     l3149 0400                     l2470 0059  
                   l2471 006A                     l2472 00C6                     l2473 0191  
                   l3098 0D18                     l2474 01C7                     l3099 0D18  
                   l1819 0A64                     l2475 0229                     l2476 0240  
                   l2468 002B                     l2477 0241                     l2469 01C7  
                   l2478 0242                     l2479 0242                     l3750 0A98  
                   l8000 0D44                     l5602 0B45                     l8010 0D62  
                   l8002 0D49                     l5603 0B44                     l8100 0BA9  
                   l5604 0B6A                     l8020 0D77                     l8012 0D65  
                   l8004 0D4D                     l5605 0B6A                     l8102 0BB0  
                   l8030 0B45                     l8014 0D6C                     l8022 0D7E  
                   l8006 0D59                     l5800 0EA1                     l5720 0642  
                   l5704 06B5                     l8200 047C                     l8104 0BBD  
                   l8040 0257                     l8032 0244                     l8024 0D82  
                   l8016 0D6D                     l8008 0D5E                     l5801 0EB2  
                   l5721 065E                     l5705 0775                     l5810 0FA9  
                   l5802 0EBB                     l5722 0677                     l5714 05A1  
                   l5706 06D2                     l8210 04B6                     l8202 048C  
                   l8106 0BC8                     l8050 02AD                     l8042 025E  
                   l8034 0247                     l8026 0D8F                     l8018 0D71  
                   l5811 0FAA                     l5715 0695                     l5707 071C  
                   l5812 0FD5                     l5716 05BE                     l5708 0747  
                   l8300 0745                     l8220 04E1                     l8204 0497  
                   l8212 04BE                     l5660 0C8D                     l4940 0C18  
                   l8060 0376                     l8052 02F2                     l8044 0277  
                   l8036 024E                     l8028 0B3B                     l5813 0FE5  
                   l5805 0F6E                     l5717 0608                     l5709 0757  
                   l5661 0C96                     l4941 0C41                     l5814 0FF6  
                   l5806 0F82                     l5718 0624                     l8310 0582  
                   l8302 0747                     l8230 052D                     l8222 04EF  
                   l8214 04C5                     l8206 049D                     l5670 0465  
                   l4942 0C4A                     l8150 0C35                     l8070 03A8  
                   l8062 0386                     l8054 02FA                     l8046 0287  
                   l8038 024F                     l5815 0FFF                     l5807 0FE6  
                   l5719 063D                     _ADIE 0466                     l5808 0FA4  
                   l8400 0B14                     l5760 0F41                     l5752 0EDB  
                   l8320 05BD                     l8312 0597                     l8304 0750  
                   l8240 0581                     l8232 0545                     l8224 04FB  
                   l8216 04D0                     l5680 04B6                     l8208 04A8  
                   l5672 0464                     l8160 0C56                     l8152 0C3A  
                   l8144 0C0C                     l8080 03E5                     l8072 03AC  
                   l8064 038D                     l8056 02FC                     l8048 028D  
                   _ADIF 0066                     l5809 0F96                     l5761 0F35  
                   l5753 0F57                     l5681 04A8                     l5673 046E  
                   l5593 0AED                     l8410 077C                     l8250 0DB7  
                   l8242 0D9D                     l8402 0B19                     l5762 0F47  
                   l5754 0F24                     l8330 05FB                     l8322 05BE  
                   l8314 05A0                     l8306 0757                     l8234 0549  
                   l8226 0512                     l5690 04E1                     l8218 04D6  
                   l5682 04BD                     l5674 0473                     l5666 0450  
                   l8170 0C96                     l8162 0C5A                     l5658 0C56  
                   l8154 0C41                     l8146 0C16                     l5594 0AE8  
                   l8090 0AE3                     l8082 03EB                     l8074 03BD  
                   l8066 0391                     l8058 0370                     l5763 0F57  
                   l5755 0F10                     l5691 04F6                     l5675 04BE  
                   l5683 04F7                     l5659 0C72                     l4939 0C3A  
                   l5595 0AF6                     l8500 0FF6                     l8420 07E8  
                   l8412 07AE                     l8260 0DF0                     l8252 0DC5  
                   l8244 0DA3                     l8404 0B1E                     l5756 0F11  
                   l8340 062D                     l8332 0603                     l8324 05F1  
                   l8316 05A1                     l8308 0775                     l8236 055F  
                   l8228 0516                     l5692 0512                     l5684 04F7  
                   l5676 048C                     l5668 0446                     l8180 0446  
                   l8172 0413                     l8164 0C72                     l8156 0C4A  
                   l8148 0C18                     l5596 0AF8                     l8092 0AE8  
                   l8084 03FA                     l8076 03C5                     l8068 03A2  
                   l5773 0B1E                     l5757 0F23                     l5693 052D  
                   l5685 04C5                     l5669 0581                     l5597 0AF7  
                   l8502 0FFF                     l8430 0E31                     l8422 07FA  
                   l8414 07B2                     l8270 0E28                     l8262 0DFC  
                   l8254 0DCD                     l5950 0DCD                     l5942 0DB6  
                   l8246 0DAC                     l8406 0B3A                     l5774 0B3A  
                   l5758 0F48                     l8350 065E                     l8342 0636  
                   l8334 0608                     l8326 05F2                     l8318 05B4  
                   l5694 0563                     l8238 0563                     l5678 04A6  
                   l8190 0465                     l8182 044F                     l8174 0431  
                   l8166 0C7B                     l8158 0C4B                     l5598 0B0C  
                   l8094 0AED                     l8078 03D6                     l8086 0402  
                   l5951 0DEF                     l5759 0F34                     l5687 04DF  
                   l5679 04A7                     l5599 0B0C                     l8440 0E58  
                   l5792 0E40                     l8432 0E3C                     l8424 07FC  
                   l8416 07E4                     l8408 0776                     l8264 0E04  
                   l5952 0DFC                     l8256 0DD1                     l8248 0DB5  
                   l5944 0DAC                     l8360 0EBC                     l8352 0667  
                   l8344 063D                     l8336 060C                     l8328 05F3  
                   l8280 06C8                     l8272 0696                     l5688 04E0  
                   l8192 0469                     l8184 0450                     l8176 0435  
                   l8168 0C8D                     l8096 0AF8                     l8088 0409  
                   l5793 0E50                     l5777 07AE                     l5953 0DF0  
                   l5945 0E29                     l5689 04EF                     l5794 0EA2  
                   l8450 0E91                     l8442 0E5C                     l8434 0E40  
                   l8426 07FF                     l8418 07E6                     l5778 07E4  
                   l8266 0E0E                     l5954 0E00                     l8258 0DDF  
                   l5946 0DC5                     l8370 0EF1                     l8362 0ED1  
                   l8354 0670                     l8346 0642                     l8338 0624  
                   l8290 070E                     l8282 06D1                     l8274 06AB  
                   l8194 046D                     l8186 0454                     l8178 043B  
                   l8098 0B9F                     l5795 0E6A                     l5779 07FF  
                   l5955 0E0C                     l5947 0DB7                     l8460 0EBB  
                   l8452 0E9A                     l5796 0E5C                     l8444 0E6A  
                   l8436 0E44                     l8428 0E2A                     l7820 07FC  
                   l5956 0E29                     l8268 0E24                     l5948 0DCC  
                   l8380 0F0F                     l8372 0EF9                     l8364 0EDA  
                   l8356 0677                     l8348 0646                     l8292 070F  
                   l8284 06D2                     l8276 06B4                     l8196 0472  
                   l8188 045A                     l7900 0B90                     l5797 0E6F  
                   l5949 0DE8                     l8470 0F72                     l8462 0F58  
                   l5798 0E70                     l8446 0E70                     l8454 0EA2  
                   l8438 0E50                     l7822 07FE                     l8390 0F35  
                   l8382 0F11                     l8374 0EFB                     l8366 0EDB  
                   l8358 0695                     l8294 0717                     l8286 0705  
                   l8278 06B5                     l8198 0474                     l7910 0A60  
                   l7830 0BDD                     l7902 0B94                     l5799 0E91  
                   l8480 0F96                     l8472 0F7D                     l8464 0F5F  
                   l8456 0EA6                     l8448 0E82                     l8392 0F41  
                   l8376 0EFF                     l8384 0F24                     l8368 0EF0  
                   l8296 071C                     l8288 0706                     l7912 0A63  
                   l7840 0BEE                     l7832 0BE1                     l7824 0BD0  
                   l7904 0B97                     l7920 001C                     l8490 0FD3  
                   l8482 0FA4                     l8474 0F82                     l8466 0F6A  
                   l8458 0EB2                     l8386 0F2A                     l8394 0F48  
                   l8378 0F06                     l8298 0737                     l7842 0BEF  
                   l7834 0BE2                     l7826 0BDA                     l7906 0B98  
                   l7850 0B6F                     l7930 0030                     l7922 001F  
                   l7914 0013                     l8492 0FD5                     l8484 0FAA  
                   l8476 0F8A                     l8468 0F6E                     l8396 0F4C  
                   l8388 0F33                     l7908 0A5D                     l7844 0BFA  
                   l7836 0BE4                     l7828 0BDB                     l7860 0B74  
                   l7852 0B70                     l7940 0061                     l7932 004B  
                   l7924 0029                     l7916 0016                     _ADON 00F8  
                   l8494 0FDE                     l8486 0FB3                     l8478 0F92  
                   l8398 0B0D                     l7846 0BFE                     l7838 0BE7  
                   l7870 0B79                     l7862 0B75                     l7854 0B71  
                   l7942 0069                     l7950 00C6                     l7934 0051  
                   l7926 002B                     l7918 0019                     l8488 0FC5  
                   l8496 0FE6                     l7880 0B7E                     l7872 0B7A  
                   l7864 0B76                     l7856 0B72                     l7848 0B6B  
                   l7960 01BB                     l7952 0182                     l7944 006A  
                   l7936 0057                     l7928 002F                     l8498 0FEA  
                   l7890 0B83                     l7882 0B7F                     l7874 0B7B  
                   l7866 0B77                     l7858 0B73                     l7970 0210  
                   l7962 01D4                     l7954 0185                     l7946 00B7  
                   l7938 0059                     l7892 0B84                     l7884 0B80  
                   l7876 0B7C                     l7868 0B78                     l7980 0229  
                   l7972 021A                     l7964 01F3                     l7956 0191  
                   l7948 00BF                     l7990 0D21                     l7894 0B85  
                   l7886 0B81                     l7878 0B7D                     l7982 0231  
                   l7974 021E                     l7966 01FB                     l7958 01B8  
                   l7992 0D28                     l7896 0B86                     l7888 0B82  
                   l7984 0239                     l7976 0221                     l7968 0203  
                   l7994 0D2D                     l7986 0A7E                     l7898 0B89  
                   l7978 0228                     l7996 0D31                     l7988 0D14  
                   l7998 0D3D                     STR_1 0843                     STR_2 0832  
                   STR_3 0832                     STR_4 0810                     STR_5 0821  
                   _T0CS 040D                     u3000 0D27                     u3001 0D26  
                   u3010 0D2D                     u3011 0D2C                     _T0SE 040C  
                   u3100 024D                     u3020 0D3B                     u3101 024C  
                   u3021 0D3A                     u3110 025D                     u3030 0D43  
                   u3111 025C                     u3031 0D42                     u3200 0BA8  
                   u3120 0277                     u3040 0D49                     u3201 0BA7  
                   u3121 0276                     u3041 0D48                     u4010 0F46  
                   u3210 0BAF                     u3130 0376                     u3050 0D57  
                   u4011 0F45                     u3211 0BAE                     u3131 0375  
                   u3051 0D56                     u4100 0E44                     u4020 0F4C  
                   u3300 0C40                     u3220 0BB9                     u3140 0391  
                   u3060 0D5D                     u4101 0E43                     u4005 0F37  
                   u3301 0C3F                     u3221 0BB5                     u4110 0E58  
                   u4030 0B14                     u3310 0C5A                     u3150 03AC  
                   u3070 0D6B                     u4111 0E57                     u4031 0B13  
                   u3311 0C59                     u3071 0D6A                     u4200 0F92  
                   u4040 077C                     u3400 045A                     u3240 0BCE  
                   u3160 03C5                     u3080 0D7D                     u4201 0F91  
                   u4041 077B                     u3401 0459                     u3321 0C63  
                   u3241 0BCD                     u3161 03C4                     u3081 0D7C  
                   u4130 0E6E                     u4050 079A                     u3410 0464  
                   u3322 0C6A                     u3234 0BBC                     u3170 0411  
                   u3090 0B69                     u4131 0E6D                     u4051 079B  
                   u3411 0463                     u3323 0C71                     u3171 0410  
                   u3091 0B68                     u4220 0FA8                     u4140 0E82  
                   u4060 07B2                     u4052 07A0                     u3500 04C4  
                   u3420 046D                     u3180 0AF5                     u4221 0FA7  
                   u4141 0E81                     u4125 0E5E                     u4061 07B1  
                   u4053 07A1                     u3501 04C3                     u3421 046C  
                   u3181 0AF4                     u4070 07D0                     u3430 0472  
                   u3350 0C8C                     u3190 0B0B                     u4215 0F98  
                   u4071 07D1                     u3431 0471                     u3351 0C8B  
                   u3335 0C74                     u3191 0B0A                     u4240 0FC5  
                   u4160 0EA0                     u4080 07FA                     u4072 07D6  
                   u3600 0DA3                     u3520 04D6                     u3440 048B  
                   u3360 0435                     u4241 0FC4                     u4161 0E9F  
                   u4145 0E7E                     u4081 07F9                     u4073 07D7  
                   u3521 04D5                     u3441 048A                     u3345 0C7C  
                   u4170 0EA6                     u4090 0E31                     u3610 0DAB  
                   u3530 04DE                     u3370 043B                     u4235 0FAC  
                   u4155 0E92                     u4091 0E30                     u3611 0DAA  
                   u3531 04DD                     u3515 04C7                     u3371 043A  
                   u4260 0FE4                     u4180 0F5F                     u3700 0E28  
                   u3460 049D                     u3380 0445                     u2900 0C04  
                   u4261 0FE3                     u4245 0FC1                     u4181 0F5E  
                   u4085 07F6                     u3461 049C                     u3381 0444  
                   u2901 0C03                     u4270 0FEA                     u4190 0F72  
                   u3630 0DCB                     u3710 06AB                     u3550 04F5  
                   u3470 04A5                     u3390 0454                     u2910 002F  
                   u4255 0FD6                     u4191 0F71                     u3631 0DCA  
                   u3711 06AA                     u3551 04F4                     u3471 04A4  
                   u3455 048E                     u3800 05B4                     u3720 06C8  
                   u3560 04FB                     u2920 0057                     u3625 0DBC  
                   u3801 05B3                     u3721 06C7                     u3561 04FA  
                   u3545 04E2                     u2921 0056                     u3650 0DEE  
                   u3810 05D1                     u3730 06E5                     u3570 0516  
                   u3490 04BC                     u2930 0068                     u3651 0DED  
                   u3571 0515                     u3491 04BB                     u2931 0067  
                   _PEIE 005E                     u3820 05E6                     u3740 06FA  
                   u2940 00C5                     u3645 0DE0                     u3581 0537  
                   u3485 04A9                     u2941 00C4                     u3670 0E00  
                   u3830 060C                     u3590 0549                     u3582 053E  
                   u2950 0182                     u3671 0DFF                     u3831 060B  
                   u3815 05CC                     u3735 06E0                     u3591 0548  
                   u3583 0545                     u2951 0181                     _RBIE 005B  
                   u3680 0E04                     u3920 0676                     u3760 0737  
                   u2960 01B8                     _RBIF 0058                     u3681 0E03  
                   u3665 0DF4                     u3921 0675                     u3905 065F  
                   u3841 0615                     u3825 05E1                     u3761 0736  
                   u3745 06F5                     u2961 01B7                     u3690 0E19  
                   u3930 0ED1                     u3842 061C                     u2890 0BED  
                   u2970 0227                     u3931 0ED0                     u3915 0668  
                   u3843 0623                     u3755 071E                     u2891 0BEC  
                   u2971 0226                     _RCIE 0465                     u3940 0EE9  
                   u3780 0756                     u2980 023F                     u3781 0755  
                   u3765 0733                     u2981 023E                     u3950 0EFF  
                   u3870 063C                     u3790 0597                     u2990 0D1C  
                   u3695 0E14                     u3951 0EFE                     u3871 063B  
                   u3855 0625                     u3791 0596                     u3775 0749  
                   u2991 0D1B                     u3960 0F06                     u3880 0646  
                   u3961 0F05                     u3945 0EE4                     u3881 0645  
                   u3865 062F                     _PIR1 000C                     u3891 064F  
                   u3980 0F22                     u3892 0656                     u3981 0F21  
                   u3893 065D                     u3990 0F2A                     u3991 0F29  
                   u3975 0F12                     _TMR0 0001                     _TXIE 0464  
                   _Temp 00B4             _ADC_DATA_BUF 0073                     _main 0013  
                   btemp 007E                     start 0011            __CFG_IESO$OFF 0000  
          ___fltol@sign1 005E          __end_of___aldiv 1000          __end_of___almod 0EBC  
        __end_of___fladd 0582                    ?_main 0075          __end_of___fldiv 0776  
          __CFG_WDTE$OFF 0000          __end_of___flmul 0696          __end_of___fltol 0F58  
          _Downside_Data 00BC                    _ANSEL 009B                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  _SSPIE 0463      ___lmul@multiplicand 0024            __CFG_PWRTE$ON 0000  
          ___awtofl@sign 0030                    _nRBPU 040F                    _Power 0C0C  
                  _errno 006C          __end_of_hw_init 0B9C                    main@i 00EA  
       __end_of_Adc_init 0C0C           __CFG_BOREN$OFF 0000                    pclath 000A  
             _Cycle_Unit 0071         DoubletoAscii@dec 00E4         DoubletoAscii@flg 00E0  
                  status 0003                    wtemp0 007E          ??_DoubletoAscii 0065  
         __CFG_MCLRE$OFF 0000          __initialization 0ABB             __end_of_main 0244  
                 ??_main 0067                   ?_Power 002D                   _ADCON0 001F  
                 _ADCON1 009F                   _CCP1IE 0462                   _ADRESH 001E  
                 _ADRESL 009E         __end_of___flpack 0E2A         __end_of___awtofl 0B3B  
                 _INT0IE 005C                   _INT0IF 0059                   i1l1830 0CD9  
                 i1l1822 0CEE                   i1l1831 0CDA                   i1l1823 0CAA  
                 i1l1832 0CDB                   i1l1824 0CC0                   i1l1833 0D08  
                 i1l1825 0CDD                   i1l1834 0D07                   i1l1826 0CC1  
                 i1l1835 0D08                   i1l1827 0CEE                   i1l1828 0CCE  
                 i1l1829 0CD4                   i1l7150 0C9B                   i1l7160 0CAA  
                 i1l7152 0C9C                   i1l7170 0CC9                   i1l7162 0CB9  
                 i1l7154 0C9D                   i1l7172 0CCC                   i1l7164 0CBB  
                 i1l7180 0CDD                   i1l7156 0CA1                   i1l7148 0C97  
                 i1l7182 0CF3                   i1l7174 0CCF                   i1l7166 0CBC  
                 i1l7158 0CA7                   i1l7184 0CF8                   u150_20 0CF3  
                 i1l7176 0CD4                   i1l7168 0CC1                   u150_21 0CF2  
                 i1l7178 0CDC                   _INTEDG 040E                   u151_20 0CF8  
                 u151_21 0CF7                   u147_20 0C9B                   u147_21 0C9A  
                 u148_20 0CA7                   u148_21 0CA6                   u149_20 0CB9  
                 u149_21 0CB8                   _OSCCON 008F                   _TMR0IE 005D  
                 _TMR0IF 005A                   _TMR1IE 0460                   _TMR2IE 0461  
  __end_of_vfd_data_init 0A99                   Power@i 0033                   ___flge 0776  
                 ___lmul 0C4B                ??___aldiv 0040                ??___almod 0040  
              ??___fladd 004D                ??___fldiv 0032                ??___flmul 0039  
              ??___fltol 0059         __end_of_int_ctrl 0D14         __end_of_int_init 0A65  
                 _strcat 0AE0                   clrloop 0A66                   _strcpy 0B3B  
       __end_of_vfd_init 0D9D                ??_hw_init 0022              _ConvertStep 0070  
                 saved_w 007E        DoubletoAscii@data 0060               ___fladd@f1 0045  
             ___fladd@f2 0049               ___flge@ff1 0020               ___flge@ff2 0024  
             ___fldiv@f1 002E               ___fldiv@f2 002A               ___fldiv@f3 0037  
__end_of__initialization 0ADD               ___flmul@f1 0031               ___flmul@f2 0035  
        vfd_write@txdata 0024               ___fltol@f1 0055               ___awtofl@c 002A  
         __pcstackCOMMON 0075            __end_of_Power 0C4B             __pidataBANK3 0A99  
         DoubletoAscii@i 00E5                ?_Adc_init 0075                  ??_Power 0032  
             __pbssBANK0 006A               __pbssBANK1 00A0               __pbssBANK3 01B2  
             __pmaintext 0013                  ?___flge 0020                  ?___lmul 0020  
             __pintentry 0004                ?___flpack 0020           ___lmul@product 0029  
              ?___awtofl 002A               ??_Adc_init 0020                  ?_strcat 0020  
                ?_strcpy 0020       __size_of_vfd_write 0034                  _Adc_Buf 00A0  
             __stringtab 0800                ?_int_ctrl 0075                ?_int_init 0075  
              Adc_init@i 0021                ?_vfd_init 0075                  _Rly_str 0190  
                ___aldiv 0F58          __size_of___flge 008A                  ___almod 0E2A  
                ___fladd 0413                  ___fldiv 0696          __size_of___lmul 004C  
                ___flmul 0582                  ___fltol 0EBC               ??___flpack 0026  
             ??___awtofl 002E          __size_of_strcat 002D          __size_of_strcpy 0030  
                _hw_init 0B6B         ___aldiv@dividend 003C                  main@sum 00E6  
   end_of_initialization 0ADD              Power@result 0034                  init_ram 0A71  
             ??_int_ctrl 0075               ??_int_init 0020        __end_of_vfd_write 0BD0  
  __end_of_DoubletoAscii 0413               ??_vfd_init 002B         ___aldiv@quotient 0043  
     DoubletoAscii@ascii 0064              ___fldiv@exp 003C                _Adc_point 00BB  
         _AdcDataGetFlag 00BA              ___flmul@exp 003E              _Upside_Data 00CD  
         __end_of___flge 0800           __end_of___lmul 0C97        __size_of_Adc_init 003C  
         __end_of_strcat 0B0D           __end_of_strcpy 0B6B   __size_of_vfd_data_init 001B  
    start_initialization 0ABB                 ??___flge 0028                 ??___lmul 0028  
              Power@data 002D              __pdataBANK3 0190                 ??_strcat 0021  
               ??_strcpy 0024        __size_of___flpack 008D        __size_of___awtofl 002E  
            __pbssCOMMON 0070            __pcstackBANK0 0020            __pcstackBANK1 00E0  
    __end_of__stringdata 0854              _T05_Counter 0072            _vfd_data_init 0A7E  
      __size_of_int_ctrl 007D        __size_of_int_init 0008                 ?___aldiv 0038  
               ?___almod 0038                 ?___fladd 0045                 ?___fldiv 002A  
              __ptext740 0A7E                __ptext741 0D14                __ptext750 0582  
              __ptext742 0B3B                __ptext751 0EBC                __ptext743 0244  
               ?___flmul 0031                __ptext752 0B0D                __ptext744 0AE0  
              __ptext753 0D9D                __ptext745 0B9C                __ptext737 0B6B  
              __ptext754 0776                __ptext746 0C0C                __ptext738 0BD0  
              __ptext755 0E2A                __ptext747 0C4B                __ptext739 0A5D  
              __ptext756 0F58                __ptext748 0413                __ptext757 0C97  
              __ptext749 0696                __ptext758 0000                 ?___fltol 0055  
      __size_of_vfd_init 0089         ___almod@dividend 003C                __pstrings 0800  
               ?_hw_init 0075           __size_of_Power 003F        vfd_init@busy_flag 002C  
        ___aldiv@divisor 0038        interrupt_function 0004          ___aldiv@counter 0041  
         ?_vfd_data_init 0075               vfd_write@i 0023                 _GO_nDONE 00FA  
              _vfd_write 0B9C                 _Adc_Data 00B8                 _Adc_data 00DE  
               _Adc_init 0BD0              __stringbase 080F              __stringdata 0810  
      ___lmul@multiplier 0020                 _Vfd_Data 01B2               ?_vfd_write 0075  
              init_fetch 0A6D                 Power@num 0031         __size_of___aldiv 00A8  
       __size_of___almod 0092         __size_of___fladd 016F            vfd_write@data 0022  
       __size_of___fldiv 00E0         __size_of___flmul 0114         __size_of___fltol 009C  
               ___flpack 0D9D                 ___awtofl 0B0D       __end_of__stringtab 0810  
  DoubletoAscii@int_data 00E2               strcat@from 0020         __size_of_hw_init 0031  
 __size_of_DoubletoAscii 01CF          ___almod@divisor 0038          ___almod@counter 0041  
             strcpy@from 0022          ??_vfd_data_init 002B            __size_of_main 0231  
              vfd_init@i 002D                 _int_ctrl 0C97                 _int_init 0A5D  
               clear_ram 0A65                 _vfd_init 0D14    ___flmul@f3_as_product 003F  
   DoubletoAscii@databuf 00E1                 intlevel1 0000               _T1_Counter 006A  
              stringcode 080A            _DoubletoAscii 0244              ??_vfd_write 0020  
               strcat@cp 0023                 strcat@to 0022                 strcpy@cp 0029  
               strcpy@to 0020                 stringdir 080A                 stringtab 0800  
           ___aldiv@sign 0042       __CFG_FOSC$INTOSCIO 0000             ___almod@sign 0042  
           ___fladd@exp1 0054             ___fladd@exp2 0053             ___fladd@sign 0052  
         ?_DoubletoAscii 0060  
